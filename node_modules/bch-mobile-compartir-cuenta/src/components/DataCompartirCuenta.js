import React, { memo } from 'react';
import CompartirCuenta from './CompartirCuenta';
import { BANCOS } from 'bch-mobile-constants';
import FormatUtils from 'bch-mobile-utils';

const DataCompartirCuenta = (props) => {
    const {
        onPress = () => {},
        usuario: {
            rutCliente,
            nombre,
            apellidoPaterno,
            emailParticularCliente,
            codigoMarca,
        },
        cuenta: {
            tipoCuentaNombre,
            numeroCuenta,
        },
    } = props;

    const primerNombre = nombre.split(' ')[0].trim();
    const nombreFormateado = `${primerNombre} ${apellidoPaterno}`;
    const rut = rutCliente && FormatUtils.formatRut(rutCliente);
    let banco = BANCOS[0].nombre;
    if (codigoMarca) {
        const getBanco = BANCOS.find(banco => banco.id.toString() === codigoMarca);
        banco = getBanco.nombre;
    }
    const numeroCuentaFormateada = FormatUtils.numeroProducto(numeroCuenta);
    const email = emailParticularCliente && emailParticularCliente.trim();

    /*
    * Se construye la estructura de los datos a compartir.
    * Formato:
    * - Nombre (se debe enviar Primer nombre + apellidoPaterno)
    * - Rut (formato 12.345.678-9)
    * - Banco
    * - Nombre cuenta
    * - NÃºmero cuenta (formato xx-xxx-xxxxx-xx)
    * - Email
    */
    const validEmail = email && `\n${email}`;
    const compartirCuentaFormateada = `${nombreFormateado}\n${rut}\n${banco}\n${tipoCuentaNombre}\n${numeroCuentaFormateada}${validEmail}`;

    return rutCliente && <CompartirCuenta data={compartirCuentaFormateada} onPress={onPress} {...props} />;
};

export default memo(DataCompartirCuenta);
