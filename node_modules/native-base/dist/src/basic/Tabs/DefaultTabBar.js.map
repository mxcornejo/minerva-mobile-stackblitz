{"version":3,"sources":["../../../../src/basic/Tabs/DefaultTabBar.js"],"names":["ReactNative","require","StyleSheet","View","Animated","Platform","Button","DefaultTabBar","propTypes","goToPage","PropTypes","func","activeTab","number","tabs","array","backgroundColor","string","activeTextColor","inactiveTextColor","disabledTextColor","tabStyle","oneOfType","object","renderTab","underlineStyle","shape","style","any","tabContainerStyle","accessible","accessibilityLabel","contextTypes","theme","getDefaultProps","variable","topTabBarActiveTextColor","topTabBarTextColor","tabBarDisabledTextColor","tabFontSize","renderTabOption","name","page","isTabActive","onPressHandler","activeTabStyle","textStyle","activeTextStyle","tabHeaderStyle","disabled","headerContent","props","children","undefined","fontWeight","isDisabled","textColor","color","accessibilityState","selected","flex","fontSize","_","random","render","variables","context","platformStyle","containerWidth","numberOfTabs","length","tabUnderlineStyle","position","width","height","topTabBarActiveBorderColor","bottom","left","scrollValue","interpolate","inputRange","outputRange","tabDefaultBg","map","StyledTab","mapPropsToStyleNames"],"mappings":"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","file":"DefaultTabBar.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport createReactClass from 'create-react-class';\nimport _ from 'lodash';\nimport { connectStyle, StyleProvider } from 'native-base-shoutem-theme';\nimport mapPropsToStyleNames from '../../utils/mapPropsToStyleNames';\nimport variable from './../../theme/variables/platform';\nimport { TabHeading } from '../TabHeading';\nimport { Text } from '../Text';\nimport { TabContainer } from '../TabContainer';\nconst ReactNative = require('react-native');\n\nconst { StyleSheet, View, Animated, Platform } = ReactNative;\nconst Button = require('./Button');\n\nconst DefaultTabBar = createReactClass({\n  propTypes: {\n    goToPage: PropTypes.func,\n    activeTab: PropTypes.number,\n    tabs: PropTypes.array,\n    backgroundColor: PropTypes.string,\n    activeTextColor: PropTypes.string,\n    inactiveTextColor: PropTypes.string,\n    disabledTextColor: PropTypes.string,\n    tabStyle: PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.array,\n    ]),\n    renderTab: PropTypes.func,\n    underlineStyle: PropTypes.shape({\n      style: PropTypes.any,\n    }),\n    tabContainerStyle: PropTypes.shape({\n      style: PropTypes.any,\n    }),\n    accessible: PropTypes.array,\n    accessibilityLabel: PropTypes.array\n  },\n  contextTypes: {\n    theme: PropTypes.object\n  },\n\n  getDefaultProps() {\n    return {\n      activeTextColor: variable.topTabBarActiveTextColor,\n      inactiveTextColor: variable.topTabBarTextColor,\n      disabledTextColor: variable.tabBarDisabledTextColor,\n      backgroundColor: 'transparent',\n      tabFontSize: variable.tabFontSize\n    };\n  },\n\n  renderTabOption(name, page) {},\n\n  renderTab(\n    name,\n    page,\n    isTabActive,\n    onPressHandler,\n    tabStyle,\n    activeTabStyle,\n    textStyle,\n    activeTextStyle,\n    tabHeaderStyle,\n    tabFontSize,\n    disabled,\n    disabledTextColor,\n    accessible,\n    accessibilityLabel\n  ) {\n    const headerContent =\n      typeof name !== 'string' ? name.props.children : undefined;\n    const { activeTextColor, inactiveTextColor } = this.props;\n    const fontWeight = isTabActive ? 'bold' : 'normal';\n    const isDisabled = !!disabled;\n    let textColor;\n    if (isDisabled) {\n      textColor = disabledTextColor;\n    } else if (isTabActive) {\n      textColor = activeTextStyle ? activeTextStyle.color : activeTextColor; // activeTextColor: default color for active Tab\n    } else {\n      textColor = textStyle ? textStyle.color : inactiveTextColor; // inactiveTextColor: default color for inactive Tab\n    }\n    const accessibilityState = {\n      disabled: isDisabled ? true : false,\n      selected: isTabActive ? true : false,\n    };\n    if (typeof name === 'string') {\n      return (\n        <Button\n          style={{ flex: 1 }}\n          disabled={isDisabled}\n          key={name}\n          accessible={accessible}\n          accessibilityRole='tab'\n          accessibilityLabel={accessibilityLabel}\n          accessibilityState={accessibilityState}\n          onPress={() => onPressHandler(page)}\n        >\n          <TabHeading\n            style={isTabActive ? activeTabStyle : tabStyle}\n            active={isTabActive}\n          >\n            <Text\n              style={[\n                { fontSize: tabFontSize },\n                isTabActive ? activeTextStyle : textStyle,\n                { color: textColor }\n              ]}\n            >\n              {name}\n            </Text>\n          </TabHeading>\n        </Button>\n      );\n    }\n    return (\n      <Button\n        style={{ flex: 1 }}\n        disabled={isDisabled}\n        key={_.random(1.2, 5.2)}\n        accessible={accessible}\n        accessibilityRole='tab'\n        accessibilityLabel={accessibilityLabel}\n        accessibilityState={accessibilityState}\n        onPress={() => onPressHandler(page)}\n      >\n        <TabHeading style={tabHeaderStyle} active={isTabActive}>\n          {headerContent}\n        </TabHeading>\n      </Button>\n    );\n  },\n\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n    const platformStyle = variables.platformStyle;\n    const containerWidth = this.props.containerWidth;\n    const numberOfTabs = this.props.tabs.length;\n    const tabUnderlineStyle = {\n      position: 'absolute',\n      width: containerWidth / numberOfTabs,\n      height: 4,\n      backgroundColor: variables.topTabBarActiveBorderColor,\n      bottom: 0\n    };\n\n    const left = this.props.scrollValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, containerWidth / numberOfTabs]\n    });\n    return (\n      <TabContainer\n        style={[\n          { backgroundColor: variables.tabDefaultBg },\n          this.props.tabContainerStyle ? this.props.tabContainerStyle : {}\n        ]}\n      >\n        {this.props.tabs.map((name, page) => {\n          const isTabActive = this.props.activeTab === page;\n          const renderTab = this.props.renderTab || this.renderTab;\n          return renderTab(\n            name,\n            page,\n            isTabActive,\n            this.props.goToPage,\n            this.props.tabStyle[page],\n            this.props.activeTabStyle[page],\n            this.props.textStyle[page],\n            this.props.activeTextStyle[page],\n            this.props.tabHeaderStyle[page],\n            variables.tabFontSize,\n            this.props.disabled[page],\n            this.props.disabledTextColor,\n            this.props.accessible[page],\n            this.props.accessibilityLabel[page]\n          );\n        })}\n        <Animated.View\n          style={[tabUnderlineStyle, { left }, this.props.underlineStyle]}\n        />\n      </TabContainer>\n    );\n  }\n});\n\n// module.exports = DefaultTabBar;\nconst StyledTab = connectStyle(\n  'NativeBase.DefaultTabBar',\n  {},\n  mapPropsToStyleNames\n)(DefaultTabBar);\nexport { StyledTab as DefaultTabBar };\n"]}