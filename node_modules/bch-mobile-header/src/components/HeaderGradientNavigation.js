/* eslint-disable react/jsx-props-no-spreading */
import React from 'react';
import { HelperStyle, Platform, LogoIcon } from 'react-native-minerva';
import HeaderBackButton from './HeaderBackButton';
import HeaderGradientTitle from './HeaderGradientTitle';
import HeaderBackground from './HeaderBackground';

export const headerTitle = (text, style) => <HeaderGradientTitle style={style}>{text}</HeaderGradientTitle>;

export const headerStyle = [
    HelperStyle.bg_transparent,
    HelperStyle.bbw_0,
    { elevation: 0, shadowColor: 'transparent' },
];

export const onPressHeaderBackButton = (navigation, route) => () => {
    if (route && route !== 'back') {
        navigation?.navigate(route);
    } else {
        navigation?.pop();
    }
};

export const headerLeftObject = (navigation, route, theme = 'light') => {
    const tintColor = theme === 'light' ? HelperStyle.white.color : HelperStyle.gray.color;
    return <HeaderBackButton tintColor={tintColor} onPress={onPressHeaderBackButton(navigation, route)} />;
};

/*
 * Estilos del header
 */
export const HeaderGradientNavigation = {
    headerStyle,
    headerBackground: (LinearGradientProps = {}) => <HeaderBackground {...LinearGradientProps} />,
};

/*
 * Estilo de header transparente
 */
export const headerTransparentNavigation = {
    headerTransparent: true,
    headerLeft: null,
    headerShown: null,
};

/*
 * Construye el Header con fondo degradado
 */
export const BuildHeaderGradientNavigation = (title, route, LinearGradientProps) => (props) => {
    const { navigation } = props;
    const hasMargin = Platform.android && !route ? HelperStyle.ml_4 : null;
    const handlerHeaderTitle = () => headerTitle(title, hasMargin);
    const handlerHeaderLeft = () => (route ? headerLeftObject(navigation, route) : null);
    const handlerHeaderRight = () => <LogoIcon style={HelperStyle.mr_4} />;
    const handlerHeaderBackground = () => <HeaderBackground {...LinearGradientProps} />;
    return {
        headerBackground: handlerHeaderBackground,
        headerStyle,
        headerTitle: handlerHeaderTitle,
        headerLeft: handlerHeaderLeft,
        headerRight: handlerHeaderRight,
    };
};

export default HeaderGradientNavigation;
