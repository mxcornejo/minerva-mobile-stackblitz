// Nota: Para poder emplear estos metodos es necesario poder invocar al servicio de regiones y luego se pueden usar estos filtros.
/**
 * Obtiene las sucursales de una region
 * @param {Array} offices arreglo de oficinas
 */
const filterOffice = offices => offices.sort((a, b) => {
    if (a.unitName > b.unitName) {
        return 1;
    }
    if (a.unitName < b.unitName) {
        return -1;
    }
    return 0;
});

/**
 * Ciudades de region seleccionada
 * @param {Array} cities Arreglo de ciudades
 */
const filterCities = (cities) => {
    let officesList = [];
    cities.forEach((city) => {
        officesList = officesList.concat(city.oficinas);
    });
    return filterOffice(officesList);
};

/**
 * Obtiene las oficinas de la region selccionada
 * @param {object} region region seleccionada
 * @param {Array} regions arreglo de regiones
 */
const getOfficesforRegion = (region, regions) => {
    let cities = [];
    let regionCities = [];
    regions.forEach((reg) => {
        if (reg.numero === region.numero) {
            cities = reg.ciudades ? reg.ciudades : [];
            regionCities = filterCities(cities);
        }
    });
    return regionCities;
};

export default getOfficesforRegion;
