import React from 'react';
import { isFunction, isObject } from 'lodash';

const render = (component, conditional = true) => {
    if (conditional) {
        if (isFunction(component)) return component();
        if (isObject(component)) return component;
    }
    return null;
};

const func = (fn, conditional = true) => fn && conditional && fn();

const style = (conditional, styleTrue, styleFalse = null) =>
    conditional ? styleTrue : styleFalse;

const isElement = (element) => React.isValidElement(element);

const keyExtractor = (item, index, prefix = 'item') => `${prefix}-${index}`;

/**
 * Función para limpiar los elementos vacíos en un arreglo.
 *
 * @param {Array.<object>} arr - Arreglo a limpiar.
 * @returns {Array.<object>} Retorna arreglo sin valores vacíos.
 */
const truthyArray = (arr) => arr.filter(Boolean);

/**
 * Función para devolver último estilo en un arreglo de estilos.
 *
 * @param {Array} arrStyle - Arreglo de objectos de estilos.
 * @param {string} property - Nombre de la propiedad del estilo a buscar.
 * @returns {(object|boolean)} Retorna el objecto del estilo aplicado o false si no encontro el nombre del estilo (property).
 */
const findStyle = (arrStyle, property) => {
    const filterObject = [...truthyArray(arrStyle)]
        .reverse()
        .find((item) => Object.keys(item).includes(property));
    if (filterObject) {
        return Object.keys(filterObject)
            .filter((key) => property.includes(key))
            .reduce((obj, key) => {
                obj[key] = filterObject[key];
                return obj;
            }, {});
    }
    return false;
};

/**
 * Función para devolver label seguro (string).
 * Uso: validar prop accessibilityLabel, accessibilityHint y testID como string.
 *
 * @param {string} value - Valor a evaluar como string.
 * @param {string} defaultValue - Valor por defecto a retonar si value no es valido.
 * @returns {string} Retorna label seguro (string).
 */
const safeLabel = (value, defaultValue = '') =>
    value?.toString() || defaultValue.toString();

const validate = {
    render,
    isElement,
    keyExtractor,
    style,
    func,
    safeLabel,
    truthyArray,
    findStyle,
};

export default validate;
