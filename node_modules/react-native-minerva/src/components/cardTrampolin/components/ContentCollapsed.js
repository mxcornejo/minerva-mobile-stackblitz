import React, { memo } from 'react';
import { View, TouchableOpacity } from 'react-native';
import {
    Card,
    Collapsible,
    HelperStyle,
    Icon,
    Text,
    Validate,
    MapList,
} from '../../../index';
import Styles from './style';
import { propTypesContentCollapsed } from '../types';
import CARDTRAMPOLIN_STR from '../CardTrampolinStr';

const ContentCollapsed = ({ onPressItem, collapsed, data, onPressClose }) => {
    const closeBarLabels = {
        accessibilityLabel: collapsed
            ? CARDTRAMPOLIN_STR.ContentCollapsed.closeBarLabelCollapsed
            : CARDTRAMPOLIN_STR.ContentCollapsed.closeBarLabel,
        accessibilityHint: collapsed
            ? CARDTRAMPOLIN_STR.ContentCollapsed.closeBarHintCollapsed
            : CARDTRAMPOLIN_STR.ContentCollapsed.closeBarHint,
    };

    const handlerOnPressItem = (props) => () => onPressItem(props);
    const renderItem = ({ item, index }) => (
        <View
            style={[
                HelperStyle.ph_1,
                HelperStyle.pt_2,
                Styles.contentCollapsedItem,
            ]}
            key={`${index}-${item?.label}`}
        >
            <TouchableOpacity
                onPress={handlerOnPressItem({ item, index })}
                style={HelperStyle.ai_c}
                accessibilityLabel={Validate.safeLabel(
                    item?.accessibilityLabel,
                    item?.label,
                )}
                accessibilityHint={Validate.safeLabel(item?.accessibilityHint)}
                testID={Validate.safeLabel(item?.testID, item?.label)}
            >
                <Icon name={item?.icon} style={HelperStyle.primary} />
                <Text
                    smaller
                    style={[
                        HelperStyle.dark,
                        HelperStyle.mb_0,
                        HelperStyle.ta_c,
                    ]}
                >
                    {item?.label}
                </Text>
            </TouchableOpacity>
        </View>
    );

    return (
        <View style={[Styles.collapsibleMain, HelperStyle.mh_4]}>
            <Card style={[HelperStyle.btlr_0, HelperStyle.btrr_0]}>
                <Collapsible
                    layoutAnimation
                    collapsed={collapsed}
                    duration={300}
                >
                    <MapList
                        data={data}
                        renderItem={renderItem}
                        style={[
                            HelperStyle.flx_row,
                            HelperStyle.ph_1,
                            HelperStyle.ai_c,
                            HelperStyle.jc_c,
                        ]}
                    />
                </Collapsible>
                <TouchableOpacity
                    onPress={onPressClose}
                    style={HelperStyle.pb_0}
                    accessibilityLabel={closeBarLabels.accessibilityLabel}
                    accessibilityHint={closeBarLabels.accessibilityHint}
                >
                    <View
                        style={[
                            Styles.modalCloseBar,
                            HelperStyle.as_c,
                            HelperStyle.bg_gray_background,
                        ]}
                    />
                </TouchableOpacity>
            </Card>
        </View>
    );
};

ContentCollapsed.propTypes = propTypesContentCollapsed;

export default memo(ContentCollapsed);
