import React, { memo } from 'react';
import PropTypes from 'prop-types';
import {
    CardItem,
    Card,
    HelperStyle,
    ListItemResumen,
    MapList,
} from '../../index';
import { propTypes as ListItemResumenTypes } from '../listItemResumen/types';

/**
 * Componente para mostar resumen de información en dos columnas.
 *
 * @component
 */
const CardResumen = (props) => {
    const {
        data,
        keyExtractor,
        bodyStyle,
        valueProps,
        labelProps,
        ...propsCard
    } = props;

    const renderListItemResumen = ({ item }) => (
        <ListItemResumen
            item={{
                ...item,
                valueProps: {
                    ...valueProps,
                    ...item?.valueProps,
                    style: [valueProps?.style, item?.valueProps?.style],
                },
                labelProps: {
                    ...labelProps,
                    ...item?.labelProps,
                    style: [labelProps?.style, item?.labelProps?.style],
                },
            }}
        />
    );

    const renderDataType = () => {
        if (Array.isArray(data)) {
            return (
                <MapList
                    data={data}
                    renderItem={renderListItemResumen}
                    keyExtractor={keyExtractor}
                />
            );
        }
        return renderListItemResumen({ item: data });
    };

    return (
        <Card
            noShadow
            bordered
            {...propsCard}
            style={[
                HelperStyle.bg_primary_background,
                HelperStyle.bc_primary_lighter,
                propsCard.style,
            ]}
        >
            <CardItem
                body
                small
                style={[HelperStyle.pt_1, HelperStyle.pb_1, bodyStyle]}
            >
                {renderDataType()}
            </CardItem>
        </Card>
    );
};

CardResumen.propTypes = {
    /**
     * Arreglo de objectos o objecto para configurar el listado de resumen <ListItemResumen />.
     */
    data: PropTypes.oneOfType([
        PropTypes.arrayOf(ListItemResumenTypes.item),
        ListItemResumenTypes.item,
    ]).isRequired,
    /**
     * Función que generar clave única por cada fila en la lista.
     */
    keyExtractor: PropTypes.func,
    /**
     * Estilos para el contenedor <CardItem.Body />.
     */
    bodyStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),
    /**
     * Propiedades del <Text> de value.
     */
    valueProps: PropTypes.objectOf(PropTypes.any),
    /**
     * Propiedades del <Text> de label.
     */
    labelProps: PropTypes.objectOf(PropTypes.any),
};
CardResumen.defaultProps = {
    bodyStyle: {},
    keyExtractor: null,
    valueProps: {},
    labelProps: {},
};

export default memo(CardResumen);
