import React, { memo } from 'react';
import { isEmpty } from 'lodash';
import PropTypes from 'prop-types';
import { View } from '../../index';
import Style from './style';

/**
 * Componente puntos.
 * Uso <InputDots />.
 *
 * @component
 */
const Dots = (props) => {
    const { active, activeStyle, inactiveStyle, large, small, style } = props;
    const dotActiveStyle = isEmpty(activeStyle) ? Style.active : activeStyle;
    return (
        <View
            style={[
                Style.dots,
                active ? dotActiveStyle : null,
                small ? Style.dotSmall : null,
                large ? Style.dotLarge : null,
                !isEmpty(inactiveStyle) && !active ? inactiveStyle : null,
                style,
            ]}
        />
    );
};

Dots.propTypes = {
    /**
     * Boleano para definir estado activo.
     */
    active: PropTypes.bool,
    /**
     * Estilos para caso activo.
     */
    activeStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),
    /**
     * Estilos para inactivo.
     */
    inactiveStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),
    /**
     * Estilos tamaño big.
     */
    large: PropTypes.bool,
    /**
     * Estilos tamaño small.
     */
    small: PropTypes.bool,
    /**
     * Estilos.
     */
    style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),
};
Dots.defaultProps = {
    active: false,
    activeStyle: {},
    inactiveStyle: {},
    large: false,
    small: false,
    style: {},
};

export default memo(Dots);
