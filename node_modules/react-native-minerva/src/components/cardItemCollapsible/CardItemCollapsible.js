import React, { useState } from 'react';
import PropTypes from 'prop-types';
import { Card, Collapsible, HelperStyle, View } from '../../index';
import CardItemCollapsibleHeader from './components/CardItemCollapsibleHeader';
import CardItemCollapsibleFooter from './components/CardItemCollapsibleFooter';

const CardItemCollapsible = ({
    headerData,
    renderBody,
    containerBodyStyle,
    renderCollapsible,
    containerCollapsibleStyle,
    footerData,
}) => {
    const [isActive, setIsActive] = useState(false);
    const changeActive = () => setIsActive((a) => !a);
    return (
        <Card cardList style={HelperStyle.flx_i}>
            <CardItemCollapsibleHeader
                title={headerData.title}
                accessibilityLabel={headerData?.titleAccessibilityLabel}
                accessibilityHint={headerData?.titleAccessibilityHint}
                testID={headerData?.titleTestID}
                iconName={headerData?.iconName}
                iconLabel={headerData?.iconLabel}
                iconAccessibilityHint={headerData?.iconAccessibilityHint}
                iconTestID={headerData?.iconTestID}
            />
            <View style={[HelperStyle.pa_4, containerBodyStyle]}>
                {renderBody()}
            </View>
            <Collapsible collapsed={!isActive} duration={500}>
                <View style={[HelperStyle.pa_4, containerCollapsibleStyle]}>
                    {renderCollapsible()}
                </View>
            </Collapsible>
            <View
                style={[
                    HelperStyle.bbw_1,
                    HelperStyle.bc_gray_transparent,
                    HelperStyle.mh_4,
                    HelperStyle.mb_3,
                ]}
            />
            <CardItemCollapsibleFooter
                titleActive={footerData?.titleActive}
                titleInactive={footerData?.titleInactive}
                accessibilityLabel={footerData?.accessibilityLabel}
                accessibilityHint={footerData?.accessibilityHint}
                testID={footerData?.testID}
                onPress={changeActive}
                showIcon={footerData?.showIcon}
                active={isActive}
            />
        </Card>
    );
};

CardItemCollapsible.propTypes = {
    /**
     * Propiedades de la sección Header.
     */
    headerData: PropTypes.shape({
        /**
         * Título del header.
         */
        title: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
        /**
         * Identificador de accesibilidad para title.
         */
        titleAccessibilityLabel: PropTypes.string,
        /**
         * Sugerencia de accesibilidad que ayuda a los usuarios a comprender qué sucederá cuando realicen una acción.
         */
        titleAccessibilityHint: PropTypes.string,
        /**
         * Identificador de pruebas para title.
         */
        titleTestID: PropTypes.string,
        /**
         * Nombre del icono.
         */
        iconName: PropTypes.string,
        /**
         * Identificador de accesibilidad para el icon.
         */
        iconLabel: PropTypes.string,
        /**
         * Sugerencia de accesibilidad que ayuda a los usuarios a comprender qué sucederá cuando realicen una acción.
         */
        iconAccessibilityHint: PropTypes.string,
        /**
         * Identificador de pruebas para el icon.
         */
        iconTestID: PropTypes.string,
    }).isRequired,
    /**
     * Renderiza componente en el area body del Card.
     */
    renderBody: PropTypes.oneOfType([PropTypes.func, PropTypes.bool])
        .isRequired,
    /**
     * Estilos para el contenedor del area body del Card.
     */
    containerBodyStyle: PropTypes.oneOfType([
        PropTypes.array,
        PropTypes.object,
    ]),
    /**
     * Renderiza componente en el area collapsible del Card.
     */
    renderCollapsible: PropTypes.oneOfType([PropTypes.func, PropTypes.bool])
        .isRequired,
    /**
     * Estilos para el contenedor del area collapsible del Card.
     */
    containerCollapsibleStyle: PropTypes.oneOfType([
        PropTypes.array,
        PropTypes.object,
    ]),
    /**
     * Propiedades de la sección Footer.
     */
    footerData: PropTypes.shape({
        /**
         * Título del boton del footer cuando el collapsible esta activo.
         */
        titleActive: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
        /**
         * Título del boton del footer cuando el collapsible esta inactivo.
         */
        titleInactive: PropTypes.oneOfType([
            PropTypes.string,
            PropTypes.number,
        ]),
        /**
         * Identificador de accesibilidad para el botón del footer.
         */
        accessibilityLabel: PropTypes.string,
        /**
         * Sugerencia de accesibilidad que ayuda a los usuarios a comprender qué sucederá cuando realicen una acción.
         */
        accessibilityHint: PropTypes.string,
        /**
         * Identificador de pruebas para el botón del footer.
         */
        testID: PropTypes.string,
        /**
         * Booleano para mostrar el icono del footer.
         */
        showIcon: PropTypes.bool,
    }),
};

CardItemCollapsible.defaultProps = {
    footerData: {},
    containerBodyStyle: {},
    containerCollapsibleStyle: {},
};

export default CardItemCollapsible;
