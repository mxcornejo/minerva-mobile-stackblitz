import React from 'react';
import PropTypes from 'prop-types';
import {
    Button,
    HelperStyle,
    Icon,
    Text,
    Validate,
    View,
} from '../../../index';

const CardItemCollapsibleFooter = ({
    titleActive,
    titleInactive,
    accessibilityLabel,
    accessibilityHint,
    testID,
    showIcon,
    active,
    onPress,
}) => {
    const title = active ? titleActive : titleInactive;
    const iconName = `icon-bch-chevron-${active ? 'up' : 'down'}`;
    return (
        <View style={HelperStyle.flx_i}>
            <Button
                small
                link
                accessibilityLabel={Validate.safeLabel(
                    accessibilityLabel,
                    title,
                )}
                accessibilityHint={Validate.safeLabel(accessibilityHint)}
                testID={Validate.safeLabel(testID, title)}
                style={[HelperStyle.as_c, HelperStyle.mb_4]}
                onPress={onPress}
            >
                <Text style={[HelperStyle.primary, HelperStyle.td_none]}>
                    {title}
                </Text>
                {showIcon ? (
                    <Icon
                        name={iconName}
                        style={[
                            HelperStyle.ml_3,
                            HelperStyle.fs_2,
                            HelperStyle.primary,
                        ]}
                    />
                ) : null}
            </Button>
        </View>
    );
};

CardItemCollapsibleFooter.propTypes = {
    /**
     * Título del boton del footer cuando el collapsible esta activo.
     */
    titleActive: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    /**
     * Título del boton del footer cuando el collapsible esta inactivo.
     */
    titleInactive: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    /**
     * Identificador de accesibilidad para el botón del footer.
     */
    accessibilityLabel: PropTypes.string,
    /**
     * Sugerencia de accesibilidad que ayuda a los usuarios a comprender qué sucederá cuando realicen una acción.
     */
    accessibilityHint: PropTypes.string,
    /**
     * Identificador de pruebas para el botón del footer.
     */
    testID: PropTypes.string,
    /**
     * Booleano para mostrar el icono del footer.
     */
    showIcon: PropTypes.bool,
    /**
     * Booleano para que determina si la propiedad collapsible esta activa.
     */
    active: PropTypes.bool,
    /**
     * Función para cambiar el estado de collapsible.
     */
    onPress: PropTypes.func.isRequired,
};

CardItemCollapsibleFooter.defaultProps = {
    titleActive: 'Cerrar detalle',
    titleInactive: 'Ver más detalle',
    accessibilityLabel: '',
    accessibilityHint: '',
    testID: '',
    showIcon: false,
    active: false,
};

export default CardItemCollapsibleFooter;
