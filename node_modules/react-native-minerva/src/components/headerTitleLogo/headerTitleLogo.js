import React from 'react';
import PropTypes from 'prop-types';
import {
    View,
    Icon,
    Logo,
    HelperStyle,
    HelperOptions,
    Scale,
} from '../../index';
import HEADERTITLELOGO_STR from './headerTitleLogoStr';

/**
 * Componente para mostrar logo Marca (BCH o BEC) y logo App.
 *
 * @component
 */
const HeaderTitleLogo = (props) => {
    const { style, white, logoBrand, logoApp, iconStyle, logoStyle, app } =
        props;

    const getOptions = () => {
        let typeApp = app;

        const Apps = {
            mibanco: 'appMiBanco',
            mipago: 'appMiPago',
            banconexion: 'appBanconexion',
            miseguro: 'appMiSeguro',
            miinversion: 'appMiInversion',
            mipass: 'appMiPass',
        };

        Object.keys(Apps).forEach((key) => {
            if (typeApp.toLowerCase().search(key) !== -1) {
                typeApp = Apps[key];
            }
        });

        const { brandName } = HelperOptions;

        // CONFIG BRAND - INICIO
        const fontSizeStyle = {
            1: HelperStyle.fs_3,
            2: { fontSize: Scale(8) },
            3: HelperStyle.fs_1,
        };
        const defaultOptions = {
            name: `icon-bch-logo-${brandName.toLowerCase()}`,
            type: `${typeApp}_${brandName.toLowerCase()}`,
            labelIcon: HEADERTITLELOGO_STR.brand[brandName],
            hintIcon: '',
            hintLogo: '',
            style: fontSizeStyle[HelperOptions.brand],
        };
        // CONFIG BRAND - INICIO
        const appMiBancoStyle = {
            1: { marginTop: Scale(2) },
            2: { marginTop: Scale(3) },
            3: { marginTop: Scale(1) },
        };

        const getConfigByApps = () => {
            const config = {
                appMiBanco: {
                    labelLogo: HEADERTITLELOGO_STR.app.miBanco,
                    style: {
                        ...defaultOptions.style,
                        ...appMiBancoStyle[HelperOptions.brand],
                    },
                },
                appMiPago: {
                    labelLogo: HEADERTITLELOGO_STR.app.miPago,
                    style: defaultOptions.style,
                },
                appBanconexion: {
                    labelLogo: HEADERTITLELOGO_STR.app.banconexion,
                    type: typeApp,
                    style: defaultOptions.style,
                },
                appMiSeguro: {
                    labelLogo: HEADERTITLELOGO_STR.app.miSeguro,
                    style: defaultOptions.style,
                },
                appMiInversion: {
                    labelLogo: HEADERTITLELOGO_STR.app.miInversion,
                    style: defaultOptions.style,
                },
                appMiPass: {
                    labelLogo: HEADERTITLELOGO_STR.app.miPass,
                    style: defaultOptions.style,
                },
            };
            if (white) {
                Object.keys(config).forEach((key) => {
                    config[key].style = {
                        ...config[key].style,
                        ...HelperStyle.white,
                    };
                    config[
                        key
                    ].type = `${typeApp}_${brandName.toLowerCase()}_blanco`;
                    if (key === 'appBanconexion') {
                        config[key].type = `${typeApp}_blanco`;
                    }
                });
            }
            return config[typeApp];
        };

        return { ...defaultOptions, ...getConfigByApps() };
    };

    const options = getOptions();

    const renderIcon = () => (
        <Icon
            name={options.name}
            style={[
                HelperStyle.brand,
                HelperStyle.fs_3,
                options.style,
                iconStyle,
            ]}
            accessible
            accessibilityLabel={options.labelIcon}
            accessibilityHint={options.hintIcon}
            testID={options.labelIcon}
        />
    );

    const renderLogo = () => (
        <Logo
            type={options.type}
            accessible
            accessibilityLabel={options.labelLogo}
            accessibilityHint={options.hintLogo}
            testID={options.labelLogo}
            style={[HelperStyle.mb_0, HelperStyle.ml_3, logoStyle]}
        />
    );

    const renderContent = () => (
        <View
            style={[
                HelperStyle.flx_row,
                HelperStyle.jc_c,
                HelperStyle.ai_c,
                style,
            ]}
        >
            {logoBrand && renderIcon()}
            {logoApp && renderLogo()}
        </View>
    );
    return renderContent();
};

HeaderTitleLogo.propTypes = {
    /**
     * Boleano para mostrar o no logo Marca.
     */
    logoBrand: PropTypes.bool,
    /**
     * Boleano para mostrar o no logo App.
     */
    logoApp: PropTypes.bool,
    /**
     * Logo de la App.
     */
    app: PropTypes.string,
    /**
     * Renderiza logos variantes color blanco.
     */
    white: PropTypes.bool,
    /**
     * Estilos para el contenedor.
     */
    style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),
    /**
     * Estilos para <Icon /> (Logo Marca).
     */
    iconStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),
    /**
     * Estilos para <Logo /> (Logo App).
     */
    logoStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),
};
HeaderTitleLogo.defaultProps = {
    logoBrand: true,
    logoApp: true,
    app: 'appMiBanco',
    white: false,
    style: {},
    iconStyle: {},
    logoStyle: {},
};

export default HeaderTitleLogo;
