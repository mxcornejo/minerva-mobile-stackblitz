import React, { memo } from 'react';
import PropTypes from 'prop-types';
import { ListItem } from 'native-base';
import { HelperStyle } from '../../index';
import { DEFAULT_TYPES, TYPES } from '../../constants/propTypes';

/**
 * Componente listado.
 *
 * @component
 */
const ListItemBCH = (props) => {
    const {
        children,
        onPress,
        onLongPress,
        style,
        noBorder,
        firstItem,
        lastItem,
        middleItem,
        accessibilityLabel,
        accessibilityHint,
        testID,
        ...defaultProps
    } = props;
    let ListItemProps = defaultProps;
    if (onPress) ListItemProps = { ...ListItemProps, onPress };
    if (onLongPress) ListItemProps = { ...ListItemProps, onLongPress };
    return (
        <ListItem
            underlayColor={HelperStyle.gray_transparent.color}
            style={style}
            noBorder={noBorder}
            firstItem={firstItem}
            lastItem={lastItem}
            middleItem={middleItem}
            accessibilityLabel={accessibilityLabel}
            accessibilityHint={accessibilityHint}
            testID={testID}
            {...ListItemProps}
        >
            {children}
        </ListItem>
    );
};

ListItemBCH.propTypes = {
    /**
     * Boleano para mostrar o ocultar estilo borde.
     */
    noBorder: PropTypes.bool,
    /**
     * Boleano para definir estilos primer item en un listado.
     */
    firstItem: PropTypes.bool,
    /**
     * Boleano para definir estilos ultimo item en un listado.
     */
    lastItem: PropTypes.bool,
    /**
     * Boleano para definir estilos medio (entre primer y ultimo item) en un listado.
     */
    middleItem: PropTypes.bool,
    /**
     * Componnete a renderizar dentro de la lista.
     */
    children: PropTypes.node.isRequired,
    /**
     * Estilos de la lista.
     */
    style: TYPES.style,
    /**
     * Función que se llama al tocar.
     */
    onPress: PropTypes.func,
    /**
     * Función que se llama al tocar por mas de 500 milisegundos.
     */
    onLongPress: PropTypes.func,
    /**
     * Identificador para accesibilidad.
     */
    accessibilityLabel: PropTypes.string,
    /**
     * Sugerencia de accesibilidad.
     */
    accessibilityHint: PropTypes.string,
    /**
     * Identificador para pruebas.
     */
    testID: PropTypes.string,
};

ListItemBCH.defaultProps = {
    style: DEFAULT_TYPES.style,
    onPress: null,
    onLongPress: null,
    noBorder: false,
    firstItem: false,
    lastItem: false,
    middleItem: false,
    accessibilityLabel: '',
    accessibilityHint: '',
    testID: '',
};

export default memo(ListItemBCH);
