import { useState, useEffect } from 'react';
import { get, isObject } from 'lodash';

const useSelect = ({
    onValueChange,
    inputSearch,
    onPressSelect,
    controlModal,
    disabledAutoClose,
}) => {
    const [isVisibleModal, setIsVisibleModal] = useState('');

    const selectItem = (itemSelected) => () => {
        onValueChange(
            get(itemSelected, 'item.value', ''),
            get(itemSelected, 'index', ''),
            get(itemSelected, 'item', ''),
        );
        if (!disabledAutoClose) setIsVisibleModal(false);
    };

    const openModal = () => {
        if (onPressSelect) onPressSelect();
        if (isObject(inputSearch)) {
            const { onClearInputValue } = inputSearch;
            if (onClearInputValue) onClearInputValue();
        }
        setIsVisibleModal(true);
    };

    const closeModal = () => {
        if (isObject(inputSearch)) {
            const { onClearInputValue } = inputSearch;
            if (onClearInputValue) onClearInputValue();
        }
        setIsVisibleModal(false);
    };

    useEffect(() => {
        if (controlModal) controlModal({ open: openModal, close: closeModal });
    });

    return {
        isVisibleModal,
        setIsVisibleModal,
        selectItem,
        openModal,
        closeModal,
    };
};

export default useSelect;
