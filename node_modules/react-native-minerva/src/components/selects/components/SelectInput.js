import React, { memo } from 'react';
import PropTypes from 'prop-types';
import { get, find, toString, isObject, isString } from 'lodash';
import { Input } from '../../../index';
import { selectPropTypes, selectDefaultProps } from '../type';
import IconSelect from './IconSelect';

const SelectInput = (props) => {
    const {
        items,
        label,
        placeholder,
        selectedValue,
        inverse,
        isOpen,
        icon,
        iconAnimation,
        ...inputProps
    } = props;
    const renderIconContainer = () => (
        <IconSelect
            inverse={inverse}
            disabled={inputProps?.disabled}
            style={icon?.style}
            animated={get(icon, 'animated', true)}
            isOpen={isOpen}
            name={isString(icon) ? icon : undefined}
            {...(isObject(icon) && icon)}
        />
    );

    const getLabel = () => {
        if (placeholder && label) return selectedValue ? label : placeholder;
        if (placeholder) return placeholder;
        return label;
    };
    const getValue = () => {
        const selected = find(
            items,
            (o) => toString(o.value) === toString(selectedValue),
        );
        return get(selected, 'label', '');
    };
    return (
        <Input
            value={getValue()}
            label={getLabel()}
            pointerEvents="none"
            renderRight={renderIconContainer}
            isRenderRightVisible
            inverse={inverse}
            select
            isOpenSelect={isOpen}
            {...inputProps}
        />
    );
};

SelectInput.propTypes = {
    items: selectPropTypes.items,
    label: selectPropTypes.placeholder,
    placeholder: selectPropTypes.placeholder,
    selectedValue: selectPropTypes.selectedValue,
    icon: PropTypes.oneOfType([
        PropTypes.string,
        PropTypes.bool,
        PropTypes.objectOf(PropTypes.any),
    ]),
    inverse: PropTypes.bool,
    isOpen: PropTypes.bool,
    iconAnimation: PropTypes.bool,
};
SelectInput.defaultProps = {
    items: selectDefaultProps.items,
    label: selectDefaultProps.placeholder,
    placeholder: selectDefaultProps.placeholder,
    selectedValue: selectDefaultProps.selectedValue,
    icon: false,
    inverse: false,
    isOpen: false,
    iconAnimation: false,
};

export default memo(SelectInput);
