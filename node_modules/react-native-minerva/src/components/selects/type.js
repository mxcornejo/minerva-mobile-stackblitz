import PropTypes from 'prop-types';
import { DEFAULT_TYPES, TYPES } from '../../constants/propTypes';
import SELECT_STR from './constants/SelectStr';

export const selectPropTypes = {
    /**
     * Identificador para pruebas.
     */
    testID: PropTypes.string,
    /**
     * Identificador para accesibilidad.
     */
    accessibilityLabel: PropTypes.string,
    /**
     * Sugerencia de accesibilidad.
     */
    accessibilityHint: PropTypes.string,
    /**
     * Comunica el propósito de un componente al usuario.
     */
    accessibilityRole: PropTypes.string,
    /**
     * Habilita la accesibilidad.
     */
    accessible: PropTypes.bool,
    /**
     * SOLO ANDROID: Primero elemento a mostrar en la lista. Por defecto 'seleccione'.
     */
    firstPickerItem: PropTypes.oneOfType([
        PropTypes.bool,
        PropTypes.shape({
            label: PropTypes.oneOfType([
                PropTypes.string,
                PropTypes.number,
                PropTypes.arrayOf(PropTypes.any),
                PropTypes.objectOf(PropTypes.any),
            ]),
            value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
        }),
    ]),
    /**
     * Arreglo de objecto con propiedades para configurar el select.
     */
    items: PropTypes.arrayOf(
        PropTypes.shape({
            label: PropTypes.oneOfType([
                PropTypes.string,
                PropTypes.number,
                PropTypes.arrayOf(PropTypes.any),
                PropTypes.objectOf(PropTypes.any),
            ]),
            value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
        }),
    ),
    /**
     * Etiqueta del componente.
     */
    label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    /**
     * SOLO IOS: Acción del link 'ok' que se encuentra en la parte superior derecha del modal de selección nativo.
     */
    onPressRightButton: PropTypes.func,
    /**
     * SOLO IOS: Acción del link 'cancelar' que se encuentra en la parte superior izquierda del modal de selección nativo.
     */
    onPressLeftButton: PropTypes.func,
    /**
     * Función que se invoca para cuando se selecciona un elemento.
     */
    onValueChange: PropTypes.func,
    /**
     * Texto que se muestra antes de seleccionar un elemento.
     */
    placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    /**
     * Elemento seleccionado de la lista.
     */
    selectedValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    /**
     * SOLO IOS: cambia el texto por defecto 'cancelar' del link que se encuentra en la parte superior izquierda del modal de selección nativo.
     */
    textLeftButton: PropTypes.string,
    /**
     * SOLO IOS: cambia el texto por defecto 'ok' del link que se encuentra en la parte superior derecha del modal de selección nativo.
     */
    textRightButton: PropTypes.string,
    /**
     * Boleano para definir select de tipo inverse.
     */
    inverse: PropTypes.bool,
    /**
     * Estilos del contenedor.
     */
    styleContainer: TYPES.style,
    /**
     * Identificador para pruebas.
     */
    pickerTestID: PropTypes.string,
    /**
     * Identificador para accesibilidad.
     */
    pickerAccessibilityLabel: PropTypes.string,
    /**
     * Sugerencia de accesibilidad.
     */
    pickerAccessibilityHint: PropTypes.string,
    /**
     * Boleano para desactivar el autocerrado del modal cuando se selecciona un item.
     */
    disabledAutoClose: PropTypes.bool,
};

export const selectDefaultProps = {
    accessibilityLabel: '',
    accessibilityHint: '',
    accessible: true,
    firstPickerItem: false,
    items: [],
    label: '',
    onPressLeftButton: DEFAULT_TYPES.func,
    onPressRightButton: DEFAULT_TYPES.func,
    onValueChange: DEFAULT_TYPES.func,
    placeholder: '',
    selectedValue: '',
    testID: '',
    textLeftButton: SELECT_STR.cancelar,
    textRightButton: SELECT_STR.ok,
    inverse: false,
    styleContainer: DEFAULT_TYPES.style,
    pickerTestID: '',
    pickerAccessibilityLabel: '',
    pickerAccessibilityHint: '',
    disabledAutoClose: false,
};
