import React, { memo } from 'react';
import PropTypes from 'prop-types';
import { PRODUCTS } from 'bch-mobile-constants';
import { HelperStyle, Button, View, Icon, Validate } from '../../../../index';
import Style from '../../style';
import CARDITEMPRODUCTO_STR from '../../CardItemProductoStr';
import { CardItemProductoPropTypes } from '../../type';

/**
 * Componente Icono Colapsar contenido que se muestra en la parte superior derecha del Card de productos.
 *
 * @component
 */
const ButtonCollapse = ({ tipoProducto, setCollapsed, collapsed }) => {
    const {
        PRODUCT_TYPE: { PRODUCT_CF, PRODUCT_LC },
    } = PRODUCTS;
    const getConfigButton = () => {
        const config = {
            iconName: 'icon-bch-caret-up',
            accessibilityLabel: CARDITEMPRODUCTO_STR.ocultar.accessibilityLabel,
            accessibilityHint: CARDITEMPRODUCTO_STR.ocultar.accessibilityHint,
            testID: CARDITEMPRODUCTO_STR.ocultar.testID,
        };
        if (collapsed) {
            config.iconName = 'icon-bch-caret-down';
            config.accessibilityLabel =
                CARDITEMPRODUCTO_STR.mostrar.accessibilityLabel;
            config.accessibilityHint =
                CARDITEMPRODUCTO_STR.mostrar.accessibilityHint;
            config.testID = CARDITEMPRODUCTO_STR.mostrar.testID;
        }
        return config;
    };
    const configButton = getConfigButton();
    return (
        <View style={Style.contentRightButtonCollapse}>
            <Button
                link
                small
                onPress={setCollapsed}
                accessibilityLabel={configButton.accessibilityLabel}
                accessibilityHint={configButton.accessibilityHint}
                testID={configButton.testID}
            >
                <Icon
                    name={configButton.iconName}
                    style={[
                        HelperStyle.fs_4,
                        HelperStyle.white,
                        Validate.style(
                            tipoProducto === undefined ||
                                tipoProducto === PRODUCT_LC ||
                                tipoProducto === PRODUCT_CF,
                            HelperStyle.primary,
                        ),
                        HelperStyle.as_fe,
                    ]}
                />
            </Button>
        </View>
    );
};

ButtonCollapse.propTypes = {
    tipoProducto: PropTypes.string.isRequired,
    setCollapsed: CardItemProductoPropTypes.setCollapsed.isRequired,
    collapsed: CardItemProductoPropTypes.collapsed.isRequired,
};

export default memo(ButtonCollapse);
