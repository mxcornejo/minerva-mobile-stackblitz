import React, { memo } from 'react';
import { isBoolean, isObject } from 'lodash';
import { Text, HelperStyle, View, Validate, Badge } from '../../../../index';
import { isTextHeaderWhite } from '../../utils';
import CardNumberMask from './CardNumberMask';
import IconHelperText from './iconHelperText';
import {
    CardHeaderSubTitlePropTypes,
    CardItemProductoDefaultProps,
} from '../../type';

/**
 * Componente subtitulo que se muestra area del encabezado del card de Productos.
 * Caso 1, cuando es TC (data.marca este definida) enmascara el numero de la tarjeta (CardNumberMask)
 * Caso 2, cuando subtitleCardNumber esta definido mostrar (true/false) el componente para enmascara el numero de la tarjeta
 * Caso 3, cuando no es TC, mostrará lo que se envía.
 *
 * @component
 */
const CardHeaderSubTitle = ({
    marca,
    renderSubtitle,
    subtitle,
    subtitleAccessibility,
    renderSubtitleCardFullWidth,
    subtitleCardNumber,
    tipoProducto,
    tipoTarjeta,
}) => {
    const textIconSubTitleColorPrincipal = isTextHeaderWhite(
        tipoProducto,
        tipoTarjeta,
    )
        ? HelperStyle.gray
        : HelperStyle.white;
    const renderCardNumber = isBoolean(subtitleCardNumber)
        ? subtitleCardNumber
        : marca;
    if (renderSubtitle) return Validate.render(renderSubtitle);
    if (renderSubtitleCardFullWidth) {
        return Validate.render(renderSubtitleCardFullWidth);
    }

    const renderSubtitleText = (text, textProps) => {
        const labelSubtitleText = subtitleAccessibility || text;
        return (
            <Text
                small
                number
                numberOfLines={1}
                ellipsizeMode="tail"
                style={[
                    HelperStyle.mb_0,
                    textIconSubTitleColorPrincipal,
                    HelperStyle.flx_shrink,
                    HelperStyle.flw_row,
                ]}
                accessibilityLabel={labelSubtitleText}
                testID={labelSubtitleText}
                {...textProps}
            >
                {text}
            </Text>
        );
    };

    /*
     * Renderiza Badge tipo tarjeta Debito/Credito
     */
    const renderSubtitleBadge = (badgeText) => {
        if (badgeText) {
            return (
                <Badge
                    style={[
                        HelperStyle.h_auto,
                        HelperStyle.pr_1,
                        HelperStyle.pl_1,
                        HelperStyle.pt_0,
                        HelperStyle.pb_0,
                        HelperStyle.br_1,
                        HelperStyle.as_c,
                        HelperStyle.mr_2,
                    ]}
                    text={{
                        title: badgeText,
                        props: {
                            style: [
                                HelperStyle.ff_fontFamilyBold,
                                HelperStyle.tt_c,
                                HelperStyle.lh_1,
                                HelperStyle.gray_dark,
                            ],
                        },
                    }}
                />
            );
        }
        return null;
    };

    /*
     * Renderiza icono de ayuda
     */
    const renderIconHelperText = (helperText) => {
        if (isObject(helperText)) {
            return (
                <IconHelperText
                    style={textIconSubTitleColorPrincipal}
                    {...helperText}
                />
            );
        }
        return null;
    };

    if (isObject(subtitle)) {
        const { badge, text, helperText, textProps } = subtitle;
        return (
            <View style={HelperStyle.flx_row}>
                {renderSubtitleBadge(badge)}
                {renderSubtitleText(text, textProps)}
                {renderIconHelperText(helperText)}
            </View>
        );
    }
    if (renderCardNumber) {
        const labelSubtitleText = subtitleAccessibility || subtitle;
        return (
            <CardNumberMask
                small
                style={textIconSubTitleColorPrincipal}
                accessibilityLabel={labelSubtitleText}
                testID={labelSubtitleText}
            >
                {subtitle}
            </CardNumberMask>
        );
    }
    return renderSubtitleText(subtitle);
};

CardHeaderSubTitle.propTypes = CardHeaderSubTitlePropTypes;
CardHeaderSubTitle.defaultProps = CardItemProductoDefaultProps;

export default memo(CardHeaderSubTitle);
