import React, { memo } from 'react';
import PropTypes from 'prop-types';
import { HelperStyle, Icon, View, Text, Validate } from '../../index';
import PASSWORDCHECKLIST_STR from './PasswordChecklistStr';

/**
 * Componente elemento políticas de seguridad para PIN.
 *
 * @component
 */
const PasswordCheckitem = ({
    value,
    check,
    testID,
    accessibilityLabel,
    accessibilityHint,
}) => {
    /**
     * Retorna el color del icono en base al estado de la prop check.
     */
    const getColorByStatus = () => {
        if (check) return HelperStyle.success;
        return HelperStyle.gray_light;
    };
    const iconProps = {
        iconName: check ? 'icon-bch-check-fill' : 'icon-bch-close-fill',
        label: check
            ? PASSWORDCHECKLIST_STR.iconIsValid
            : PASSWORDCHECKLIST_STR.iconIsNotValid,
    };
    return (
        <View style={HelperStyle.flx_row}>
            <Icon
                style={[getColorByStatus(), HelperStyle.pr_3]}
                name={iconProps.iconName}
                accessible
                accessibilityLabel={iconProps.label}
                testID={iconProps.label}
            />
            <Text
                style={HelperStyle.fs_2}
                accessibilityLabel={Validate.safeLabel(
                    accessibilityLabel,
                    value,
                )}
                accessibilityHint={accessibilityHint}
                testID={Validate.safeLabel(testID, value)}
            >
                {value}
            </Text>
        </View>
    );
};

PasswordCheckitem.propTypes = {
    /**
     * Texto políticas de seguridad para PIN.
     */
    value: PropTypes.string.isRequired,
    /**
     * Estado políticas de Seguridad para PIN.
     */
    check: PropTypes.bool.isRequired,
    /**
     * Identificador para pruebas.
     */
    testID: PropTypes.string,
    /**
     * Identificador para accesibilidad.
     */
    accessibilityLabel: PropTypes.string,
    /**
     * Sugerencia de accesibilidad que ayuda a los usuarios a comprender qué sucederá cuando realicen una acción.
     */
    accessibilityHint: PropTypes.string,
};

PasswordCheckitem.defaultProps = {
    testID: '',
    accessibilityLabel: '',
    accessibilityHint: '',
};

export default memo(PasswordCheckitem);
