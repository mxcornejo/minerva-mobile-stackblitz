import PropTypes from 'prop-types';
import { itemsPropTypes } from './components/SelectorInput/type';
import { TYPES, DEFAULT_TYPES } from '../../constants/propTypes';

const inputSelectNativePropTypes = {
    label: PropTypes.string,
    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    items: PropTypes.arrayOf(itemsPropTypes),
    labelSelected: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    selectedValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    onValueChange: PropTypes.func.isRequired,
    firstPickerItem: PropTypes.oneOfType([PropTypes.bool, itemsPropTypes]),
    disabled: PropTypes.bool,
    text: PropTypes.bool,
    icon: PropTypes.bool,
    image: PropTypes.bool,
    style: TYPES.style,
    textStyle: TYPES.style,
    iconStyle: TYPES.style,
    imageStyle: TYPES.style,
    testID: PropTypes.string,
    accessibilityLabel: PropTypes.string,
    accessibilityHint: PropTypes.string,
    pickerTestID: PropTypes.string,
    pickerAccessibilityLabel: PropTypes.string,
    pickerAccessibilityHint: PropTypes.string,
    number: PropTypes.bool,
    keyboardType: PropTypes.oneOf([
        'default',
        'email-address',
        'numeric',
        'phone-pad',
        'ascii-capable',
        'numbers-and-punctuation',
        'url',
        'number-pad',
        'name-phone-pad',
        'decimal-pad',
        'twitter',
        'web-search',
        'visible-password',
    ]),
    autoFocus: PropTypes.bool,
    onBlur: PropTypes.func,
    onFocus: PropTypes.func,
    onEndEditing: PropTypes.func,
    renderLeft: TYPES.render,
    renderRight: TYPES.render,
    error: PropTypes.bool,
    helperText: PropTypes.string,
};
const inputSelectNativeDefaultProps = {
    label: '',
    value: '',
    items: [],
    labelSelected: '',
    selectedValue: '',
    firstPickerItem: false,
    disabled: false,
    text: false,
    icon: false,
    image: false,
    style: DEFAULT_TYPES.style,
    textStyle: DEFAULT_TYPES.style,
    iconStyle: DEFAULT_TYPES.style,
    imageStyle: DEFAULT_TYPES.style,
    testID: '',
    accessibilityLabel: '',
    accessibilityHint: '',
    pickerTestID: '',
    pickerAccessibilityLabel: '',
    pickerAccessibilityHint: '',
    number: false,
    keyboardType: 'default',
    autoFocus: false,
    onBlur: DEFAULT_TYPES.func,
    onFocus: DEFAULT_TYPES.func,
    onEndEditing: DEFAULT_TYPES.func,
    renderLeft: DEFAULT_TYPES.render,
    renderRight: DEFAULT_TYPES.render,
    error: false,
    helperText: '',
};

export { inputSelectNativePropTypes, inputSelectNativeDefaultProps };
