import PropTypes from 'prop-types';

export const itemsPropTypes = PropTypes.shape({
    label: PropTypes.oneOfType([
        PropTypes.string,
        PropTypes.number,
        PropTypes.arrayOf(PropTypes.any),
        PropTypes.objectOf(PropTypes.any),
    ]),
    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    source: PropTypes.oneOfType([
        PropTypes.string,
        PropTypes.number,
        PropTypes.shape({
            uri: PropTypes.string,
        }),
    ]),
});

const selectorInputPropTypes = {
    items: PropTypes.arrayOf(itemsPropTypes),
    labelSelected: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    selectedValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    onValueChange: PropTypes.func.isRequired,
    firstPickerItem: PropTypes.oneOfType([PropTypes.bool, itemsPropTypes]),
    optionSource: PropTypes.oneOfType([
        PropTypes.string,
        PropTypes.number,
        PropTypes.shape({
            uri: PropTypes.string,
        }),
    ]),
    disabled: PropTypes.bool,
    text: PropTypes.bool,
    icon: PropTypes.bool,
    image: PropTypes.bool,
    textStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),
    iconStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),
    imageStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),
    pickerTestID: PropTypes.string,
    pickerAccessibilityLabel: PropTypes.string,
    pickerAccessibilityHint: PropTypes.string,
};
const selectorInputDefaultProps = {
    items: [],
    labelSelected: '',
    selectedValue: '',
    firstPickerItem: false,
    optionSource: '',
    disabled: false,
    text: false,
    icon: false,
    image: false,
    textStyle: {},
    iconStyle: {},
    imageStyle: {},
    pickerTestID: '',
    pickerAccessibilityLabel: '',
    pickerAccessibilityHint: '',
};

export { selectorInputPropTypes, selectorInputDefaultProps };
