import React, { memo } from 'react';
import PropTypes from 'prop-types';
import { HelperStyle, Grid, Col, View } from '../../index';
import Style from './style';
import { Validate } from '../../util';

const getColContainer = (children) => (
    <Col style={Style.iconContainer}>
        <View style={[HelperStyle.pt_5, HelperStyle.ai_c]}>
            {Validate.render(children)}
        </View>
    </Col>
);

/**
 * Componente para agrupar <Input />.
 *
 * @component
 */
const FormGroup = (props) => {
    const { children, renderLeft, renderRight, style } = props;
    return (
        <Grid style={style}>
            {renderLeft && getColContainer(renderLeft)}
            <Col>{children}</Col>
            {renderRight && getColContainer(renderRight)}
        </Grid>
    );
};

FormGroup.propTypes = {
    /**
     * Inputs a renderizar.
     */
    children: PropTypes.node.isRequired,
    /**
     * Renderiza componente en el lado izquierda del grupo.
     */
    renderLeft: PropTypes.oneOfType([
        PropTypes.func,
        PropTypes.bool,
        PropTypes.node,
    ]),
    /**
     * Renderiza componente en el lado derecho del grupo.
     */
    renderRight: PropTypes.oneOfType([
        PropTypes.func,
        PropTypes.bool,
        PropTypes.node,
    ]),
    /**
     * Estilos para el contenedor.
     */
    style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),
};
FormGroup.defaultProps = {
    renderLeft: false,
    renderRight: false,
    style: {},
};

export default memo(FormGroup);
