import React, { memo } from 'react';
import PropTypes from 'prop-types';
import { MapList, HelperStyle } from '../../index';
import SquareButton from './components/SquareButton';
import buildStyle from './style';

/**
 * Componente que muestra una lista de cards clickeables cuadradas con un icono y un texto(opcion dentro/debajo de la card).
 * Dos opciones de logica para el onPress:
 * 1.- Funcion customizable, libertad total.
 * 2.- True/False y estilo selected/unselected.
 * Composicion del item:
 * - Si existe item.selected(boolean) funcionara con el modo 2
 * - Si existe item.iconStyle o item.textStyle se aplicara
 * OJO: En caso de numero impar de elementos el ultimo se mostrarÃ¡ en el centro(horizontal) de la fila.
 *
 * @component
 */
const SquareButtonsGroup = ({ items, insideText }) => {
    const Style = buildStyle(HelperStyle);
    const isOddList = items.length % 2 !== 0;
    const isLastItem = (index) => index === items.length - 1;
    const keyExtractor = (item) => item.id;

    const renderItem = ({ index, item }) => (
        <SquareButton
            centered={isLastItem(index) && isOddList}
            insideText={insideText}
            iconName={item.iconName}
            iconStyle={item?.iconStyle}
            text={item.text}
            textStyle={item?.textStyle}
            onPress={item.onPress}
            selected={item?.selected}
            testID={item?.testID}
            accessibilityLabel={item?.accessibilityLabel}
            accessibilityHint={item?.accessibilityHint}
        />
    );

    return (
        <MapList
            data={items}
            keyExtractor={keyExtractor}
            renderItem={renderItem}
            style={Style.list}
        />
    );
};

SquareButtonsGroup.propTypes = {
    /**
     * Lista de items donde cada item es una card.
     */
    items: PropTypes.arrayOf(PropTypes.object),
    /**
     * Flag que define si el texto se muestra dentro o debajo de la card.
     */
    insideText: PropTypes.bool,
};
SquareButtonsGroup.defaultProps = {
    items: [],
    insideText: false,
};

export default memo(SquareButtonsGroup);
