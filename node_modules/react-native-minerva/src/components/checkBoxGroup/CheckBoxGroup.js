import React, { memo } from 'react';
import { isArray } from 'lodash';
import PropTypes from 'prop-types';
import { View, HelperStyle, CheckBox } from '../../index';
import { propTypes as CheckBoxType } from '../checkBox/type';

/**
 * Componente para agrupar <CheckBox />.
 *
 * @component
 */
const CheckBoxGroup = (props) => {
    const { items, horizontal, style, styleItems, testID } = props;

    const renderCheckBox = (item, index) => {
        const lastItem = items.length - 1;
        const margin = horizontal ? HelperStyle.mr_4 : null;
        const conditionalMargin = horizontal
            ? lastItem !== index && index === 0
            : lastItem !== index;
        return (
            <CheckBox
                key={`${index}-CheckBox`}
                inline={horizontal}
                {...item}
                style={[styleItems, item?.style]}
                styleContainer={[
                    conditionalMargin && margin,
                    item?.styleContainer,
                ]}
            />
        );
    };

    const mapRenderItems = (item, i) => renderCheckBox(item, i);

    const renderItems = () => isArray(items) && items.map(mapRenderItems);

    return (
        <View
            style={[horizontal && HelperStyle.flx_row, style]}
            testID={testID}
        >
            {renderItems()}
        </View>
    );
};

CheckBoxGroup.propTypes = {
    /**
     * Objecto para configurar los <CheckBox />.
     */
    items: PropTypes.arrayOf(PropTypes.shape(CheckBoxType)),
    /**
     * Boleano para definir alineaci√≥n horizontal de los <CheckBox />.
     */
    horizontal: PropTypes.bool,
    /**
     * Estilos para el contenedor de los <CheckBox />.
     */
    style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),
    /**
     * Estilos para los <CheckBox />.
     */
    styleItems: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),
    /**
     * Identificador para pruebas.
     */
    testID: PropTypes.string,
};
CheckBoxGroup.defaultProps = {
    items: [],
    horizontal: false,
    style: {},
    styleItems: {},
    testID: '',
};

export default memo(CheckBoxGroup);
