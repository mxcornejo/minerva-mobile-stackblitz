import React, { memo } from 'react';
import PropTypes from 'prop-types';
import { HelperOptions, HelperStyle, Icon } from '../../index';
import LOGOICON_STR from './LogoIconStr';

/**
 * Componente Icono Logos Marca.
 *
 * @component
 */
const LogoIcon = ({
    name,
    accessibilityLabel,
    accessibilityHint,
    testID,
    style,
}) => {
    const getProps = () => {
        const options = {
            name: name || LOGOICON_STR.iconNameBch,
            accessibilityLabel:
                accessibilityLabel || LOGOICON_STR.brandLabelBch,
            testID: testID || LOGOICON_STR.brandLabelBch,
        };
        if (HelperOptions.brand === 2) {
            options.name = name || LOGOICON_STR.iconNameBec;
            options.accessibilityLabel =
                accessibilityLabel || LOGOICON_STR.brandLabelBec;
            options.testID = testID || LOGOICON_STR.brandLabelBec;
        }
        if (HelperOptions.brand === 3) {
            options.name = name || LOGOICON_STR.iconNameCch;
            options.accessibilityLabel =
                accessibilityLabel || LOGOICON_STR.brandLabelCch;
            options.testID = testID || LOGOICON_STR.brandLabelCch;
        }
        return options;
    };

    const iconProps = getProps();
    return (
        <Icon
            style={[HelperStyle.white, HelperStyle.fs_4, style]}
            name={iconProps.name}
            accessible
            accessibilityLabel={iconProps.accessibilityLabel}
            accessibilityHint={accessibilityHint}
            testID={iconProps.testID}
        />
    );
};

LogoIcon.propTypes = {
    /**
     * Nombre del icono.
     */
    name: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),
    /**
     * Identificador para pruebas.
     */
    testID: PropTypes.string,
    /**
     * Identificador para accesibilidad.
     */
    accessibilityLabel: PropTypes.string,
    /**
     * Sugerencia de accesibilidad.
     */
    accessibilityHint: PropTypes.string,
    /**
     * Estilos.
     */
    style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),
};
LogoIcon.defaultProps = {
    name: false,
    accessibilityLabel: '',
    accessibilityHint: '',
    testID: '',
    style: {},
};

export default memo(LogoIcon);
