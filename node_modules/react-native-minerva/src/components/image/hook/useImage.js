import { useState } from 'react';
import {
    useSharedValue,
    useAnimatedStyle,
    interpolate,
    useDerivedValue,
    withTiming,
} from 'react-native-reanimated';

const useImage = () => {
    const [errorLoad, setErrorLoad] = useState('');
    const animation = useSharedValue(0);

    const startAnimation = (value) => {
        animation.value = withTiming(value, {
            duration: 300,
        });
    };
    const onLoadStart = () => startAnimation(0);
    const onLoadEnd = () => startAnimation(1);
    const onError = ({ nativeEvent: { error } }) => setErrorLoad(error);

    const thumbnailOpacity = useDerivedValue(() =>
        interpolate(animation.value, [1, 0], [0, 1]),
    );
    const imageOpacity = useDerivedValue(() =>
        interpolate(animation.value, [1, 0], [1, 0]),
    );

    const thumbnailAnimatedStyle = useAnimatedStyle(() => ({
        opacity: thumbnailOpacity.value,
    }));

    const imageAnimatedStyle = useAnimatedStyle(() => ({
        opacity: imageOpacity.value,
    }));
    return {
        thumbnailAnimatedStyle,
        imageAnimatedStyle,
        errorLoad,
        onLoadStart,
        onLoadEnd,
        onError,
    };
};

export default useImage;
