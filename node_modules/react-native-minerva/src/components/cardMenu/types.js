import PropTypes from 'prop-types';
import { propTypes as buttonsGroupTypes } from '../buttonsGroup/types';

const itemLeftTypes = {
    /**
     * Icono a mostrar en el lado derecho de la Card.
     */
    iconName: PropTypes.string,
    /**
     * Identificador de accesibilidad para el icono.
     */
    iconLabel: PropTypes.string,
    /**
     * Sugerencia de accesibilidad que ayuda a los usuarios a comprender qué sucederá cuando realicen una acción.
     */
    iconAccessibilityHint: PropTypes.string,
    /**
     * Identificador de pruebas para title.
     */
    iconTestID: PropTypes.string,
    /**
     * Estilos para el icono.
     */
    iconStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),
    /**
     * La ruta de la imagen (ya sea una URL remota o un recurso de archivo local) a mostrar en el lado derecho de la Card.
     */
    imageSource: PropTypes.oneOfType([
        PropTypes.string,
        PropTypes.number,
        PropTypes.shape({
            uri: PropTypes.string,
        }),
    ]),
};

const itemLeftDefaultTypes = {
    iconLabel: '',
    iconAccessibilityHint: '',
    iconTestID: '',
    iconName: '',
    iconStyle: {},
    imageSource: '',
};

const itemBodyTypes = {
    /**
     * Objecto con propiedades para configurar botones.
     */
    buttonsGroup: PropTypes.shape(buttonsGroupTypes),
    /**
     * Texto del subtítulo.
     */
    subtitle: PropTypes.string,
    /**
     * Identificador de accesibilidad para subtitle.
     */
    subtitleAccessibilityLabel: PropTypes.string,
    /**
     * Sugerencia de accesibilidad que ayuda a los usuarios a comprender qué sucederá cuando realicen una acción.
     */
    subtitleAccessibilityHint: PropTypes.string,
    /**
     * Identificador de pruebas para subtitle.
     */
    subtitleTestID: PropTypes.string,
    /**
     * Texto del título.
     */
    title: PropTypes.string,
    /**
     * Identificador de accesibilidad para title.
     */
    titleAccessibilityLabel: PropTypes.string,
    /**
     * Sugerencia de accesibilidad que ayuda a los usuarios a comprender qué sucederá cuando realicen una acción.
     */
    titleAccessibilityHint: PropTypes.string,
    /**
     * Identificador de pruebas para title.
     */
    titleTestID: PropTypes.string,
    /**
     * Boleano para determinar si el card tiene contenido.
     */
    hasSubItem: PropTypes.bool,
};

const subItemBodyTypes = {
    /**
     * Boleano para colapsar el contenido de la Card.
     */
    collapsed: PropTypes.bool,
    /**
     * Objecto con enlaces que se muestra en el contenido del Card.
     */
    options: PropTypes.arrayOf(
        PropTypes.shape({
            /**
             * Texto del título del options.
             */
            title: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
            /**
             * Acción del Botón.
             */
            onPress: PropTypes.func,
            /**
             * Identificador de accesibilidad para options.title.
             */
            titleAccessibilityLabel: PropTypes.string,
            /**
             * Sugerencia de accesibilidad que ayuda a los usuarios a comprender qué sucederá cuando realicen una acción.
             */
            titleAccessibilityHint: PropTypes.string,
            /**
             * Identificador de pruebas para options.title..
             */
            titleTestID: PropTypes.string,
        }),
    ),
    /**
     * Renderiza componente en el area del contenido del CardMenu.
     */
    renderOptions: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),
};

/**
 * Arreglo de objectos para configurar los item del CardMenu.
 */
const itemTypes = {
    ...itemLeftTypes,
    ...itemBodyTypes,
    ...subItemBodyTypes,
    /**
     * Acción del Botón.
     */
    onPress: PropTypes.func,
    /**
     * Identificador para accesibilidad para la Card.
     */
    cardAccessibilityLabel: PropTypes.string,
    /**
     * Identificador para pruebas para la Card.
     */
    cardtestID: PropTypes.string,
    /**
     * Identificador para accesibilidad para el CardItem.
     */
    cardItemAccessibilityLabel: PropTypes.string,
    /**
     * Identificador para pruebas para el CardItem.
     */
    cardItemTestID: PropTypes.string,
    /**
     * Estilos del contenedor del flatlist del CardMenu.
     */
    contentContainerStyle: PropTypes.oneOfType([
        PropTypes.object,
        PropTypes.array,
    ]),
};

export {
    itemTypes,
    itemLeftTypes,
    itemLeftDefaultTypes,
    itemBodyTypes,
    subItemBodyTypes,
};
