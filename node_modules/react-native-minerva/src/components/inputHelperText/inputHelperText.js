import React from 'react';
import PropTypes from 'prop-types';
import { HelperStyle, Text, LayoutAnimation, Validate } from '../../index';
import Style from './style';

/**
 * Componente texto de ayuda para <Input />.
 *
 * @component
 */
class InputHelperText extends React.PureComponent {
    componentDidUpdate(prevProps) {
        const { children, animation } = this.props;
        if (animation && children !== prevProps.children) {
            LayoutAnimation();
        }
    }

    render() {
        const {
            children,
            error,
            style,
            accessibilityLabel,
            accessibilityHint,
            testID,
        } = this.props;
        if (children) {
            return (
                <Text
                    smaller
                    unformatted
                    {...this.props}
                    accessibilityLabel={Validate.safeLabel(
                        accessibilityLabel,
                        children,
                    )}
                    accessibilityHint={accessibilityHint}
                    testID={Validate.safeLabel(testID, children)}
                    accessibilityRole="alert"
                    style={[
                        HelperStyle.gray_dark,
                        HelperStyle.mt_1,
                        Style.textContainer,
                        error && HelperStyle.danger,
                        error && Style.textContainerError,
                        style,
                    ]}
                >
                    {children}
                </Text>
            );
        }
        return null;
    }
}

InputHelperText.propTypes = {
    /**
     * Boleano para definir animación en el ocultar mostrar texto.
     */
    animation: PropTypes.bool,
    /**
     * Texto.
     */
    children: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),
    /**
     * Boleano para definir estado de error.
     */
    error: PropTypes.bool,
    /**
     * Estilos.
     */
    style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),
    /**
     * Identificador para accesibilidad.
     */
    accessibilityLabel: PropTypes.string,
    /**
     * Sugerencia de accesibilidad que ayuda a los usuarios a comprender qué sucederá cuando realicen una acción.
     */
    accessibilityHint: PropTypes.string,
    /**
     * Identificador para pruebas.
     */
    testID: PropTypes.string,
};
InputHelperText.defaultProps = {
    animation: true,
    error: false,
    style: {},
    children: null,
    accessibilityLabel: '',
    accessibilityHint: '',
    testID: '',
};

export default InputHelperText;
