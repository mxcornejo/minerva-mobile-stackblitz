import React from 'react';
import PropTypes from 'prop-types';
import CollapsibleRN from 'react-native-collapsible';
import { View, HelperStyle, LayoutAnimation } from '../../index';
import COLLAPSIBLE_STR from './CollapsibleStr';

/**
 * Componente para desplegar o ocultar.
 *
 * @component
 */
class Collapsible extends React.PureComponent {
    componentDidUpdate(prevProps) {
        const { collapsed, layoutAnimation, duration } = this.props;
        if (layoutAnimation && collapsed !== prevProps.collapsed) {
            LayoutAnimation(duration);
        }
    }

    render() {
        const { children, shadowTop, collapsed, layoutAnimation, testID } =
            this.props;
        if (layoutAnimation) {
            if (shadowTop) {
                return (
                    <View
                        style={[HelperStyle.bg_white, HelperStyle.shadow_top]}
                        testID={testID}
                    >
                        {!collapsed && children}
                    </View>
                );
            }
            return !collapsed && children;
        }
        if (shadowTop) {
            return (
                <View
                    testID={COLLAPSIBLE_STR.testIDContainerShadowTop}
                    style={[HelperStyle.bg_white, HelperStyle.shadow_top]}
                >
                    <CollapsibleRN {...this.props} testID={testID}>
                        {children}
                    </CollapsibleRN>
                </View>
            );
        }
        return (
            <CollapsibleRN {...this.props} testID={testID}>
                {children}
            </CollapsibleRN>
        );
    }
}

Collapsible.propTypes = {
    /**
     * Componente a ser desplegado o ocultado.
     */
    children: PropTypes.oneOfType([
        PropTypes.node,
        PropTypes.func,
        PropTypes.bool,
    ]),
    /**
     * Boleano para definir si el contenedor tendra estilos de sombra en el top.
     */
    shadowTop: PropTypes.bool,
    /**
     * Boleano para desplegar o ocultar.
     */
    collapsed: PropTypes.bool.isRequired,
    /**
     * Boleano para cambiar la animación por LayoutAnimation.
     */
    layoutAnimation: PropTypes.bool,
    /**
     * Duracón de la animación de desplegar o ocultar.
     */
    duration: PropTypes.number,
    /**
     * Identificador para pruebas.
     */
    testID: PropTypes.string,
};
Collapsible.defaultProps = {
    children: false,
    shadowTop: false,
    layoutAnimation: false,
    duration: COLLAPSIBLE_STR.duration,
    testID: '',
};

export default Collapsible;
