import React, { memo } from 'react';
import PropTypes from 'prop-types';
import { ScrollView } from 'react-native';
import { KeyboardAvoidingView } from '../../index';
import Style from './style';

/**
 * Componente para agregar scroll que combina los componentes <KeyboardAvoidingView /> y <ScrollView />.
 *
 * @component
 */
const ContentBCH = (props) => {
    const {
        centerContent,
        children,
        KeyboardAvoidingViewStyle,
        scrollRef,
        contentContainerStyle,
        style,
        behavior,
        hasDefaultKeyboardVerticalOffset,
        keyboardVerticalOffset,
        enabled,
    } = props;
    return (
        <KeyboardAvoidingView
            style={KeyboardAvoidingViewStyle}
            hasDefaultKeyboardVerticalOffset={hasDefaultKeyboardVerticalOffset}
            keyboardVerticalOffset={keyboardVerticalOffset}
            behavior={behavior}
            enabled={enabled}
        >
            <ScrollView
                {...props}
                style={style}
                ref={scrollRef}
                contentContainerStyle={[
                    centerContent && Style.centerContent,
                    contentContainerStyle,
                ]}
                centerContent={false}
            >
                {children}
            </ScrollView>
        </KeyboardAvoidingView>
    );
};

ContentBCH.propTypes = {
    /**
     * Componente a renderizar dentro del <ScrollView />.
     */
    children: PropTypes.node.isRequired,
    /**
     * Boleano para centrar verticalmente el contenido del <ScrollView />.
     */
    centerContent: PropTypes.bool,
    /**
     * Especifica el comportamiento del contenido cuando se abre el teclado.
     */
    behavior: PropTypes.oneOfType([
        PropTypes.oneOf(['height', 'position', 'padding']),
        PropTypes.bool,
    ]),
    /**
     * Distancia entre la parte superior de la pantalla del usuario y la vista nativa.
     */
    keyboardVerticalOffset: PropTypes.number,
    /**
     * Boleano que agrega espaciado por defecto al keyboardVerticalOffset.
     */
    hasDefaultKeyboardVerticalOffset: PropTypes.bool,
    /**
     * Estilos para KeyboardAvoidingView.
     */
    KeyboardAvoidingViewStyle: PropTypes.oneOfType([
        PropTypes.array,
        PropTypes.object,
    ]),
    /**
     * Estilos para el contenedor del <ScrollView />.
     */
    contentContainerStyle: PropTypes.oneOfType([
        PropTypes.array,
        PropTypes.object,
    ]),
    /**
     * Referencia del <ScrollView />.
     */
    scrollRef: PropTypes.oneOfType([
        PropTypes.func,
        PropTypes.string,
        PropTypes.shape({
            current: PropTypes.oneOfType([
                PropTypes.objectOf(PropTypes.any),
                PropTypes.string,
            ]),
        }),
    ]),
    /**
     * Estilos para el <ScrollView />.
     */
    style: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),
    /**
     * Habilita o deshabilita el KeyboardAvoidingView.
     */
    enabled: PropTypes.bool,
};
ContentBCH.defaultProps = {
    centerContent: false,
    behavior: false,
    keyboardVerticalOffset: 0,
    hasDefaultKeyboardVerticalOffset: true,
    KeyboardAvoidingViewStyle: {},
    contentContainerStyle: {},
    style: {},
    scrollRef: null,
    enabled: true,
};

export default memo(ContentBCH);
