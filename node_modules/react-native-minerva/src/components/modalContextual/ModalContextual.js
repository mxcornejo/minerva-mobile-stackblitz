import React from 'react';
import {
    H5,
    HelperStyle,
    Icon,
    LineSeparator,
    MapList,
    Modal,
    Text,
    View,
    PressableOpacity,
    Validate,
} from '../../index';
import { propTypes, defaultProps } from './type';
import MODALCONTEXTUAL_STR from './ModalContextualStr';

/**
 * Componente que muestra un modal.
 *
 * @component
 */
const ModalContextual = ({
    visible,
    setVisible,
    headerData,
    listOptions,
    buttonFooterName,
}) => {
    const renderHeader = () => (
        <View
            style={[
                HelperStyle.flx_row,
                HelperStyle.pt_4,
                HelperStyle.pb_4,
                HelperStyle.pl_6,
                HelperStyle.pr_4,
            ]}
        >
            {headerData?.iconName && (
                <Icon
                    name={headerData.iconName}
                    style={[
                        HelperStyle.as_c,
                        HelperStyle.primary,
                        HelperStyle.fs_7,
                        HelperStyle.mr_2,
                    ]}
                />
            )}
            <View style={[HelperStyle.ml_2, HelperStyle.jc_c]}>
                <H5 style={HelperStyle.mb_0}>{headerData.title}</H5>
                {headerData.subtitle && (
                    <Text small style={HelperStyle.mb_0}>
                        {headerData.subtitle}
                    </Text>
                )}
            </View>
        </View>
    );

    const renderItem = ({ item }) => (
        <PressableOpacity
            accesible
            accessibilityRole="button"
            style={HelperStyle.flx_row}
            onPress={item?.onPress}
            testID={Validate.safeLabel(item?.testID)}
            accessibilityLabel={Validate.safeLabel(item?.accessibilityLabel)}
        >
            <Icon
                button
                name={item.iconName}
                style={[
                    HelperStyle.fs_5,
                    HelperStyle.as_c,
                    HelperStyle[item.color],
                ]}
            />
            <Text
                button
                bold
                small
                style={[
                    HelperStyle.mb_0,
                    HelperStyle.pa_4,
                    HelperStyle.tt_u,
                    HelperStyle[item.color],
                ]}
            >
                {item.name}
            </Text>
        </PressableOpacity>
    );

    const renderBody = () => (
        <>
            <LineSeparator style={[HelperStyle.pt_0, HelperStyle.pb_0]} />
            <MapList
                data={listOptions}
                renderItem={renderItem}
                style={[HelperStyle.pl_6, HelperStyle.pr_4, HelperStyle.pb_3]}
            />
        </>
    );

    const onPressBtnVolver = () => setVisible(false);
    const renderFooter = () => (
        <PressableOpacity
            onPress={onPressBtnVolver}
            testID={MODALCONTEXTUAL_STR.btnVolverID}
            accessibilityLabel={MODALCONTEXTUAL_STR.btnVolverID}
        >
            <Text
                button
                bold
                small
                style={[
                    HelperStyle.gray_dark,
                    HelperStyle.lh_2,
                    HelperStyle.as_c,
                    HelperStyle.mb_5,
                    HelperStyle.tt_u,
                ]}
            >
                {buttonFooterName}
            </Text>
        </PressableOpacity>
    );

    return (
        <Modal
            noPadding
            visible={visible}
            setVisible={setVisible}
            renderHeader={renderHeader}
            renderContent={renderBody}
            renderFooter={renderFooter}
        />
    );
};

ModalContextual.propTypes = propTypes;
ModalContextual.defaultProps = defaultProps;

export default ModalContextual;
