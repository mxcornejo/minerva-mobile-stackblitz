/* eslint-disable sonarjs/cognitive-complexity */
// @flow
import color from 'color';
import { Platform, Dimensions, PixelRatio } from 'react-native';
import { ColorsBCH, Spacing, Base, Scale, Fonts } from '../../src/index';

export const PLATFORM = {
    ANDROID: 'android',
    IOS: 'ios',
    MATERIAL: 'material',
    WEB: 'web',
};

const deviceHeight = Dimensions.get('window').height;
const deviceWidth = Dimensions.get('window').width;
const platform = Platform.OS;
const platformStyle = undefined;
const isIphoneX =
    platform === PLATFORM.IOS &&
    (deviceHeight === 812 ||
        deviceWidth === 812 ||
        deviceHeight === 896 ||
        deviceWidth === 896);
const variables = (settingsColors) => {
    const assignedColors = settingsColors || ColorsBCH;
    return {
        platformStyle,
        platform,

        // Accordion
        accordionBorderColor: '#d3d3d3',
        accordionContentPadding: Scale(10),
        accordionIconFontSize: Scale(18),
        contentStyle: '#f5f4f5',
        expandedIconStyle: '#000',
        headerStyle: '#edebed',
        iconStyle: '#000',

        // ActionSheet
        elevation: 4,
        containerTouchableBackgroundColor: 'rgba(0,0,0,0.4)',
        innerTouchableBackgroundColor: '#fff',
        listItemHeight: Scale(50),
        listItemBorderColor: 'transparent',
        marginHorizontal: -Scale(15),
        marginLeft: Scale(14),
        marginTop: Scale(15),
        minHeight: Scale(56),
        padding: Scale(15),
        touchableTextColor: '#757575',

        // Android
        androidRipple: true,
        androidRippleColor: 'rgba(256, 256, 256, 0.3)',
        androidRippleColorDark: 'rgba(0, 0, 0, 0.15)',
        buttonUppercaseAndroidText: true,

        // Badge
        badgeBg: assignedColors.gray_lighter,
        badgeColor: assignedColors.gray,
        badgePadding: 2,

        // Button
        buttonFontFamily: Fonts.fontFamilySecondary,
        buttonDisabledBg: assignedColors.gray_background,
        buttonPaddingVertical: Spacing.spacer_3,
        buttonPaddingHorizontal: Spacing.spacer_5,
        buttonDefaultActiveOpacity: 0.5,
        buttonDefaultFlex: 1,
        buttonDefaultBorderRadius: 2,
        buttonDefaultBorderWidth: 1,
        get buttonPrimaryBg() {
            return this.primary;
        },
        get buttonPrimaryColor() {
            return this.inverseTextColor;
        },
        get buttonInfoBg() {
            return this.info;
        },
        get buttonInfoColor() {
            return this.inverseTextColor;
        },
        get buttonSuccessBg() {
            return this.success;
        },
        get buttonSuccessColor() {
            return this.inverseTextColor;
        },
        get buttonDangerBg() {
            return this.danger;
        },
        get buttonDangerColor() {
            return this.inverseTextColor;
        },
        get buttonWarningBg() {
            return this.warning;
        },
        get buttonWarningColor() {
            return this.inverseTextColor;
        },
        get buttonTextSize() {
            return platform === PLATFORM.IOS
                ? this.fontSizeBase * 1.1
                : this.fontSizeBase - 1;
        },
        get buttonTextSizeLarge() {
            return this.fontSizeBase * 1.5;
        },
        get buttonTextSizeSmall() {
            return this.fontSizeBase * 0.8;
        },
        get borderRadiusLarge() {
            return this.fontSizeBase * 3.8;
        },
        get iconSizeLarge() {
            return this.iconFontSize * 1.5;
        },
        get iconSizeSmall() {
            return this.iconFontSize * 0.6;
        },

        // Card
        cardDefaultBg: '#fff',
        cardBorderColor: assignedColors.gray_background,
        cardBorderRadius: Spacing.radius_3,
        cardItemPadding: Spacing.spacer_2,

        // CheckBox
        CheckboxRadius: Spacing.radius_1,
        CheckboxBorderWidth: Spacing.border_1,
        CheckboxBorderColor: assignedColors.gray_light,
        CheckboxBorderColorchecked: assignedColors.primary,
        CheckboxBorderColorDisabled: assignedColors.gray_lighter,
        CheckboxPaddingLeft: 0,
        CheckboxPaddingBottom: 0,
        CheckboxIconSize: Spacing.type_5,
        CheckboxIconMarginTop: 0,
        CheckboxFontSize: Spacing.type_5,
        checkboxBgColor: assignedColors.primary,
        checkboxSize: Spacing.type_5,
        checkboxTickColor: '#fff',
        checkboxDefaultColor: 'transparent',
        checkboxTextShadowRadius: 0,

        // Color
        // brandPrimary: assignedColors.primary,
        // brandSecundary: assignedColors.gray_background,
        // brandDefault: assignedColors.gray_background,
        // brandInfo: assignedColors.info,
        // brandSuccess: assignedColors.success,
        // brandDanger: assignedColors.danger,
        // brandWarning: assignedColors.warning,
        // brandDark: assignedColors.gray_background,
        // brandLight: assignedColors.gray_background,
        ...assignedColors,

        // Container
        containerBgColor: assignedColors.brand_background,

        // Date Picker
        datePickerFlex: 1,
        datePickerPadding: Scale(10),
        datePickerTextColor: '#000',
        datePickerBg: 'transparent',

        // FAB
        fabWidth: Scale(56),

        // Font
        DefaultFontSize: Base,
        fontFamily: Fonts.fontFamily,
        fontFamilyBold: Fonts.fontFamilyBold,
        fontSizeBase: Scale(15),
        get fontSizeH1() {
            return this.fontSizeBase * 1.8;
        },
        get fontSizeH2() {
            return this.fontSizeBase * 1.6;
        },
        get fontSizeH3() {
            return this.fontSizeBase * 1.4;
        },

        // Footer
        footerHeight: Scale(64),
        footerDefaultBg: 'white',
        footerPaddingBottom: Spacing.spacer_4,

        // FooterTab
        tabBarTextColor: assignedColors.gray,
        activeTab: assignedColors.primary,
        sTabBarActiveTextColor: assignedColors.primary,
        tabBarActiveTextColor: assignedColors.primary,
        tabActiveBgColor: assignedColors.primary,

        // Header
        toolbarBtnColor: platform === PLATFORM.IOS ? '#007aff' : '#fff',
        toolbarDefaultBg: platform === PLATFORM.IOS ? '#F8F8F8' : '#3F51B5',
        toolbarHeight: platform === PLATFORM.IOS ? Scale(64) : Scale(72),
        toolbarSearchIconSize:
            platform === PLATFORM.IOS ? Spacing.type_4 : Scale(23),
        toolbarInputColor: platform === PLATFORM.IOS ? '#CECDD2' : '#fff',
        searchBarHeight:
            platform === PLATFORM.IOS ? Scale(30) : Spacing.spacer_7,
        searchBarInputHeight: platform === PLATFORM.IOS ? Scale(30) : Scale(50),
        toolbarBtnTextColor: platform === PLATFORM.IOS ? '#007aff' : '#fff',
        toolbarDefaultBorder: platform === PLATFORM.IOS ? '#a7a6ab' : '#3F51B5',
        iosStatusbar:
            platform === PLATFORM.IOS ? 'dark-content' : 'light-content',
        get statusBarColor() {
            return color(this.toolbarDefaultBg).darken(0.2).hex();
        },
        get darkenHeader() {
            return color(this.tabBgColor).darken(0.03).hex();
        },

        // Icon
        iconFamily: 'Ionicons',
        iconFontSize: platform === PLATFORM.IOS ? Scale(30) : Scale(28),
        iconHeaderSize: platform === PLATFORM.IOS ? Scale(33) : Spacing.type_5,

        // InputGroup
        inputFontSize: Base,
        inputBorderColorActive: assignedColors.primary,
        inputBorderColor: assignedColors.gray_light,
        inputSuccessBorderColor: assignedColors.success,
        inputErrorBorderColor: assignedColors.danger,
        inputHeightBase: Scale(56),
        get inputColor() {
            return assignedColors.gray_dark;
        },
        get inputColorPlaceholder() {
            return assignedColors.gray_light;
        },

        // Line Height
        buttonLineHeight: Scale(19),
        lineHeightH1: Scale(32),
        lineHeightH2: Scale(27),
        lineHeightH3: Scale(22),
        lineHeight: Spacing.spacer_5,
        listItemSelected: assignedColors.primary,

        // List
        listBg: 'transparent',
        listBorderColor: assignedColors.gray_lighter,
        listDividerBg: '#f4f4f4',
        listBtnUnderlayColor: '#DDD',
        listItemPadding:
            platform === PLATFORM.IOS ? Scale(10) : Spacing.spacer_3,
        listNoteColor: '#808080',
        listNoteSize: Scale(13),

        // Progress Bar
        defaultProgressColor: '#E4202D',
        inverseProgressColor: '#1A191B',

        // Radio Button
        radioBtnSize: platform === PLATFORM.IOS ? Scale(25) : Scale(23),
        radioSelectedColorAndroid: '#3F51B5',
        radioBtnLineHeight:
            platform === PLATFORM.IOS ? Scale(29) : Spacing.spacer_5,
        get radioColor() {
            return this.primary;
        },

        // Segment
        segmentBackgroundColor:
            platform === PLATFORM.IOS ? '#F8F8F8' : '#3F51B5',
        segmentActiveBackgroundColor:
            platform === PLATFORM.IOS ? '#007aff' : '#fff',
        segmentTextColor: platform === PLATFORM.IOS ? '#007aff' : '#fff',
        segmentActiveTextColor: platform === PLATFORM.IOS ? '#fff' : '#3F51B5',
        segmentBorderColor: platform === PLATFORM.IOS ? '#007aff' : '#fff',
        segmentBorderColorMain:
            platform === PLATFORM.IOS ? '#a7a6ab' : '#3F51B5',

        // Spinner
        defaultSpinnerColor: '#45D56E',
        inverseSpinnerColor: '#1A191B',

        // Tab
        tabBarDisabledTextColor: '#BDBDBD',
        tabDefaultBg: 'transparent',
        topTabBarTextColor: assignedColors.gray_dark,
        topTabBarActiveTextColor: assignedColors.primary,
        topTabBarBorderColor: assignedColors.gray_lighter,
        topTabBarActiveBorderColor: assignedColors.primary,

        // Tabs
        tabBgColor: assignedColors.white,
        tabFontSize: Spacing.type_3,

        // Text
        textColor: assignedColors.gray,
        inverseTextColor: '#fff',
        noteFontSize: Spacing.type_2,
        get defaultTextColor() {
            return this.textColor;
        },

        // Title
        titleFontfamily: Fonts.fontFamily,
        titleFontSize: platform === PLATFORM.IOS ? Scale(17) : Scale(19),
        subTitleFontSize:
            platform === PLATFORM.IOS ? Scale(11) : Spacing.type_2,
        subtitleColor: platform === PLATFORM.IOS ? '#8e8e93' : '#FFF',
        titleFontColor: assignedColors.gray_dark,

        // Other
        borderRadiusBase: platform === PLATFORM.IOS ? Scale(5) : Scale(2),
        borderWidth: 1 / PixelRatio.getPixelSizeForLayoutSize(1),
        contentPadding: Scale(10),
        dropdownLinkColor: '#414142',
        inputLineHeight: Spacing.lineHeight_2,
        deviceWidth,
        deviceHeight,
        isIphoneX,
        inputGroupRoundedBorderRadius: Scale(30),

        // iPhoneX SafeArea
        Inset: {
            portrait: {
                topInset: 24,
                leftInset: 0,
                rightInset: 0,
                bottomInset: 22,
            },
            landscape: {
                topInset: 0,
                leftInset: 44,
                rightInset: 44,
                bottomInset: 21,
            },
        },
    };
};

export default variables;
