import React from 'react';
import Assets from 'bch-assets';
import { render, act } from '@testing-library/react-native';
import { Image, HelperStyle } from '../../../src';

describe('Test componente <Image />', () => {
    const sourceSuccess = { uri: 'https://picsum.photos/200/300' };
    const sourceError = { uri: 'https:' };

    test('Debería renderizar correctamente', () => {
        const { toJSON } = render(
            <Image
                source={sourceSuccess}
                style={[HelperStyle.height(100), HelperStyle.width(100)]}
            />,
        );
        expect(toJSON()).toMatchSnapshot();
    });

    test('Debería renderizar imagen de carga y luego cargar imagen del source', () => {
        const { getByTestId } = render(
            <Image
                source={sourceSuccess}
                style={[HelperStyle.height(100), HelperStyle.width(100)]}
                testID="testID"
                testIDImagePlaceholder="testIDImagePlaceholder"
            />,
        );
        const imgElement = getByTestId('testID');
        act(() => {
            imgElement.props.onLoadStart();
        });
        const imgPlaceholderElement = getByTestId('testIDImagePlaceholder');
        expect(imgPlaceholderElement.props.source).toBe(
            Assets.placeholder.imgLoading,
        );
        act(() => {
            imgElement.props.onLoadEnd();
        });
        expect(imgElement.props.source).toBe(sourceSuccess);
    });

    test('Debería renderizar imagen de error si el source no es válido', () => {
        const { getByTestId } = render(
            <Image
                source={sourceError}
                style={[HelperStyle.height(100), HelperStyle.width(100)]}
                testID="testID"
            />,
        );
        const imgElement = getByTestId('testID');
        act(() => {
            imgElement.props.onError({
                nativeEvent: { error: 'bad URL' },
            });
        });
        expect(imgElement.props.source).toBe(Assets.placeholder.imgError);
    });
});
