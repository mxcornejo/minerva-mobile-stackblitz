import React from 'react';
import { render } from '@testing-library/react-native';
import { HelperStyle, SwipeListViewSticky, Text } from '../../../src/index';

describe('Test componente <SwipeListViewSticky />', () => {
    const renderCustom = () => <Text>Adipisicing laboris eiusmod</Text>;
    const dataListHeader = [{ component: renderCustom, isSwipeItem: false }];
    const globales = [
        {
            iconName: 'icon-bch-trush',
            onPress: jest.fn(),
            type: 'danger',
        },
    ];
    const personalizados = [
        {
            iconName: 'icon-bch-trush',
            onPress: jest.fn(),
            type: 'danger',
        },
        {
            iconName: 'icon-bch-edit',
            onPress: jest.fn(),
            type: 'primary',
        },
    ];
    const contactos = {
        label: 'M',
        nombre: 'Mara',
        detalle: 'Laborum nostrud amet incididunt',
        monto: '$ 400',
        iconName: 'icon-bch-buy-dollars',
    };
    const data = [
        { text: 'item 1', ...contactos, loading: true },
        { text: 'item 2', ...contactos, small: true },
        {
            text: 'item 3',
            hiddenItemRight: personalizados,
            hiddenItemLeft: personalizados,
            ...contactos,
        },
        { text: 'item 4', hiddenItemLeft: personalizados, ...contactos },
        { text: 'item 5', hiddenItemRight: personalizados, ...contactos },
    ];

    const renderItem = () => <Text style={HelperStyle.pa_7}>item</Text>;

    test('DeberÃ­a renderizar correctamente', () => {
        const { toJSON } = render(
            <SwipeListViewSticky
                data={data}
                keyExtractor={(item, index) => `${index}-algo`}
                renderItem={renderItem}
                hiddenItemRight={globales}
                hiddenItemLeft={globales}
                dataListHeader={dataListHeader}
                ListErrorComponent={renderCustom}
                ListLoadingComponent={renderCustom}
                ListEmptyComponent={renderCustom}
                stickyHeaderIndices={[1]}
            />,
        );
        expect(toJSON()).toMatchSnapshot();
    });
});
