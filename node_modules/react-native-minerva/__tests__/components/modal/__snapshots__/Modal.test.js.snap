// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test componente <Modal /> Deber√≠a renderizar correctamente 1`] = `
<Modal
  animationType="none"
  deviceHeight={null}
  deviceWidth={null}
  hardwareAccelerated={false}
  hasScroll={true}
  hideModalContentWhileAnimating={false}
  lottieIconAccessibilityHint=""
  onBackdropPress={[Function]}
  onModalHide={[Function]}
  onModalWillHide={[Function]}
  onModalWillShow={[Function]}
  onRequestClose={[Function]}
  onSwipeComplete={[Function]}
  panResponderThreshold={4}
  scrollHorizontal={false}
  scrollOffset={0}
  scrollOffsetMax={0}
  scrollTo={null}
  statusBarTranslucent={false}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  swipeDirection="down"
  swipeThreshold={100}
  titleAccessibilityHint=""
  titleAccessibilityLabel=""
  titleTestID=""
  transparent={true}
  visible={true}
>
  <View
    accessible={true}
    focusable={true}
    forwardedRef={[Function]}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#52677B",
        "bottom": 0,
        "height": 1334,
        "left": 0,
        "opacity": 0.4,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 750,
      }
    }
  />
  <View
    deviceHeight={null}
    deviceWidth={null}
    forwardedRef={[Function]}
    hasScroll={true}
    hideModalContentWhileAnimating={false}
    lottieIconAccessibilityHint=""
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    onSwipeComplete={[Function]}
    panResponderThreshold={4}
    pointerEvents="box-none"
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={false}
    style={
      Object {
        "flex": 1,
        "justifyContent": "flex-end",
        "left": 0,
        "margin": 0,
        "top": 0,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
      }
    }
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeDirection="down"
    swipeThreshold={100}
    titleAccessibilityHint=""
    titleAccessibilityLabel=""
    titleTestID=""
  >
    <View
      style={
        Array [
          Object {},
          Object {
            "borderTopLeftRadius": 16,
            "borderTopRightRadius": 16,
          },
          Object {
            "maxHeight": 1067.2,
          },
          Object {
            "backgroundColor": "#FFFFFF",
          },
          null,
          null,
        ]
      }
    >
      <View
        style={
          Array [
            Object {},
            Object {
              "alignSelf": "center",
              "borderRadius": 4,
              "height": 6,
              "marginBottom": 0,
              "marginTop": 8,
              "width": 64,
            },
            Object {
              "backgroundColor": "#F0F3F5",
            },
          ]
        }
      />
      <RCTScrollView
        bounces={false}
        contentContainerStyle={
          Array [
            Object {
              "paddingHorizontal": 16,
            },
            Object {
              "paddingTop": 24,
            },
            Object {
              "paddingBottom": 32,
            },
            Object {},
          ]
        }
        onScroll={false}
        scrollEventThrottle={16}
      >
        <View>
          <View
            onLayout={[Function]}
            style={Object {}}
          >
            <View
              style={
                Array [
                  Object {},
                  Object {},
                ]
              }
            >
              <View
                style={Object {}}
              >
                <Text
                  accessibilityHint=""
                  accessibilityLabel="Cillum pariatur do eu veniam veniam reprehenderit consequat."
                  accessible={true}
                  style={
                    Array [
                      Object {
                        "color": "#000",
                        "fontSize": 24,
                        "lineHeight": 27,
                      },
                      Object {
                        "color": "#002464",
                      },
                      false,
                      false,
                      Object {},
                      null,
                    ]
                  }
                  testID="Cillum pariatur do eu veniam veniam reprehenderit consequat."
                >
                  Cillum pariatur do eu veniam veniam reprehenderit consequat.
                </Text>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {},
                  Object {},
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {},
                    Object {},
                  ]
                }
              >
                <Text
                  accessibilityHint=""
                  accessibilityLabel="Ad occaecat id culpa ad dolore nisi consequat sint."
                  disabled={false}
                  items={
                    Array [
                      "Ad occaecat id culpa ad dolore nisi consequat sint.",
                    ]
                  }
                  style={
                    Array [
                      Object {
                        "color": "#000",
                        "fontFamily": "System",
                        "fontSize": 16,
                      },
                      Array [
                        false,
                        null,
                      ],
                      false,
                      null,
                    ]
                  }
                  testID="Ad occaecat id culpa ad dolore nisi consequat sint."
                  uppercase={false}
                  wrapper={true}
                  wrapperStyle={Object {}}
                >
                  Ad occaecat id culpa ad dolore nisi consequat sint.
                </Text>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {},
                  Object {},
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {},
                    false,
                    false,
                    Object {},
                  ]
                }
              >
                <View
                  accessibilityHint=""
                  accessibilityLabel="ok"
                  accessibilityRole="button"
                  accessibilityState={
                    Object {
                      "disabled": false,
                    }
                  }
                  accessible={true}
                  focusable={true}
                  forwardedRef={[Function]}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "alignSelf": "flex-start",
                      "backgroundColor": "#007aff",
                      "borderBottomWidth": null,
                      "borderColor": "#007aff",
                      "borderLeftWidth": null,
                      "borderRadius": 5,
                      "borderRightWidth": null,
                      "borderTopWidth": null,
                      "borderWidth": undefined,
                      "elevation": 2,
                      "flexDirection": "row",
                      "height": 45,
                      "justifyContent": "space-between",
                      "marginBottom": 16,
                      "opacity": 1,
                      "paddingBottom": 6,
                      "paddingTop": 6,
                      "shadowColor": undefined,
                      "shadowOffset": undefined,
                      "shadowOpacity": undefined,
                      "shadowRadius": undefined,
                    }
                  }
                  testID="ok"
                >
                  <BVLinearGradient
                    colors={
                      Array [
                        4283794431,
                        4280901375,
                      ]
                    }
                    endPoint={
                      Object {
                        "x": 1,
                        "y": 1,
                      }
                    }
                    locations={null}
                    startPoint={
                      Object {
                        "x": 0,
                        "y": 0,
                      }
                    }
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "borderColor": "transparent",
                          "borderRadius": 57,
                          "flex": 1,
                          "flexDirection": "row",
                          "justifyContent": "center",
                        },
                        false,
                        undefined,
                        Object {
                          "height": 56,
                        },
                        false,
                      ]
                    }
                  >
                    <View
                      accessibilityState={
                        Object {
                          "disabled": false,
                        }
                      }
                      accessible={true}
                      focusable={true}
                      onClick={[Function]}
                      onLayout={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      pointerEvents="box-only"
                      style={
                        Object {
                          "borderRadius": 57,
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "transparent",
                              "flex": 1,
                              "flexDirection": "row",
                              "justifyContent": "center",
                              "zIndex": 2,
                            },
                            Object {
                              "paddingHorizontal": 24,
                              "paddingVertical": 16,
                            },
                          ]
                        }
                      >
                        <View
                          animatedStyle={
                            Object {
                              "value": Object {
                                "opacity": 1,
                              },
                            }
                          }
                          collapsable={false}
                          style={
                            Object {
                              "flexDirection": "row",
                              "opacity": 1,
                            }
                          }
                        >
                          <Text
                            ellipsizeMode="tail"
                            numberOfLines={1}
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "color": "#fff",
                                  "fontFamily": "System",
                                  "fontSize": 16.5,
                                  "marginLeft": 0,
                                  "marginRight": 0,
                                  "paddingLeft": 16,
                                  "paddingRight": 16,
                                },
                                Object {
                                  "textTransform": "uppercase",
                                },
                                Object {},
                              ]
                            }
                            uppercase={false}
                          >
                            ok
                          </Text>
                        </View>
                        <View
                          animatedStyle={
                            Object {
                              "value": Object {
                                "opacity": 0,
                              },
                            }
                          }
                          collapsable={false}
                          style={
                            Object {
                              "opacity": 0,
                              "position": "absolute",
                            }
                          }
                        />
                      </View>
                      <View
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "bottom": 0,
                              "left": 0,
                              "overflow": "hidden",
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            },
                            Object {
                              "borderRadius": 57,
                            },
                          ]
                        }
                      />
                    </View>
                  </BVLinearGradient>
                </View>
                <View
                  accessibilityHint=""
                  accessibilityLabel="Volver"
                  accessibilityRole="button"
                  accessibilityState={
                    Object {
                      "disabled": false,
                    }
                  }
                  accessible={true}
                  focusable={true}
                  forwardedRef={[Function]}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "alignSelf": "flex-start",
                      "backgroundColor": "#007aff",
                      "borderBottomWidth": null,
                      "borderColor": "#007aff",
                      "borderLeftWidth": null,
                      "borderRadius": 5,
                      "borderRightWidth": null,
                      "borderTopWidth": null,
                      "borderWidth": undefined,
                      "elevation": 2,
                      "flexDirection": "row",
                      "height": 45,
                      "justifyContent": "space-between",
                      "opacity": 1,
                      "paddingBottom": 6,
                      "paddingTop": 6,
                      "shadowColor": undefined,
                      "shadowOffset": undefined,
                      "shadowOpacity": undefined,
                      "shadowRadius": undefined,
                    }
                  }
                  testID="Volver"
                >
                  <BVLinearGradient
                    colors={
                      Array [
                        4294967295,
                        4294967295,
                      ]
                    }
                    endPoint={
                      Object {
                        "x": 1,
                        "y": 1,
                      }
                    }
                    locations={null}
                    startPoint={
                      Object {
                        "x": 0,
                        "y": 0,
                      }
                    }
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "borderColor": "transparent",
                          "borderRadius": 57,
                          "flex": 1,
                          "flexDirection": "row",
                          "justifyContent": "center",
                        },
                        Object {
                          "borderWidth": 2,
                        },
                        Object {
                          "borderColor": "#CED7E0",
                        },
                        Object {
                          "height": 56,
                        },
                        false,
                      ]
                    }
                  >
                    <View
                      accessibilityState={
                        Object {
                          "disabled": false,
                        }
                      }
                      accessible={true}
                      focusable={true}
                      onClick={[Function]}
                      onLayout={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      pointerEvents="box-only"
                      style={
                        Object {
                          "borderRadius": 57,
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "transparent",
                              "flex": 1,
                              "flexDirection": "row",
                              "justifyContent": "center",
                              "zIndex": 2,
                            },
                            Object {
                              "paddingHorizontal": 24,
                              "paddingVertical": 16,
                            },
                          ]
                        }
                      >
                        <View
                          animatedStyle={
                            Object {
                              "value": Object {
                                "opacity": 1,
                              },
                            }
                          }
                          collapsable={false}
                          style={
                            Object {
                              "flexDirection": "row",
                              "opacity": 1,
                            }
                          }
                        >
                          <Text
                            ellipsizeMode="tail"
                            numberOfLines={1}
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "color": "#fff",
                                  "fontFamily": "System",
                                  "fontSize": 16.5,
                                  "marginLeft": 0,
                                  "marginRight": 0,
                                  "paddingLeft": 16,
                                  "paddingRight": 16,
                                },
                                Object {
                                  "textTransform": "uppercase",
                                },
                                Object {},
                              ]
                            }
                            uppercase={false}
                          >
                            Volver
                          </Text>
                        </View>
                        <View
                          animatedStyle={
                            Object {
                              "value": Object {
                                "opacity": 0,
                              },
                            }
                          }
                          collapsable={false}
                          style={
                            Object {
                              "opacity": 0,
                              "position": "absolute",
                            }
                          }
                        />
                      </View>
                      <View
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "bottom": 0,
                              "left": 0,
                              "overflow": "hidden",
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            },
                            Object {
                              "borderRadius": 57,
                            },
                          ]
                        }
                      />
                    </View>
                  </BVLinearGradient>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</Modal>
`;

exports[`Test componente <Modal /> Deber√≠a renderizar modal campa√±a 1`] = `
<Modal
  animationType="none"
  deviceHeight={null}
  deviceWidth={null}
  hardwareAccelerated={false}
  hideModalContentWhileAnimating={false}
  lottieIconAccessibilityHint=""
  onBackdropPress={[Function]}
  onModalHide={[Function]}
  onModalWillHide={[Function]}
  onModalWillShow={[Function]}
  onRequestClose={[Function]}
  onSwipeComplete={[Function]}
  panResponderThreshold={4}
  scrollHorizontal={false}
  scrollOffset={0}
  scrollOffsetMax={0}
  scrollTo={null}
  statusBarTranslucent={false}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  swipeDirection="down"
  swipeThreshold={100}
  titleAccessibilityHint=""
  titleAccessibilityLabel=""
  titleTestID=""
  transparent={true}
  visible={true}
>
  <View
    accessible={true}
    focusable={true}
    forwardedRef={[Function]}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#52677B",
        "bottom": 0,
        "height": 1334,
        "left": 0,
        "opacity": 0.4,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 750,
      }
    }
  />
  <View
    deviceHeight={null}
    deviceWidth={null}
    forwardedRef={[Function]}
    hideModalContentWhileAnimating={false}
    lottieIconAccessibilityHint=""
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    onSwipeComplete={[Function]}
    panResponderThreshold={4}
    pointerEvents="box-none"
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={false}
    style={
      Object {
        "flex": 1,
        "justifyContent": "flex-end",
        "left": 0,
        "margin": 0,
        "top": 0,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
      }
    }
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeDirection="down"
    swipeThreshold={100}
    titleAccessibilityHint=""
    titleAccessibilityLabel=""
    titleTestID=""
  >
    <BVLinearGradient
      colors={
        Array [
          4278200452,
          4278197068,
        ]
      }
      endPoint={
        Object {
          "x": 1,
          "y": 0,
        }
      }
      locations={
        Array [
          0,
          0.99,
        ]
      }
      startPoint={
        Object {
          "x": 0,
          "y": 1,
        }
      }
      style={
        Array [
          Object {
            "flex": 1,
          },
          Object {
            "borderTopLeftRadius": 8,
          },
          Object {
            "borderTopRightRadius": 8,
          },
          Object {
            "maxHeight": 1267.3,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {},
            Object {
              "borderTopLeftRadius": 16,
              "borderTopRightRadius": 16,
            },
            Object {
              "maxHeight": 1267.3,
            },
            Object {
              "backgroundColor": "#FFFFFF",
            },
            null,
            Object {
              "backgroundColor": "transparent",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
              Object {
                "alignSelf": "center",
                "borderRadius": 4,
                "height": 6,
                "marginBottom": 0,
                "marginTop": 8,
                "width": 64,
              },
              Object {
                "backgroundColor": "#52677B",
              },
            ]
          }
        />
        <RCTScrollView
          bounces={false}
          contentContainerStyle={
            Array [
              Object {
                "paddingHorizontal": 16,
              },
              Object {
                "paddingTop": 24,
              },
              Object {
                "paddingBottom": 32,
              },
              Object {},
            ]
          }
          onScroll={false}
          scrollEventThrottle={16}
        >
          <View>
            <View
              onLayout={[Function]}
              style={Object {}}
            >
              <View
                style={
                  Array [
                    Object {},
                    Object {},
                  ]
                }
              />
              <View
                style={
                  Array [
                    Object {},
                    Object {},
                  ]
                }
              />
              <View
                style={
                  Array [
                    Object {},
                    Object {},
                  ]
                }
              />
            </View>
          </View>
        </RCTScrollView>
      </View>
    </BVLinearGradient>
  </View>
</Modal>
`;
