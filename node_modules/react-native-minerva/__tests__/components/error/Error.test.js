import React from 'react';
import { render } from '@testing-library/react-native';
import { View, Error } from '../../../src';

describe('Test componente <Error />', () => {
    const testIDCustomComponent = 'IDcustomComponent';
    const renderComponent = () => <View testID={testIDCustomComponent} />;
    const props = {
        title: 'Ipsum enim',
        content:
            'Velit reprehenderit quis fugiat ipsum nostrud id excepteur id occaecat duis esse cupidatat aute sunt.',
        buttonsGroup: [
            {
                title: 'Button',
                props: {
                    primary: true,
                },
            },
            {
                title: 'Button',
                props: {
                    error: true,
                },
            },
        ],
    };
    test('Debería renderizar correctamente', () => {
        const { title, content } = props;
        const { toJSON } = render(
            <Error lottieIcon="danger" title={title} content={content} />,
        );
        expect(toJSON()).toMatchSnapshot();
    });

    test('Debería renderizar renderContent', () => {
        const { title, content, buttonsGroup } = props;
        const { getByTestId } = render(
            <Error
                lottieIcon="danger"
                title={title}
                content={content}
                buttonsGroup={buttonsGroup}
                renderContent={renderComponent}
            />,
        );
        expect(getByTestId(testIDCustomComponent)).toBeDefined();
    });

    test('Debería renderizar renderFooter', () => {
        const { title, buttonsGroup } = props;
        const { getByTestId } = render(
            <Error
                lottieIcon="danger"
                title={title}
                buttonsGroup={buttonsGroup}
                renderFooter={renderComponent}
            />,
        );
        expect(getByTestId(testIDCustomComponent)).toBeDefined();
    });

    test('Debería renderizar children', () => {
        const { title } = props;
        const { getByTestId } = render(
            <Error title={title} lottieIcon="danger">
                {renderComponent()}
            </Error>,
        );
        expect(getByTestId(testIDCustomComponent)).toBeDefined();
    });
});
