// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test componente <KeyboardAvoidingView /> Debería deshabilitar correción a hasDefaultKeyboardVerticalOffset 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Array [
        Object {
          "flex": 1,
        },
        Object {},
      ],
      Object {
        "paddingBottom": 0,
      },
    ]
  }
  testID="testIDKeyboardAvoidingView"
>
  <View
    pointerEvents="auto"
    style={
      Array [
        Object {
          "marginBottom": 16,
        },
        Object {
          "marginTop": 8,
        },
        Object {},
      ]
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "borderBottomLeftRadius": 8,
              "borderTopLeftRadius": 8,
              "width": 11,
            },
            Object {
              "borderColor": "#8393A3",
              "height": 56,
            },
            Object {
              "borderBottomWidth": 1,
              "borderLeftWidth": 1,
              "borderTopWidth": 1,
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "borderColor": "#8393A3",
              "height": 56,
            },
            Object {
              "borderBottomWidth": 1,
              "borderTopWidth": 1,
            },
            Object {
              "width": 0,
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "borderBottomRightRadius": 8,
              "borderTopRightRadius": 8,
              "flex": 1,
            },
            Object {
              "borderColor": "#8393A3",
              "height": 56,
            },
            Object {
              "borderBottomWidth": 1,
              "borderRightWidth": 1,
              "borderTopWidth": 1,
            },
          ]
        }
      />
    </View>
    <View
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={false}
      collapsable={false}
      focusable={false}
      forwardedRef={[Function]}
      nativeID="animatedComponent"
      onClick={[Function]}
      onLayout={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderBottomWidth": 1,
          "borderColor": "#D9D5DC",
          "borderLeftWidth": 1,
          "borderRadius": undefined,
          "borderRightWidth": 1,
          "borderTopWidth": 1,
          "borderWidth": undefined,
          "flexDirection": "row",
          "marginLeft": 0,
          "opacity": 1,
        }
      }
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            },
          }
        }
        collapsable={false}
        onLayout={[Function]}
        pointerEvents="none"
        style={
          Object {
            "left": 10,
            "opacity": 1,
            "paddingHorizontal": 6,
            "position": "absolute",
            "top": 15,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
            "zIndex": 2,
          }
        }
      >
        <Text
          accessibilityHint=""
          accessibilityLabel="Input"
          accessible={true}
          animatedStyle={
            Object {
              "value": Object {
                "fontSize": 16,
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#52677B",
              "fontFamily": "NunitoSans-Regular",
              "fontSize": 16,
              "lineHeight": 24,
              "zIndex": 2,
            }
          }
          testID="Input"
        >
          Input
        </Text>
      </View>
      <TextInput
        accessibilityHint=""
        accessibilityLabel=""
        digiCard={false}
        disabled={false}
        disabledPadding={false}
        editable={true}
        error={false}
        helperText=""
        inverse={false}
        isOpenSelect={false}
        isRenderRightVisible={false}
        labeAccessibilityHint=""
        label="Input"
        labelAccessibilityLabel=""
        labelTestID=""
        large={false}
        loading={false}
        maxHeight={96}
        maxLength={null}
        multiline={false}
        number={false}
        onBlur={[Function]}
        onFocus={[Function]}
        pass={false}
        placeholderTextColor="#575757"
        pointerEvents="auto"
        renderLeft={false}
        renderLeftSide={false}
        renderRight={false}
        renderRightSide={false}
        select={false}
        selectionColor="#CED7E0"
        showStateIconRight={false}
        style={
          Array [
            Object {
              "color": "#000",
              "flex": 1,
              "fontSize": 17,
              "height": 50,
              "paddingLeft": 8,
              "paddingRight": 5,
              "top": 1.5,
            },
            Object {
              "top": 0,
            },
            Object {
              "opacity": 1,
            },
          ]
        }
        success={false}
        testID=""
        underlineColorAndroid="rgba(0,0,0,0)"
        value=""
      />
    </View>
  </View>
</View>
`;

exports[`Test componente <KeyboardAvoidingView /> Debería renderizar correctamente 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Array [
        Object {
          "flex": 1,
        },
        Object {},
      ],
      Object {
        "paddingBottom": 0,
      },
    ]
  }
  testID="testIDKeyboardAvoidingView"
>
  <View
    pointerEvents="auto"
    style={
      Array [
        Object {
          "marginBottom": 16,
        },
        Object {
          "marginTop": 8,
        },
        Object {},
      ]
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "borderBottomLeftRadius": 8,
              "borderTopLeftRadius": 8,
              "width": 11,
            },
            Object {
              "borderColor": "#8393A3",
              "height": 56,
            },
            Object {
              "borderBottomWidth": 1,
              "borderLeftWidth": 1,
              "borderTopWidth": 1,
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "borderColor": "#8393A3",
              "height": 56,
            },
            Object {
              "borderBottomWidth": 1,
              "borderTopWidth": 1,
            },
            Object {
              "width": 0,
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "borderBottomRightRadius": 8,
              "borderTopRightRadius": 8,
              "flex": 1,
            },
            Object {
              "borderColor": "#8393A3",
              "height": 56,
            },
            Object {
              "borderBottomWidth": 1,
              "borderRightWidth": 1,
              "borderTopWidth": 1,
            },
          ]
        }
      />
    </View>
    <View
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={false}
      collapsable={false}
      focusable={false}
      forwardedRef={[Function]}
      nativeID="animatedComponent"
      onClick={[Function]}
      onLayout={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderBottomWidth": 1,
          "borderColor": "#D9D5DC",
          "borderLeftWidth": 1,
          "borderRadius": undefined,
          "borderRightWidth": 1,
          "borderTopWidth": 1,
          "borderWidth": undefined,
          "flexDirection": "row",
          "marginLeft": 0,
          "opacity": 1,
        }
      }
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            },
          }
        }
        collapsable={false}
        onLayout={[Function]}
        pointerEvents="none"
        style={
          Object {
            "left": 10,
            "opacity": 1,
            "paddingHorizontal": 6,
            "position": "absolute",
            "top": 15,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
            "zIndex": 2,
          }
        }
      >
        <Text
          accessibilityHint=""
          accessibilityLabel="Input"
          accessible={true}
          animatedStyle={
            Object {
              "value": Object {
                "fontSize": 16,
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#52677B",
              "fontFamily": "NunitoSans-Regular",
              "fontSize": 16,
              "lineHeight": 24,
              "zIndex": 2,
            }
          }
          testID="Input"
        >
          Input
        </Text>
      </View>
      <TextInput
        accessibilityHint=""
        accessibilityLabel=""
        digiCard={false}
        disabled={false}
        disabledPadding={false}
        editable={true}
        error={false}
        helperText=""
        inverse={false}
        isOpenSelect={false}
        isRenderRightVisible={false}
        labeAccessibilityHint=""
        label="Input"
        labelAccessibilityLabel=""
        labelTestID=""
        large={false}
        loading={false}
        maxHeight={96}
        maxLength={null}
        multiline={false}
        number={false}
        onBlur={[Function]}
        onFocus={[Function]}
        pass={false}
        placeholderTextColor="#575757"
        pointerEvents="auto"
        renderLeft={false}
        renderLeftSide={false}
        renderRight={false}
        renderRightSide={false}
        select={false}
        selectionColor="#CED7E0"
        showStateIconRight={false}
        style={
          Array [
            Object {
              "color": "#000",
              "flex": 1,
              "fontSize": 17,
              "height": 50,
              "paddingLeft": 8,
              "paddingRight": 5,
              "top": 1.5,
            },
            Object {
              "top": 0,
            },
            Object {
              "opacity": 1,
            },
          ]
        }
        success={false}
        testID=""
        underlineColorAndroid="rgba(0,0,0,0)"
        value=""
      />
    </View>
  </View>
</View>
`;
