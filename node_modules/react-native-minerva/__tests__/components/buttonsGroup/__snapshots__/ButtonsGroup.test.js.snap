// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test componente <ButtonsGroup /> Deber√≠a renderizar correctamente 1`] = `
<View
  style={
    Array [
      Object {},
      false,
      false,
      Object {
        "marginBottom": 16,
      },
    ]
  }
>
  <View
    accessibilityHint=""
    accessibilityLabel="primary"
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    focusable={true}
    forwardedRef={[Function]}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "flex-start",
        "backgroundColor": "#007aff",
        "borderBottomWidth": null,
        "borderColor": "#007aff",
        "borderLeftWidth": null,
        "borderRadius": 5,
        "borderRightWidth": null,
        "borderTopWidth": null,
        "borderWidth": undefined,
        "elevation": 2,
        "flexDirection": "row",
        "height": 45,
        "justifyContent": "space-between",
        "marginBottom": 16,
        "opacity": 1,
        "paddingBottom": 6,
        "paddingTop": 6,
        "shadowColor": undefined,
        "shadowOffset": undefined,
        "shadowOpacity": undefined,
        "shadowRadius": undefined,
      }
    }
    testID="primary"
  >
    <BVLinearGradient
      colors={
        Array [
          4283794431,
          4280901375,
        ]
      }
      endPoint={
        Object {
          "x": 1,
          "y": 1,
        }
      }
      locations={null}
      startPoint={
        Object {
          "x": 0,
          "y": 0,
        }
      }
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderColor": "transparent",
            "borderRadius": 57,
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "center",
          },
          false,
          undefined,
          Object {
            "height": 56,
          },
          false,
        ]
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onLayout={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="box-only"
        style={
          Object {
            "borderRadius": 57,
            "flex": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "zIndex": 2,
              },
              Object {
                "paddingHorizontal": 24,
                "paddingVertical": 16,
              },
            ]
          }
        >
          <View
            animatedStyle={
              Object {
                "value": Object {
                  "opacity": 1,
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "flexDirection": "row",
                "opacity": 1,
              }
            }
          >
            <Text
              ellipsizeMode="tail"
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#fff",
                    "fontFamily": "System",
                    "fontSize": 16.5,
                    "marginLeft": 0,
                    "marginRight": 0,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                  },
                  Object {
                    "textTransform": "uppercase",
                  },
                  Object {},
                ]
              }
              uppercase={false}
            >
              primary
            </Text>
          </View>
          <View
            animatedStyle={
              Object {
                "value": Object {
                  "opacity": 0,
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "opacity": 0,
                "position": "absolute",
              }
            }
          />
        </View>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "bottom": 0,
                "left": 0,
                "overflow": "hidden",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "borderRadius": 57,
              },
            ]
          }
        />
      </View>
    </BVLinearGradient>
  </View>
  <View
    accessibilityHint=""
    accessibilityLabel="secondary"
    accessibilityRole="button"
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    focusable={true}
    forwardedRef={[Function]}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "flex-start",
        "backgroundColor": "#007aff",
        "borderBottomWidth": null,
        "borderColor": "#007aff",
        "borderLeftWidth": null,
        "borderRadius": 5,
        "borderRightWidth": null,
        "borderTopWidth": null,
        "borderWidth": undefined,
        "elevation": 2,
        "flexDirection": "row",
        "height": 45,
        "justifyContent": "space-between",
        "opacity": 1,
        "paddingBottom": 6,
        "paddingTop": 6,
        "shadowColor": undefined,
        "shadowOffset": undefined,
        "shadowOpacity": undefined,
        "shadowRadius": undefined,
      }
    }
    testID="secondary"
  >
    <BVLinearGradient
      colors={
        Array [
          4294967295,
          4294967295,
        ]
      }
      endPoint={
        Object {
          "x": 1,
          "y": 1,
        }
      }
      locations={null}
      startPoint={
        Object {
          "x": 0,
          "y": 0,
        }
      }
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderColor": "transparent",
            "borderRadius": 57,
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "center",
          },
          Object {
            "borderWidth": 2,
          },
          Object {
            "borderColor": "#A3B7F5",
          },
          Object {
            "height": 56,
          },
          false,
        ]
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onLayout={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="box-only"
        style={
          Object {
            "borderRadius": 57,
            "flex": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "zIndex": 2,
              },
              Object {
                "paddingHorizontal": 24,
                "paddingVertical": 16,
              },
            ]
          }
        >
          <View
            animatedStyle={
              Object {
                "value": Object {
                  "opacity": 1,
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "flexDirection": "row",
                "opacity": 1,
              }
            }
          >
            <Text
              ellipsizeMode="tail"
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#fff",
                    "fontFamily": "System",
                    "fontSize": 16.5,
                    "marginLeft": 0,
                    "marginRight": 0,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                  },
                  Object {
                    "textTransform": "uppercase",
                  },
                  Object {},
                ]
              }
              uppercase={false}
            >
              secondary
            </Text>
          </View>
          <View
            animatedStyle={
              Object {
                "value": Object {
                  "opacity": 0,
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "opacity": 0,
                "position": "absolute",
              }
            }
          />
        </View>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "bottom": 0,
                "left": 0,
                "overflow": "hidden",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "borderRadius": 57,
              },
            ]
          }
        />
      </View>
    </BVLinearGradient>
  </View>
</View>
`;
