// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test componente <ListItemContactos /> Debería renderizar con estado disabled 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    accessibilityHint=""
    accessibilityLabel=""
    accessibilityState={
      Object {
        "disabled": true,
      }
    }
    accessible={false}
    focusable={false}
    onClick={[Function]}
    onLayout={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    testID=""
  >
    <View
      accessibilityHint=""
      accessibilityLabel=""
      accessible={false}
      avatar={true}
      disabled={true}
      firstItem={false}
      lastItem={false}
      middleItem={false}
      noBorder={true}
      onLayout={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderBottomWidth": null,
            "borderColor": "#CED7E0",
            "flexDirection": "row",
            "paddingBottom": 8,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 8,
          },
          Object {},
        ]
      }
      underlayColor="rgba(82, 103, 123, 0.16000000000000003)"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": null,
              "alignSelf": null,
              "borderBottomWidth": null,
              "flex": 1,
              "justifyContent": "center",
            },
            Object {},
          ]
        }
      >
        <Text
          accessibilityLabel="Mara Dali"
          ellipsizeMode="tail"
          numberOfLines={2}
          small={true}
          style={
            Array [
              Object {
                "color": "#52677B",
                "fontFamily": "NunitoSans-Regular",
                "fontSize": 14,
                "lineHeight": 24,
                "marginBottom": 0,
                "marginRight": 16,
              },
              Object {
                "color": "#CED7E0",
              },
              Object {
                "fontWeight": "bold",
              },
            ]
          }
          testID="Mara Dali"
          uppercase={false}
        >
          Mara Dali
        </Text>
        <View
          style={
            Array [
              Object {},
              Object {},
            ]
          }
        >
          <Text
            accessibilityHint=""
            accessibilityLabel="12 de Agosto 2022"
            disabled={true}
            items={
              Array [
                Object {
                  "numberOfLines": 2,
                  "text": "12 de Agosto 2022",
                },
              ]
            }
            numberOfLines={2}
            smaller={true}
            style={
              Array [
                Object {
                  "color": "#CED7E0",
                  "fontFamily": "NunitoSans-Regular",
                  "fontSize": 12,
                  "lineHeight": 24,
                  "marginBottom": 16,
                },
                Object {
                  "marginBottom": 0,
                },
                Object {
                  "color": "#CED7E0",
                },
                null,
              ]
            }
            testID="12 de Agosto 2022"
            text="12 de Agosto 2022"
            uppercase={false}
            wrapper={true}
            wrapperStyle={Object {}}
          >
            12 de Agosto 2022
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "alignItems": "flex-end",
              "alignSelf": "stretch",
              "borderBottomWidth": null,
              "flex": 0,
              "justifyContent": "center",
              "paddingBottom": null,
              "paddingLeft": null,
              "paddingRight": null,
              "paddingTop": null,
            },
            Object {
              "marginLeft": 16,
            },
            Object {},
          ]
        }
      >
        <Text
          accessibilityHint=""
          accessibilityLabel="$ 300"
          number={true}
          small={true}
          style={
            Array [
              Object {
                "alignSelf": null,
                "color": "#52677B",
                "fontFamily": "NunitoSans-Bold",
                "fontSize": 14,
                "letterSpacing": 1,
                "lineHeight": 24,
                "marginBottom": 0,
              },
              Object {},
              Object {
                "color": "#CED7E0",
              },
            ]
          }
          testID="$ 300"
          uppercase={false}
        >
          $ 300
        </Text>
      </View>
    </View>
  </View>
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0.4)",
          "flex": 1,
          "justifyContent": "flex-end",
          "opacity": 1,
        }
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={false}
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#fff",
            "elevation": 4,
            "maxHeight": 667,
            "minHeight": 56,
            "opacity": 1,
            "padding": 15,
          }
        }
      >
        <RCTScrollView
          data={Array []}
          getItem={[Function]}
          getItemCount={[Function]}
          keyExtractor={[Function]}
          onContentSizeChange={[Function]}
          onLayout={[Function]}
          onMomentumScrollBegin={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          style={
            Array [
              Object {
                "marginHorizontal": -15,
              },
              Object {
                "marginTop": 0,
              },
            ]
          }
          viewabilityConfigCallbackPairs={Array []}
        >
          <View />
        </RCTScrollView>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Test componente <ListItemContactos /> Debería renderizar con imagen local 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    accessibilityHint=""
    accessibilityLabel=""
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={false}
    focusable={false}
    onClick={[Function]}
    onLayout={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    testID=""
  >
    <View
      accessibilityHint=""
      accessibilityLabel=""
      accessible={false}
      avatar={true}
      disabled={false}
      firstItem={false}
      lastItem={false}
      middleItem={false}
      noBorder={true}
      onLayout={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderBottomWidth": null,
            "borderColor": "#CED7E0",
            "flexDirection": "row",
            "paddingBottom": 8,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 8,
          },
          Object {},
        ]
      }
      underlayColor="rgba(82, 103, 123, 0.16000000000000003)"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "flex-start",
              "alignSelf": "center",
              "flex": 0,
              "flexDirection": "row",
              "marginRight": 16,
            },
            Object {
              "alignItems": "center",
            },
            Object {},
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
              Object {},
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
                Object {
                  "zIndex": 2,
                },
              ]
            }
            testID=""
          >
            <View
              animatedStyle={
                Object {
                  "value": Object {
                    "opacity": 90,
                    "transform": Array [
                      Object {
                        "rotateY": "0deg",
                      },
                    ],
                  },
                }
              }
              collapsable={false}
              style={
                Object {
                  "opacity": 90,
                  "transform": Array [
                    Object {
                      "rotateY": "0deg",
                    },
                  ],
                }
              }
            >
              <View
                style={
                  Array [
                    Object {},
                    Object {
                      "justifyContent": "center",
                    },
                    Object {
                      "alignItems": "center",
                    },
                    Object {
                      "alignContent": "center",
                    },
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {},
                      48,
                    ]
                  }
                >
                  <Image
                    accessibilityHint=""
                    accessibilityLabel=""
                    accessible={true}
                    large={false}
                    medium={true}
                    resizeMode="cover"
                    small={false}
                    smaller={false}
                    source={
                      Object {
                        "testUri": "../../bch-assets/images/alerts/info.png",
                      }
                    }
                    style={
                      Array [
                        Object {
                          "borderRadius": 24,
                          "height": 48,
                          "marginBottom": 16,
                          "width": 48,
                        },
                        Object {
                          "marginBottom": 0,
                        },
                        Object {
                          "alignSelf": "center",
                        },
                        Array [
                          Object {},
                          false,
                        ],
                      ]
                    }
                    testID=""
                  />
                </View>
              </View>
            </View>
            <View
              animatedStyle={
                Object {
                  "value": Object {
                    "opacity": -89,
                    "transform": Array [
                      Object {
                        "rotateY": "180deg",
                      },
                    ],
                  },
                }
              }
              collapsable={false}
              style={
                Object {
                  "opacity": -89,
                  "position": "absolute",
                  "transform": Array [
                    Object {
                      "rotateY": "180deg",
                    },
                  ],
                }
              }
            >
              <View
                style={
                  Array [
                    Object {},
                    Object {
                      "justifyContent": "center",
                    },
                    Object {
                      "alignItems": "center",
                    },
                    Object {
                      "alignContent": "center",
                    },
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {},
                      48,
                    ]
                  }
                >
                  <View
                    accessibilityHint=""
                    accessibilityLabel=""
                    danger={false}
                    info={false}
                    large={false}
                    medium={true}
                    small={false}
                    smaller={false}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#F0F3F5",
                          "borderRadius": 24,
                          "height": 48,
                          "justifyContent": "center",
                          "minWidth": 48,
                          "paddingBottom": 2,
                          "paddingLeft": 8,
                          "paddingRight": 8,
                          "paddingTop": 2,
                        },
                        Object {
                          "alignSelf": "flex-start",
                        },
                        Object {
                          "justifyContent": "center",
                        },
                        Object {
                          "alignItems": "center",
                        },
                        null,
                        Array [
                          Object {
                            "justifyContent": "center",
                          },
                          Object {
                            "alignItems": "center",
                          },
                          Object {
                            "backgroundColor": "#295EFF",
                          },
                          Array [
                            Object {},
                            false,
                          ],
                        ],
                      ]
                    }
                    success={false}
                    testID=""
                    warning={false}
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": undefined,
                            "fontSize": 12,
                          },
                          Array [
                            Object {
                              "color": "#2A343D",
                            },
                            Object {
                              "fontSize": 24,
                            },
                            Object {
                              "color": "#FFFFFF",
                              "fontSize": 16,
                            },
                          ],
                          Object {
                            "fontFamily": "icomoon",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "alignItems": null,
              "alignSelf": null,
              "borderBottomWidth": null,
              "flex": 1,
              "justifyContent": "center",
            },
            Object {},
          ]
        }
      >
        <Text
          accessibilityLabel="Juan Jose"
          small={true}
          style={
            Array [
              Object {
                "color": "#52677B",
                "fontFamily": "NunitoSans-Regular",
                "fontSize": 14,
                "lineHeight": 24,
                "marginBottom": 0,
                "marginRight": 16,
              },
              Object {
                "color": "#2A343D",
              },
              Object {
                "fontWeight": "bold",
              },
            ]
          }
          testID="Juan Jose"
          uppercase={false}
        >
          Juan Jose
        </Text>
      </View>
    </View>
  </View>
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0.4)",
          "flex": 1,
          "justifyContent": "flex-end",
          "opacity": 1,
        }
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={false}
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#fff",
            "elevation": 4,
            "maxHeight": 667,
            "minHeight": 56,
            "opacity": 1,
            "padding": 15,
          }
        }
      >
        <RCTScrollView
          data={Array []}
          getItem={[Function]}
          getItemCount={[Function]}
          keyExtractor={[Function]}
          onContentSizeChange={[Function]}
          onLayout={[Function]}
          onMomentumScrollBegin={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          style={
            Array [
              Object {
                "marginHorizontal": -15,
              },
              Object {
                "marginTop": 0,
              },
            ]
          }
          viewabilityConfigCallbackPairs={Array []}
        >
          <View />
        </RCTScrollView>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Test componente <ListItemContactos /> Debería renderizar correctamente 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    accessibilityHint=""
    accessibilityLabel=""
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={false}
    focusable={false}
    onClick={[Function]}
    onLayout={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    testID=""
  >
    <View
      accessibilityHint=""
      accessibilityLabel=""
      accessible={false}
      avatar={true}
      disabled={false}
      firstItem={false}
      lastItem={false}
      middleItem={false}
      noBorder={true}
      onLayout={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderBottomWidth": null,
            "borderColor": "#CED7E0",
            "flexDirection": "row",
            "paddingBottom": 8,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 8,
          },
          Object {},
        ]
      }
      underlayColor="rgba(82, 103, 123, 0.16000000000000003)"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": null,
              "alignSelf": null,
              "borderBottomWidth": null,
              "flex": 1,
              "justifyContent": "center",
            },
            Object {},
          ]
        }
      >
        <Text
          accessibilityLabel="Mara Dali"
          small={true}
          style={
            Array [
              Object {
                "color": "#52677B",
                "fontFamily": "NunitoSans-Regular",
                "fontSize": 14,
                "lineHeight": 24,
                "marginBottom": 0,
                "marginRight": 16,
              },
              Object {
                "color": "#2A343D",
              },
              Object {
                "fontWeight": "bold",
              },
            ]
          }
          testID="Mara Dali"
          uppercase={false}
        >
          Mara Dali
        </Text>
        <View
          style={
            Array [
              Object {},
              Object {},
            ]
          }
        >
          <Text
            accessibilityHint=""
            accessibilityLabel="Banco Santander"
            disabled={false}
            items="Banco Santander"
            smaller={true}
            style={
              Array [
                Object {
                  "color": "#52677B",
                  "fontFamily": "NunitoSans-Regular",
                  "fontSize": 12,
                  "lineHeight": 24,
                  "marginBottom": 16,
                },
                Object {
                  "marginBottom": 0,
                },
                false,
                null,
              ]
            }
            testID="Banco Santander"
            uppercase={false}
            wrapper={true}
            wrapperStyle={Object {}}
          >
            Banco Santander
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "alignItems": "flex-end",
              "alignSelf": "stretch",
              "borderBottomWidth": null,
              "flex": 0,
              "justifyContent": "center",
              "paddingBottom": null,
              "paddingLeft": null,
              "paddingRight": null,
              "paddingTop": null,
            },
            Object {
              "marginLeft": 16,
            },
            Object {},
          ]
        }
      >
        <Text
          accessibilityHint=""
          accessibilityLabel="$ 300"
          number={true}
          small={true}
          style={
            Array [
              Object {
                "alignSelf": null,
                "color": "#52677B",
                "fontFamily": "NunitoSans-Bold",
                "fontSize": 14,
                "letterSpacing": 1,
                "lineHeight": 24,
                "marginBottom": 0,
              },
              Object {},
              null,
            ]
          }
          testID="$ 300"
          uppercase={false}
        >
          $ 300
        </Text>
      </View>
    </View>
  </View>
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0.4)",
          "flex": 1,
          "justifyContent": "flex-end",
          "opacity": 1,
        }
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={false}
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#fff",
            "elevation": 4,
            "maxHeight": 667,
            "minHeight": 56,
            "opacity": 1,
            "padding": 15,
          }
        }
      >
        <RCTScrollView
          data={Array []}
          getItem={[Function]}
          getItemCount={[Function]}
          keyExtractor={[Function]}
          onContentSizeChange={[Function]}
          onLayout={[Function]}
          onMomentumScrollBegin={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          style={
            Array [
              Object {
                "marginHorizontal": -15,
              },
              Object {
                "marginTop": 0,
              },
            ]
          }
          viewabilityConfigCallbackPairs={Array []}
        >
          <View />
        </RCTScrollView>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Test componente <ListItemContactos /> Debería renderizar correctamente con un avatar de menor tamaño 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    accessibilityHint=""
    accessibilityLabel=""
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={false}
    focusable={false}
    onClick={[Function]}
    onLayout={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    testID=""
  >
    <View
      accessibilityHint=""
      accessibilityLabel=""
      accessible={false}
      avatar={true}
      disabled={false}
      firstItem={false}
      lastItem={false}
      middleItem={false}
      noBorder={true}
      onLayout={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderBottomWidth": null,
            "borderColor": "#CED7E0",
            "flexDirection": "row",
            "paddingBottom": 8,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 8,
          },
          Object {},
        ]
      }
      underlayColor="rgba(82, 103, 123, 0.16000000000000003)"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": null,
              "alignSelf": null,
              "borderBottomWidth": null,
              "flex": 1,
              "justifyContent": "center",
            },
            Object {},
          ]
        }
      >
        <Text
          accessibilityLabel="Mara Dali"
          small={true}
          style={
            Array [
              Object {
                "color": "#52677B",
                "fontFamily": "NunitoSans-Regular",
                "fontSize": 14,
                "lineHeight": 24,
                "marginBottom": 0,
                "marginRight": 16,
              },
              Object {
                "color": "#2A343D",
              },
              Object {
                "fontWeight": "bold",
              },
            ]
          }
          testID="Mara Dali"
          uppercase={false}
        >
          Mara Dali
        </Text>
        <View
          style={
            Array [
              Object {},
              Object {},
            ]
          }
        >
          <Text
            accessibilityHint=""
            accessibilityLabel="Banco Santander"
            disabled={false}
            items="Banco Santander"
            smaller={true}
            style={
              Array [
                Object {
                  "color": "#52677B",
                  "fontFamily": "NunitoSans-Regular",
                  "fontSize": 12,
                  "lineHeight": 24,
                  "marginBottom": 16,
                },
                Object {
                  "marginBottom": 0,
                },
                false,
                null,
              ]
            }
            testID="Banco Santander"
            uppercase={false}
            wrapper={true}
            wrapperStyle={Object {}}
          >
            Banco Santander
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "alignItems": "flex-end",
              "alignSelf": "stretch",
              "borderBottomWidth": null,
              "flex": 0,
              "justifyContent": "center",
              "paddingBottom": null,
              "paddingLeft": null,
              "paddingRight": null,
              "paddingTop": null,
            },
            Object {
              "marginLeft": 16,
            },
            Object {},
          ]
        }
      >
        <Text
          accessibilityHint=""
          accessibilityLabel="$ 300"
          number={true}
          small={true}
          style={
            Array [
              Object {
                "alignSelf": null,
                "color": "#52677B",
                "fontFamily": "NunitoSans-Bold",
                "fontSize": 14,
                "letterSpacing": 1,
                "lineHeight": 24,
                "marginBottom": 0,
              },
              Object {},
              null,
            ]
          }
          testID="$ 300"
          uppercase={false}
        >
          $ 300
        </Text>
      </View>
    </View>
  </View>
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0.4)",
          "flex": 1,
          "justifyContent": "flex-end",
          "opacity": 1,
        }
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={false}
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#fff",
            "elevation": 4,
            "maxHeight": 667,
            "minHeight": 56,
            "opacity": 1,
            "padding": 15,
          }
        }
      >
        <RCTScrollView
          data={Array []}
          getItem={[Function]}
          getItemCount={[Function]}
          keyExtractor={[Function]}
          onContentSizeChange={[Function]}
          onLayout={[Function]}
          onMomentumScrollBegin={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          style={
            Array [
              Object {
                "marginHorizontal": -15,
              },
              Object {
                "marginTop": 0,
              },
            ]
          }
          viewabilityConfigCallbackPairs={Array []}
        >
          <View />
        </RCTScrollView>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Test componente <ListItemContactos /> Debería renderizar nombre y detalle truncado 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    accessibilityHint=""
    accessibilityLabel=""
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={false}
    focusable={false}
    onClick={[Function]}
    onLayout={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    testID=""
  >
    <View
      accessibilityHint=""
      accessibilityLabel=""
      accessible={false}
      avatar={true}
      disabled={false}
      firstItem={false}
      lastItem={false}
      middleItem={false}
      noBorder={true}
      onLayout={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderBottomWidth": null,
            "borderColor": "#CED7E0",
            "flexDirection": "row",
            "paddingBottom": 8,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 8,
          },
          Object {},
        ]
      }
      underlayColor="rgba(82, 103, 123, 0.16000000000000003)"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": null,
              "alignSelf": null,
              "borderBottomWidth": null,
              "flex": 1,
              "justifyContent": "center",
            },
            Object {},
          ]
        }
      >
        <Text
          accessibilityLabel="Mara Dali"
          ellipsizeMode="tail"
          numberOfLines={2}
          small={true}
          style={
            Array [
              Object {
                "color": "#52677B",
                "fontFamily": "NunitoSans-Regular",
                "fontSize": 14,
                "lineHeight": 24,
                "marginBottom": 0,
                "marginRight": 16,
              },
              Object {
                "color": "#2A343D",
              },
              Object {
                "fontWeight": "bold",
              },
            ]
          }
          testID="Mara Dali"
          uppercase={false}
        >
          Mara Dali
        </Text>
        <View
          style={
            Array [
              Object {},
              Object {},
            ]
          }
        >
          <Text
            accessibilityHint=""
            accessibilityLabel="12 de Agosto 2022"
            disabled={false}
            items={
              Array [
                Object {
                  "numberOfLines": 2,
                  "text": "12 de Agosto 2022",
                },
              ]
            }
            numberOfLines={2}
            smaller={true}
            style={
              Array [
                Object {
                  "color": "#52677B",
                  "fontFamily": "NunitoSans-Regular",
                  "fontSize": 12,
                  "lineHeight": 24,
                  "marginBottom": 16,
                },
                Object {
                  "marginBottom": 0,
                },
                false,
                null,
              ]
            }
            testID="12 de Agosto 2022"
            text="12 de Agosto 2022"
            uppercase={false}
            wrapper={true}
            wrapperStyle={Object {}}
          >
            12 de Agosto 2022
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "alignItems": "flex-end",
              "alignSelf": "stretch",
              "borderBottomWidth": null,
              "flex": 0,
              "justifyContent": "center",
              "paddingBottom": null,
              "paddingLeft": null,
              "paddingRight": null,
              "paddingTop": null,
            },
            Object {
              "marginLeft": 16,
            },
            Object {},
          ]
        }
      >
        <Text
          accessibilityHint=""
          accessibilityLabel="$ 300"
          number={true}
          small={true}
          style={
            Array [
              Object {
                "alignSelf": null,
                "color": "#52677B",
                "fontFamily": "NunitoSans-Bold",
                "fontSize": 14,
                "letterSpacing": 1,
                "lineHeight": 24,
                "marginBottom": 0,
              },
              Object {},
              null,
            ]
          }
          testID="$ 300"
          uppercase={false}
        >
          $ 300
        </Text>
      </View>
    </View>
  </View>
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0.4)",
          "flex": 1,
          "justifyContent": "flex-end",
          "opacity": 1,
        }
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={false}
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#fff",
            "elevation": 4,
            "maxHeight": 667,
            "minHeight": 56,
            "opacity": 1,
            "padding": 15,
          }
        }
      >
        <RCTScrollView
          data={Array []}
          getItem={[Function]}
          getItemCount={[Function]}
          keyExtractor={[Function]}
          onContentSizeChange={[Function]}
          onLayout={[Function]}
          onMomentumScrollBegin={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          style={
            Array [
              Object {
                "marginHorizontal": -15,
              },
              Object {
                "marginTop": 0,
              },
            ]
          }
          viewabilityConfigCallbackPairs={Array []}
        >
          <View />
        </RCTScrollView>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Test componente <ListItemContactos /> Debería renderizar sin detalle 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    accessibilityHint=""
    accessibilityLabel=""
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={false}
    focusable={false}
    onClick={[Function]}
    onLayout={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    testID=""
  >
    <View
      accessibilityHint=""
      accessibilityLabel=""
      accessible={false}
      avatar={true}
      disabled={false}
      firstItem={false}
      lastItem={false}
      middleItem={false}
      noBorder={true}
      onLayout={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderBottomWidth": null,
            "borderColor": "#CED7E0",
            "flexDirection": "row",
            "paddingBottom": 8,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 8,
          },
          Object {},
        ]
      }
      underlayColor="rgba(82, 103, 123, 0.16000000000000003)"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": null,
              "alignSelf": null,
              "borderBottomWidth": null,
              "flex": 1,
              "justifyContent": "center",
            },
            Object {},
          ]
        }
      >
        <Text
          accessibilityLabel="Mara Dali"
          small={true}
          style={
            Array [
              Object {
                "color": "#52677B",
                "fontFamily": "NunitoSans-Regular",
                "fontSize": 14,
                "lineHeight": 24,
                "marginBottom": 0,
                "marginRight": 16,
              },
              Object {
                "color": "#2A343D",
              },
              Object {},
            ]
          }
          testID="Mara Dali"
          uppercase={false}
        >
          Mara Dali
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "alignItems": "flex-end",
              "alignSelf": "stretch",
              "borderBottomWidth": null,
              "flex": 0,
              "justifyContent": "center",
              "paddingBottom": null,
              "paddingLeft": null,
              "paddingRight": null,
              "paddingTop": null,
            },
            Object {
              "marginLeft": 16,
            },
            Object {},
          ]
        }
      >
        <Text
          accessibilityHint=""
          accessibilityLabel="$ 300"
          number={true}
          small={true}
          style={
            Array [
              Object {
                "alignSelf": null,
                "color": "#52677B",
                "fontFamily": "NunitoSans-Bold",
                "fontSize": 14,
                "letterSpacing": 1,
                "lineHeight": 24,
                "marginBottom": 0,
              },
              Object {},
              null,
            ]
          }
          testID="$ 300"
          uppercase={false}
        >
          $ 300
        </Text>
      </View>
    </View>
  </View>
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0.4)",
          "flex": 1,
          "justifyContent": "flex-end",
          "opacity": 1,
        }
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={false}
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#fff",
            "elevation": 4,
            "maxHeight": 667,
            "minHeight": 56,
            "opacity": 1,
            "padding": 15,
          }
        }
      >
        <RCTScrollView
          data={Array []}
          getItem={[Function]}
          getItemCount={[Function]}
          keyExtractor={[Function]}
          onContentSizeChange={[Function]}
          onLayout={[Function]}
          onMomentumScrollBegin={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          style={
            Array [
              Object {
                "marginHorizontal": -15,
              },
              Object {
                "marginTop": 0,
              },
            ]
          }
          viewabilityConfigCallbackPairs={Array []}
        >
          <View />
        </RCTScrollView>
      </View>
    </View>
  </Modal>
</View>
`;
