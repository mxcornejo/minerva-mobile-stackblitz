// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test componente <InputSelectNative /> Debería renderizar correctamente caso default 1`] = `
<View
  pointerEvents="auto"
  style={
    Array [
      Object {
        "marginBottom": 16,
      },
      Object {
        "marginTop": 8,
      },
      Object {},
    ]
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "borderBottomLeftRadius": 8,
            "borderTopLeftRadius": 8,
            "width": 11,
          },
          Object {
            "borderColor": "#8393A3",
            "height": 56,
          },
          Object {
            "borderBottomWidth": 1,
            "borderLeftWidth": 1,
            "borderTopWidth": 1,
          },
        ]
      }
    />
    <View
      style={
        Array [
          Object {
            "borderColor": "#8393A3",
            "height": 56,
          },
          Object {
            "borderBottomWidth": 1,
            "borderTopWidth": 1,
          },
          Object {
            "width": 0,
          },
        ]
      }
    />
    <View
      style={
        Array [
          Object {
            "borderBottomRightRadius": 8,
            "borderTopRightRadius": 8,
            "flex": 1,
          },
          Object {
            "borderColor": "#8393A3",
            "height": 56,
          },
          Object {
            "borderBottomWidth": 1,
            "borderRightWidth": 1,
            "borderTopWidth": 1,
          },
        ]
      }
    />
  </View>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={false}
    focusable={false}
    forwardedRef={[Function]}
    onClick={[Function]}
    onLayout={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "borderBottomWidth": 1,
        "borderColor": "#D9D5DC",
        "borderLeftWidth": 1,
        "borderRadius": undefined,
        "borderRightWidth": 1,
        "borderTopWidth": 1,
        "borderWidth": undefined,
        "flexDirection": "row",
        "marginLeft": 0,
        "opacity": 1,
      }
    }
  >
    <View
      animatedStyle={
        Object {
          "value": Object {
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          },
        }
      }
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="none"
      style={
        Object {
          "left": 10,
          "opacity": 1,
          "paddingHorizontal": 6,
          "position": "absolute",
          "top": 15,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
          "zIndex": 2,
        }
      }
    >
      <Text
        accessibilityHint=""
        accessibilityLabel="Input Select Native"
        accessible={true}
        animatedStyle={
          Object {
            "value": Object {
              "fontSize": 16,
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "color": "#52677B",
            "fontFamily": "NunitoSans-Regular",
            "fontSize": 16,
            "lineHeight": 24,
            "zIndex": 2,
          }
        }
        testID="Input Select Native"
      >
        Input Select Native
      </Text>
    </View>
    <View
      animatedStyle={
        Object {
          "value": Object {
            "opacity": 0,
          },
        }
      }
      collapsable={false}
      style={
        Object {
          "opacity": 0,
        }
      }
    >
      <View
        accessibilityRole="none"
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "paddingRight": 12,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
                Object {},
              ]
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {},
                    Object {
                      "flexDirection": "row",
                    },
                    undefined,
                    Object {
                      "alignItems": "center",
                    },
                    false,
                  ]
                }
              >
                <View
                  animatedStyle={
                    Object {
                      "value": Object {
                        "transform": Array [
                          Object {
                            "rotateX": "0deg",
                          },
                        ],
                      },
                    }
                  }
                  collapsable={false}
                  style={
                    Object {
                      "transform": Array [
                        Object {
                          "rotateX": "0deg",
                        },
                      ],
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    animated={true}
                    disabled={false}
                    inverse={false}
                    isOpen={false}
                    style={
                      Array [
                        Object {
                          "color": undefined,
                          "fontSize": 12,
                        },
                        Array [
                          Object {
                            "color": "#2A343D",
                          },
                          Object {
                            "fontSize": 24,
                          },
                          Array [
                            Object {
                              "color": "#52677B",
                              "fontSize": 12,
                            },
                            Array [
                              Object {
                                "marginLeft": 8,
                              },
                              Object {
                                "marginRight": 8,
                              },
                            ],
                          ],
                        ],
                        Object {
                          "fontFamily": "icomoon",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
            <Modal
              animationType="slide"
              deviceHeight={null}
              deviceWidth={null}
              hardwareAccelerated={false}
              hideModalContentWhileAnimating={false}
              onBackdropPress={[Function]}
              onModalHide={[Function]}
              onModalWillHide={[Function]}
              onModalWillShow={[Function]}
              onRequestClose={[Function]}
              onSwipeComplete={[Function]}
              panResponderThreshold={4}
              scrollHorizontal={false}
              scrollOffset={0}
              scrollOffsetMax={0}
              scrollTo={null}
              statusBarTranslucent={false}
              supportedOrientations={
                Array [
                  "portrait",
                  "landscape",
                ]
              }
              swipeThreshold={100}
              transparent={true}
              visible={false}
            >
              <View
                accessible={true}
                focusable={true}
                forwardedRef={[Function]}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "backgroundColor": "black",
                    "bottom": 0,
                    "height": 1334,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                    "width": 750,
                  }
                }
              />
              <View
                animationType="slide"
                deviceHeight={null}
                deviceWidth={null}
                forwardedRef={[Function]}
                hideModalContentWhileAnimating={false}
                onBackdropPress={[Function]}
                onModalHide={[Function]}
                onModalWillHide={[Function]}
                onModalWillShow={[Function]}
                onSwipeComplete={[Function]}
                panResponderThreshold={4}
                pointerEvents="box-none"
                scrollHorizontal={false}
                scrollOffset={0}
                scrollOffsetMax={0}
                scrollTo={null}
                statusBarTranslucent={false}
                style={
                  Object {
                    "flex": 1,
                    "justifyContent": "flex-end",
                    "margin": 0,
                    "transform": Array [
                      Object {
                        "translateY": 0,
                      },
                    ],
                  }
                }
                supportedOrientations={
                  Array [
                    "portrait",
                    "landscape",
                  ]
                }
                swipeThreshold={100}
              >
                <View
                  style={
                    Array [
                      Object {},
                      Object {
                        "backgroundColor": "#CED7E0",
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        Object {},
                        Object {
                          "backgroundColor": "#F0F3F5",
                        },
                        Object {
                          "borderColor": "#CED7E0",
                        },
                        Object {
                          "padding": 0,
                        },
                        Object {
                          "flexDirection": "row",
                        },
                        Object {
                          "justifyContent": "space-between",
                        },
                        Object {
                          "alignItems": "center",
                        },
                        Object {
                          "paddingHorizontal": 12,
                        },
                        Object {
                          "borderTopWidth": 1,
                        },
                        Object {
                          "zIndex": 2,
                        },
                      ]
                    }
                  >
                    <View
                      accessible={false}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <Text
                        allowFontScaling={false}
                        style={
                          Array [
                            Object {
                              "color": "#000",
                              "fontFamily": "System",
                              "fontSize": 16,
                            },
                            Object {
                              "padding": 8,
                            },
                            Object {
                              "marginBottom": 0,
                            },
                            Object {
                              "color": "#295EFF",
                            },
                            Object {
                              "textAlign": "left",
                            },
                          ]
                        }
                        uppercase={false}
                      >
                        Cancelar
                      </Text>
                    </View>
                    <View
                      accessible={false}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <Text
                        allowFontScaling={false}
                        style={
                          Array [
                            Object {
                              "color": "#000",
                              "fontFamily": "System",
                              "fontSize": 16,
                            },
                            Object {
                              "padding": 8,
                            },
                            Object {
                              "marginBottom": 0,
                            },
                            Object {
                              "color": "#295EFF",
                            },
                            Object {
                              "textAlign": "left",
                            },
                          ]
                        }
                        uppercase={false}
                      >
                        Ok
                      </Text>
                    </View>
                  </View>
                  <RCTSafeAreaView
                    emulateUnlessSupported={true}
                  >
                    <View
                      style={
                        Object {
                          "width": "100%",
                        }
                      }
                    >
                      <RNCPicker
                        items={
                          Array [
                            Object {
                              "label": "Cat",
                              "testID": "1",
                              "textColor": undefined,
                              "value": "1",
                            },
                            Object {
                              "label": "Dog",
                              "testID": "2",
                              "textColor": undefined,
                              "value": "2",
                            },
                          ]
                        }
                        numberOfLines={1}
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            Object {
                              "color": "#000000",
                            },
                          ]
                        }
                        testID=""
                      />
                    </View>
                  </RCTSafeAreaView>
                </View>
              </View>
            </Modal>
          </View>
        </View>
      </View>
    </View>
    <TextInput
      accessibilityHint=""
      accessibilityLabel=""
      autoFocus={false}
      digiCard={false}
      disabled={false}
      disabledPadding={false}
      editable={true}
      error={false}
      helperText=""
      inverse={false}
      isOpenSelect={false}
      isRenderRightVisible={false}
      keyboardType="default"
      labeAccessibilityHint=""
      label="Input Select Native"
      labelAccessibilityLabel=""
      labelTestID=""
      large={false}
      loading={false}
      maxHeight={96}
      maxLength={null}
      multiline={false}
      number={false}
      onBlur={[Function]}
      onChangeText={[MockFunction]}
      onEndEditing={[Function]}
      onFocus={[Function]}
      pass={false}
      placeholderTextColor="#575757"
      pointerEvents="auto"
      renderLeft={[Function]}
      renderLeftSide={false}
      renderRight={[Function]}
      renderRightSide={false}
      select={false}
      selectionColor="#CED7E0"
      showStateIconRight={false}
      style={
        Array [
          Object {
            "color": "#000",
            "flex": 1,
            "fontSize": 17,
            "height": 50,
            "paddingLeft": 8,
            "paddingRight": 5,
            "top": 1.5,
          },
          Object {
            "top": 0,
          },
          Object {
            "opacity": 1,
          },
        ]
      }
      success={false}
      testID=""
      underlineColorAndroid="rgba(0,0,0,0)"
      value=""
    />
    <View
      animatedStyle={
        Object {
          "value": Object {
            "opacity": 0,
          },
        }
      }
      collapsable={false}
      style={
        Object {
          "opacity": 0,
        }
      }
    >
      <View
        accessibilityRole="none"
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "paddingLeft": 12,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`Test componente <InputSelectNative /> Debería renderizar correctamente caso disabled 1`] = `
<View
  pointerEvents="auto"
  style={
    Array [
      Object {
        "marginBottom": 16,
      },
      Object {
        "marginTop": 8,
      },
      Object {},
    ]
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "borderBottomLeftRadius": 8,
            "borderTopLeftRadius": 8,
            "width": 11,
          },
          Object {
            "borderColor": "#CED7E0",
            "height": 56,
          },
          Object {
            "borderBottomWidth": 1,
            "borderLeftWidth": 1,
            "borderTopWidth": 1,
          },
        ]
      }
    />
    <View
      style={
        Array [
          Object {
            "borderColor": "#CED7E0",
            "height": 56,
          },
          Object {
            "borderBottomWidth": 1,
            "borderTopWidth": 1,
          },
          Object {
            "width": 0,
          },
        ]
      }
    />
    <View
      style={
        Array [
          Object {
            "borderBottomRightRadius": 8,
            "borderTopRightRadius": 8,
            "flex": 1,
          },
          Object {
            "borderColor": "#CED7E0",
            "height": 56,
          },
          Object {
            "borderBottomWidth": 1,
            "borderRightWidth": 1,
            "borderTopWidth": 1,
          },
        ]
      }
    />
  </View>
  <View
    accessibilityState={
      Object {
        "disabled": true,
      }
    }
    accessible={false}
    focusable={false}
    forwardedRef={[Function]}
    onClick={[Function]}
    onLayout={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "borderBottomWidth": 1,
        "borderColor": "#D9D5DC",
        "borderLeftWidth": 1,
        "borderRadius": undefined,
        "borderRightWidth": 1,
        "borderTopWidth": 1,
        "borderWidth": undefined,
        "flexDirection": "row",
        "marginLeft": 0,
        "opacity": 1,
      }
    }
  >
    <View
      animatedStyle={
        Object {
          "value": Object {
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          },
        }
      }
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="none"
      style={
        Object {
          "left": 10,
          "opacity": 0.4,
          "paddingHorizontal": 6,
          "position": "absolute",
          "top": 15,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
          "zIndex": 2,
        }
      }
    >
      <Text
        accessibilityHint=""
        accessibilityLabel="Input Select Native"
        accessible={true}
        animatedStyle={
          Object {
            "value": Object {
              "fontSize": 16,
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "color": "#52677B",
            "fontFamily": "NunitoSans-Regular",
            "fontSize": 16,
            "lineHeight": 24,
            "zIndex": 2,
          }
        }
        testID="Input Select Native"
      >
        Input Select Native
      </Text>
    </View>
    <View
      animatedStyle={
        Object {
          "value": Object {
            "opacity": 0,
          },
        }
      }
      collapsable={false}
      style={
        Object {
          "opacity": 0,
        }
      }
    >
      <View
        accessibilityRole="none"
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "paddingRight": 12,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
                Object {},
              ]
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": true,
                }
              }
              accessible={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {},
                    Object {
                      "flexDirection": "row",
                    },
                    undefined,
                    Object {
                      "alignItems": "center",
                    },
                    Object {
                      "opacity": 0.3,
                    },
                  ]
                }
              >
                <View
                  animatedStyle={
                    Object {
                      "value": Object {
                        "transform": Array [
                          Object {
                            "rotateX": "0deg",
                          },
                        ],
                      },
                    }
                  }
                  collapsable={false}
                  style={
                    Object {
                      "transform": Array [
                        Object {
                          "rotateX": "0deg",
                        },
                      ],
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    animated={true}
                    disabled={false}
                    inverse={false}
                    isOpen={false}
                    style={
                      Array [
                        Object {
                          "color": undefined,
                          "fontSize": 12,
                        },
                        Array [
                          Object {
                            "color": "#2A343D",
                          },
                          Object {
                            "fontSize": 24,
                          },
                          Array [
                            Object {
                              "color": "#52677B",
                              "fontSize": 12,
                            },
                            Array [
                              Object {
                                "marginLeft": 8,
                              },
                              Object {
                                "marginRight": 8,
                              },
                            ],
                          ],
                        ],
                        Object {
                          "fontFamily": "icomoon",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
            <Modal
              animationType="slide"
              deviceHeight={null}
              deviceWidth={null}
              hardwareAccelerated={false}
              hideModalContentWhileAnimating={false}
              onBackdropPress={[Function]}
              onModalHide={[Function]}
              onModalWillHide={[Function]}
              onModalWillShow={[Function]}
              onRequestClose={[Function]}
              onSwipeComplete={[Function]}
              panResponderThreshold={4}
              scrollHorizontal={false}
              scrollOffset={0}
              scrollOffsetMax={0}
              scrollTo={null}
              statusBarTranslucent={false}
              supportedOrientations={
                Array [
                  "portrait",
                  "landscape",
                ]
              }
              swipeThreshold={100}
              transparent={true}
              visible={false}
            >
              <View
                accessible={true}
                focusable={true}
                forwardedRef={[Function]}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "backgroundColor": "black",
                    "bottom": 0,
                    "height": 1334,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                    "width": 750,
                  }
                }
              />
              <View
                animationType="slide"
                deviceHeight={null}
                deviceWidth={null}
                forwardedRef={[Function]}
                hideModalContentWhileAnimating={false}
                onBackdropPress={[Function]}
                onModalHide={[Function]}
                onModalWillHide={[Function]}
                onModalWillShow={[Function]}
                onSwipeComplete={[Function]}
                panResponderThreshold={4}
                pointerEvents="box-none"
                scrollHorizontal={false}
                scrollOffset={0}
                scrollOffsetMax={0}
                scrollTo={null}
                statusBarTranslucent={false}
                style={
                  Object {
                    "flex": 1,
                    "justifyContent": "flex-end",
                    "margin": 0,
                    "transform": Array [
                      Object {
                        "translateY": 0,
                      },
                    ],
                  }
                }
                supportedOrientations={
                  Array [
                    "portrait",
                    "landscape",
                  ]
                }
                swipeThreshold={100}
              >
                <View
                  style={
                    Array [
                      Object {},
                      Object {
                        "backgroundColor": "#CED7E0",
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        Object {},
                        Object {
                          "backgroundColor": "#F0F3F5",
                        },
                        Object {
                          "borderColor": "#CED7E0",
                        },
                        Object {
                          "padding": 0,
                        },
                        Object {
                          "flexDirection": "row",
                        },
                        Object {
                          "justifyContent": "space-between",
                        },
                        Object {
                          "alignItems": "center",
                        },
                        Object {
                          "paddingHorizontal": 12,
                        },
                        Object {
                          "borderTopWidth": 1,
                        },
                        Object {
                          "zIndex": 2,
                        },
                      ]
                    }
                  >
                    <View
                      accessible={false}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <Text
                        allowFontScaling={false}
                        style={
                          Array [
                            Object {
                              "color": "#000",
                              "fontFamily": "System",
                              "fontSize": 16,
                            },
                            Object {
                              "padding": 8,
                            },
                            Object {
                              "marginBottom": 0,
                            },
                            Object {
                              "color": "#295EFF",
                            },
                            Object {
                              "textAlign": "left",
                            },
                          ]
                        }
                        uppercase={false}
                      >
                        Cancelar
                      </Text>
                    </View>
                    <View
                      accessible={false}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <Text
                        allowFontScaling={false}
                        style={
                          Array [
                            Object {
                              "color": "#000",
                              "fontFamily": "System",
                              "fontSize": 16,
                            },
                            Object {
                              "padding": 8,
                            },
                            Object {
                              "marginBottom": 0,
                            },
                            Object {
                              "color": "#295EFF",
                            },
                            Object {
                              "textAlign": "left",
                            },
                          ]
                        }
                        uppercase={false}
                      >
                        Ok
                      </Text>
                    </View>
                  </View>
                  <RCTSafeAreaView
                    emulateUnlessSupported={true}
                  >
                    <View
                      style={
                        Object {
                          "width": "100%",
                        }
                      }
                    >
                      <RNCPicker
                        items={
                          Array [
                            Object {
                              "label": "Cat",
                              "testID": "1",
                              "textColor": undefined,
                              "value": "1",
                            },
                            Object {
                              "label": "Dog",
                              "testID": "2",
                              "textColor": undefined,
                              "value": "2",
                            },
                          ]
                        }
                        numberOfLines={1}
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            Object {
                              "color": "#000000",
                            },
                          ]
                        }
                        testID=""
                      />
                    </View>
                  </RCTSafeAreaView>
                </View>
              </View>
            </Modal>
          </View>
        </View>
      </View>
    </View>
    <TextInput
      accessibilityHint=""
      accessibilityLabel=""
      autoFocus={false}
      digiCard={false}
      disabled={true}
      disabledPadding={false}
      editable={false}
      error={false}
      helperText=""
      inverse={false}
      isOpenSelect={false}
      isRenderRightVisible={false}
      keyboardType="default"
      labeAccessibilityHint=""
      label="Input Select Native"
      labelAccessibilityLabel=""
      labelTestID=""
      large={false}
      loading={false}
      maxHeight={96}
      maxLength={null}
      multiline={false}
      number={false}
      onBlur={[Function]}
      onChangeText={[MockFunction]}
      onEndEditing={[Function]}
      onFocus={[Function]}
      pass={false}
      placeholderTextColor="#575757"
      pointerEvents="auto"
      renderLeft={[Function]}
      renderLeftSide={false}
      renderRight={[Function]}
      renderRightSide={false}
      select={false}
      selectionColor="#CED7E0"
      showStateIconRight={false}
      style={
        Array [
          Object {
            "color": "#000",
            "flex": 1,
            "fontSize": 17,
            "height": 50,
            "paddingLeft": 8,
            "paddingRight": 5,
            "top": 1.5,
          },
          Object {
            "top": 0,
          },
          Object {
            "opacity": 0.4,
          },
        ]
      }
      success={false}
      testID=""
      underlineColorAndroid="rgba(0,0,0,0)"
      value=""
    />
    <View
      animatedStyle={
        Object {
          "value": Object {
            "opacity": 0,
          },
        }
      }
      collapsable={false}
      style={
        Object {
          "opacity": 0,
        }
      }
    >
      <View
        accessibilityRole="none"
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "paddingLeft": 12,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`Test componente <InputSelectNative /> Debería renderizar correctamente caso icon 1`] = `
<View
  pointerEvents="auto"
  style={
    Array [
      Object {
        "marginBottom": 16,
      },
      Object {
        "marginTop": 8,
      },
      Object {},
    ]
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "borderBottomLeftRadius": 8,
            "borderTopLeftRadius": 8,
            "width": 11,
          },
          Object {
            "borderColor": "#8393A3",
            "height": 56,
          },
          Object {
            "borderBottomWidth": 1,
            "borderLeftWidth": 1,
            "borderTopWidth": 1,
          },
        ]
      }
    />
    <View
      style={
        Array [
          Object {
            "borderColor": "#8393A3",
            "height": 56,
          },
          Object {
            "borderBottomWidth": 1,
            "borderTopWidth": 1,
          },
          Object {
            "width": 0,
          },
        ]
      }
    />
    <View
      style={
        Array [
          Object {
            "borderBottomRightRadius": 8,
            "borderTopRightRadius": 8,
            "flex": 1,
          },
          Object {
            "borderColor": "#8393A3",
            "height": 56,
          },
          Object {
            "borderBottomWidth": 1,
            "borderRightWidth": 1,
            "borderTopWidth": 1,
          },
        ]
      }
    />
  </View>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={false}
    focusable={false}
    forwardedRef={[Function]}
    onClick={[Function]}
    onLayout={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "borderBottomWidth": 1,
        "borderColor": "#D9D5DC",
        "borderLeftWidth": 1,
        "borderRadius": undefined,
        "borderRightWidth": 1,
        "borderTopWidth": 1,
        "borderWidth": undefined,
        "flexDirection": "row",
        "marginLeft": 0,
        "opacity": 1,
      }
    }
  >
    <View
      animatedStyle={
        Object {
          "value": Object {
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          },
        }
      }
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="none"
      style={
        Object {
          "left": 10,
          "opacity": 1,
          "paddingHorizontal": 6,
          "position": "absolute",
          "top": 15,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
          "zIndex": 2,
        }
      }
    >
      <Text
        accessibilityHint=""
        accessibilityLabel="Input Select Native"
        accessible={true}
        animatedStyle={
          Object {
            "value": Object {
              "fontSize": 16,
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "color": "#52677B",
            "fontFamily": "NunitoSans-Regular",
            "fontSize": 16,
            "lineHeight": 24,
            "zIndex": 2,
          }
        }
        testID="Input Select Native"
      >
        Input Select Native
      </Text>
    </View>
    <View
      animatedStyle={
        Object {
          "value": Object {
            "opacity": 0,
          },
        }
      }
      collapsable={false}
      style={
        Object {
          "opacity": 0,
        }
      }
    >
      <View
        accessibilityRole="none"
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "paddingRight": 12,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
                Object {},
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                  Object {
                    "flexDirection": "row",
                  },
                  undefined,
                  Object {
                    "alignItems": "center",
                  },
                  false,
                ]
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Array [
                      Object {
                        "color": "#2A343D",
                      },
                      Object {
                        "fontSize": 24,
                      },
                      Array [
                        Array [
                          Object {
                            "fontSize": 12,
                          },
                          Object {
                            "marginLeft": 8,
                          },
                          Object {
                            "marginRight": 8,
                          },
                        ],
                        Object {},
                      ],
                    ],
                    Object {
                      "fontFamily": "icomoon",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
                testID="icon-bch-cat"
              >
                
              </Text>
              <View
                animatedStyle={
                  Object {
                    "value": Object {
                      "transform": Array [
                        Object {
                          "rotateX": "0deg",
                        },
                      ],
                    },
                  }
                }
                collapsable={false}
                style={
                  Object {
                    "transform": Array [
                      Object {
                        "rotateX": "0deg",
                      },
                    ],
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  animated={true}
                  disabled={false}
                  inverse={false}
                  isOpen={false}
                  style={
                    Array [
                      Object {
                        "color": undefined,
                        "fontSize": 12,
                      },
                      Array [
                        Object {
                          "color": "#2A343D",
                        },
                        Object {
                          "fontSize": 24,
                        },
                        Array [
                          Object {
                            "color": "#52677B",
                            "fontSize": 12,
                          },
                          Array [
                            Object {
                              "marginLeft": 8,
                            },
                            Object {
                              "marginRight": 8,
                            },
                          ],
                        ],
                      ],
                      Object {
                        "fontFamily": "icomoon",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  
                </Text>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "position": "absolute",
                  },
                  Object {
                    "top": 8,
                  },
                  Object {
                    "left": 0,
                  },
                  Object {
                    "width": "100%",
                  },
                  Object {
                    "height": 56,
                  },
                  Object {
                    "opacity": 0,
                  },
                ]
              }
            >
              <RNCPicker
                items={
                  Array [
                    Object {
                      "label": "Seleccione Select Native",
                      "testID": "seleccione",
                      "textColor": undefined,
                      "value": "seleccione",
                    },
                    Object {
                      "label": "Cat",
                      "testID": "1",
                      "textColor": undefined,
                      "value": "1",
                    },
                    Object {
                      "label": "Dog",
                      "testID": "2",
                      "textColor": undefined,
                      "value": "2",
                    },
                  ]
                }
                numberOfLines={1}
                onChange={[Function]}
                selectedIndex={1}
                style={
                  Array [
                    Object {
                      "height": 216,
                    },
                    Object {
                      "color": "#000000",
                    },
                  ]
                }
                testID=""
              />
            </View>
          </View>
        </View>
      </View>
    </View>
    <TextInput
      accessibilityHint=""
      accessibilityLabel=""
      autoFocus={false}
      digiCard={false}
      disabled={false}
      disabledPadding={false}
      editable={true}
      error={false}
      helperText=""
      inverse={false}
      isOpenSelect={false}
      isRenderRightVisible={false}
      keyboardType="default"
      labeAccessibilityHint=""
      label="Input Select Native"
      labelAccessibilityLabel=""
      labelTestID=""
      large={false}
      loading={false}
      maxHeight={96}
      maxLength={null}
      multiline={false}
      number={false}
      onBlur={[Function]}
      onChangeText={[MockFunction]}
      onEndEditing={[Function]}
      onFocus={[Function]}
      pass={false}
      placeholderTextColor="#575757"
      pointerEvents="auto"
      renderLeft={[Function]}
      renderLeftSide={false}
      renderRight={[Function]}
      renderRightSide={false}
      select={false}
      selectionColor="#CED7E0"
      showStateIconRight={false}
      style={
        Array [
          Object {
            "color": "#000",
            "flex": 1,
            "fontSize": 17,
            "height": 50,
            "paddingLeft": 8,
            "paddingRight": 5,
            "top": 1.5,
          },
          Object {
            "top": 0,
          },
          Object {
            "opacity": 1,
          },
        ]
      }
      success={false}
      testID=""
      underlineColorAndroid="rgba(0,0,0,0)"
      value=""
    />
    <View
      animatedStyle={
        Object {
          "value": Object {
            "opacity": 0,
          },
        }
      }
      collapsable={false}
      style={
        Object {
          "opacity": 0,
        }
      }
    >
      <View
        accessibilityRole="none"
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "paddingLeft": 12,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`Test componente <InputSelectNative /> Debería renderizar correctamente caso image 1`] = `
<View
  pointerEvents="auto"
  style={
    Array [
      Object {
        "marginBottom": 16,
      },
      Object {
        "marginTop": 8,
      },
      Object {},
    ]
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "borderBottomLeftRadius": 8,
            "borderTopLeftRadius": 8,
            "width": 11,
          },
          Object {
            "borderColor": "#8393A3",
            "height": 56,
          },
          Object {
            "borderBottomWidth": 1,
            "borderLeftWidth": 1,
            "borderTopWidth": 1,
          },
        ]
      }
    />
    <View
      style={
        Array [
          Object {
            "borderColor": "#8393A3",
            "height": 56,
          },
          Object {
            "borderBottomWidth": 1,
            "borderTopWidth": 1,
          },
          Object {
            "width": 0,
          },
        ]
      }
    />
    <View
      style={
        Array [
          Object {
            "borderBottomRightRadius": 8,
            "borderTopRightRadius": 8,
            "flex": 1,
          },
          Object {
            "borderColor": "#8393A3",
            "height": 56,
          },
          Object {
            "borderBottomWidth": 1,
            "borderRightWidth": 1,
            "borderTopWidth": 1,
          },
        ]
      }
    />
  </View>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={false}
    focusable={false}
    forwardedRef={[Function]}
    onClick={[Function]}
    onLayout={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "borderBottomWidth": 1,
        "borderColor": "#D9D5DC",
        "borderLeftWidth": 1,
        "borderRadius": undefined,
        "borderRightWidth": 1,
        "borderTopWidth": 1,
        "borderWidth": undefined,
        "flexDirection": "row",
        "marginLeft": 0,
        "opacity": 1,
      }
    }
  >
    <View
      animatedStyle={
        Object {
          "value": Object {
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          },
        }
      }
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="none"
      style={
        Object {
          "left": 10,
          "opacity": 1,
          "paddingHorizontal": 6,
          "position": "absolute",
          "top": 15,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
          "zIndex": 2,
        }
      }
    >
      <Text
        accessibilityHint=""
        accessibilityLabel="Input Select Native"
        accessible={true}
        animatedStyle={
          Object {
            "value": Object {
              "fontSize": 16,
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "color": "#52677B",
            "fontFamily": "NunitoSans-Regular",
            "fontSize": 16,
            "lineHeight": 24,
            "zIndex": 2,
          }
        }
        testID="Input Select Native"
      >
        Input Select Native
      </Text>
    </View>
    <View
      animatedStyle={
        Object {
          "value": Object {
            "opacity": 0,
          },
        }
      }
      collapsable={false}
      style={
        Object {
          "opacity": 0,
        }
      }
    >
      <View
        accessibilityRole="none"
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "paddingRight": 12,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
                Object {},
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                  Object {
                    "flexDirection": "row",
                  },
                  undefined,
                  Object {
                    "alignItems": "center",
                  },
                  false,
                ]
              }
            >
              <Image
                source={
                  Object {
                    "testUri": "../../bch-assets/images/bandera/cuadrada/bandera_usa.png",
                  }
                }
                style={
                  Array [
                    Object {
                      "height": 20,
                      "width": 30,
                    },
                    Object {},
                  ]
                }
                testID="1"
              />
              <View
                animatedStyle={
                  Object {
                    "value": Object {
                      "transform": Array [
                        Object {
                          "rotateX": "0deg",
                        },
                      ],
                    },
                  }
                }
                collapsable={false}
                style={
                  Object {
                    "transform": Array [
                      Object {
                        "rotateX": "0deg",
                      },
                    ],
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  animated={true}
                  disabled={false}
                  inverse={false}
                  isOpen={false}
                  style={
                    Array [
                      Object {
                        "color": undefined,
                        "fontSize": 12,
                      },
                      Array [
                        Object {
                          "color": "#2A343D",
                        },
                        Object {
                          "fontSize": 24,
                        },
                        Array [
                          Object {
                            "color": "#52677B",
                            "fontSize": 12,
                          },
                          Array [
                            Object {
                              "marginLeft": 8,
                            },
                            Object {
                              "marginRight": 8,
                            },
                          ],
                        ],
                      ],
                      Object {
                        "fontFamily": "icomoon",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  
                </Text>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "position": "absolute",
                  },
                  Object {
                    "top": 8,
                  },
                  Object {
                    "left": 0,
                  },
                  Object {
                    "width": "100%",
                  },
                  Object {
                    "height": 56,
                  },
                  Object {
                    "opacity": 0,
                  },
                ]
              }
            >
              <RNCPicker
                items={
                  Array [
                    Object {
                      "label": "Seleccione Select Native",
                      "testID": "seleccione",
                      "textColor": undefined,
                      "value": "seleccione",
                    },
                    Object {
                      "label": "US - DOLAR",
                      "testID": "1",
                      "textColor": undefined,
                      "value": "1",
                    },
                    Object {
                      "label": "EUR - EURO",
                      "testID": "2",
                      "textColor": undefined,
                      "value": "2",
                    },
                  ]
                }
                numberOfLines={1}
                onChange={[Function]}
                selectedIndex={1}
                style={
                  Array [
                    Object {
                      "height": 216,
                    },
                    Object {
                      "color": "#000000",
                    },
                  ]
                }
                testID=""
              />
            </View>
          </View>
        </View>
      </View>
    </View>
    <TextInput
      accessibilityHint=""
      accessibilityLabel=""
      autoFocus={false}
      digiCard={false}
      disabled={false}
      disabledPadding={false}
      editable={true}
      error={false}
      helperText=""
      inverse={false}
      isOpenSelect={false}
      isRenderRightVisible={false}
      keyboardType="default"
      labeAccessibilityHint=""
      label="Input Select Native"
      labelAccessibilityLabel=""
      labelTestID=""
      large={false}
      loading={false}
      maxHeight={96}
      maxLength={null}
      multiline={false}
      number={false}
      onBlur={[Function]}
      onChangeText={[MockFunction]}
      onEndEditing={[Function]}
      onFocus={[Function]}
      pass={false}
      placeholderTextColor="#575757"
      pointerEvents="auto"
      renderLeft={[Function]}
      renderLeftSide={false}
      renderRight={[Function]}
      renderRightSide={false}
      select={false}
      selectionColor="#CED7E0"
      showStateIconRight={false}
      style={
        Array [
          Object {
            "color": "#000",
            "flex": 1,
            "fontSize": 17,
            "height": 50,
            "paddingLeft": 8,
            "paddingRight": 5,
            "top": 1.5,
          },
          Object {
            "top": 0,
          },
          Object {
            "opacity": 1,
          },
        ]
      }
      success={false}
      testID=""
      underlineColorAndroid="rgba(0,0,0,0)"
      value=""
    />
    <View
      animatedStyle={
        Object {
          "value": Object {
            "opacity": 0,
          },
        }
      }
      collapsable={false}
      style={
        Object {
          "opacity": 0,
        }
      }
    >
      <View
        accessibilityRole="none"
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "paddingLeft": 12,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`Test componente <InputSelectNative /> Debería renderizar correctamente caso text default 1`] = `
<View
  pointerEvents="auto"
  style={
    Array [
      Object {
        "marginBottom": 16,
      },
      Object {
        "marginTop": 8,
      },
      Object {},
    ]
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "borderBottomLeftRadius": 8,
            "borderTopLeftRadius": 8,
            "width": 11,
          },
          Object {
            "borderColor": "#8393A3",
            "height": 56,
          },
          Object {
            "borderBottomWidth": 1,
            "borderLeftWidth": 1,
            "borderTopWidth": 1,
          },
        ]
      }
    />
    <View
      style={
        Array [
          Object {
            "borderColor": "#8393A3",
            "height": 56,
          },
          Object {
            "borderBottomWidth": 1,
            "borderTopWidth": 1,
          },
          Object {
            "width": 0,
          },
        ]
      }
    />
    <View
      style={
        Array [
          Object {
            "borderBottomRightRadius": 8,
            "borderTopRightRadius": 8,
            "flex": 1,
          },
          Object {
            "borderColor": "#8393A3",
            "height": 56,
          },
          Object {
            "borderBottomWidth": 1,
            "borderRightWidth": 1,
            "borderTopWidth": 1,
          },
        ]
      }
    />
  </View>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={false}
    focusable={false}
    forwardedRef={[Function]}
    onClick={[Function]}
    onLayout={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "borderBottomWidth": 1,
        "borderColor": "#D9D5DC",
        "borderLeftWidth": 1,
        "borderRadius": undefined,
        "borderRightWidth": 1,
        "borderTopWidth": 1,
        "borderWidth": undefined,
        "flexDirection": "row",
        "marginLeft": 0,
        "opacity": 1,
      }
    }
  >
    <View
      animatedStyle={
        Object {
          "value": Object {
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          },
        }
      }
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="none"
      style={
        Object {
          "left": 10,
          "opacity": 1,
          "paddingHorizontal": 6,
          "position": "absolute",
          "top": 15,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
          "zIndex": 2,
        }
      }
    >
      <Text
        accessibilityHint=""
        accessibilityLabel="Input Select Native"
        accessible={true}
        animatedStyle={
          Object {
            "value": Object {
              "fontSize": 16,
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "color": "#52677B",
            "fontFamily": "NunitoSans-Regular",
            "fontSize": 16,
            "lineHeight": 24,
            "zIndex": 2,
          }
        }
        testID="Input Select Native"
      >
        Input Select Native
      </Text>
    </View>
    <View
      animatedStyle={
        Object {
          "value": Object {
            "opacity": 0,
          },
        }
      }
      collapsable={false}
      style={
        Object {
          "opacity": 0,
        }
      }
    >
      <View
        accessibilityRole="none"
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "paddingRight": 12,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
                Object {},
              ]
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {},
                    Object {
                      "flexDirection": "row",
                    },
                    undefined,
                    Object {
                      "alignItems": "center",
                    },
                    false,
                  ]
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "color": undefined,
                        "fontSize": 12,
                      },
                      Array [
                        Object {
                          "color": "#2A343D",
                        },
                        Object {
                          "fontSize": 24,
                        },
                        Array [
                          Array [
                            Object {
                              "fontSize": 12,
                            },
                            Object {
                              "marginLeft": 8,
                            },
                            Object {
                              "marginRight": 8,
                            },
                          ],
                          Object {},
                        ],
                      ],
                      Object {
                        "fontFamily": "icomoon",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                  testID="icon-bch-cat"
                >
                  
                </Text>
                <View
                  animatedStyle={
                    Object {
                      "value": Object {
                        "transform": Array [
                          Object {
                            "rotateX": "0deg",
                          },
                        ],
                      },
                    }
                  }
                  collapsable={false}
                  style={
                    Object {
                      "transform": Array [
                        Object {
                          "rotateX": "0deg",
                        },
                      ],
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    animated={true}
                    disabled={false}
                    inverse={false}
                    isOpen={false}
                    style={
                      Array [
                        Object {
                          "color": undefined,
                          "fontSize": 12,
                        },
                        Array [
                          Object {
                            "color": "#2A343D",
                          },
                          Object {
                            "fontSize": 24,
                          },
                          Array [
                            Object {
                              "color": "#52677B",
                              "fontSize": 12,
                            },
                            Array [
                              Object {
                                "marginLeft": 8,
                              },
                              Object {
                                "marginRight": 8,
                              },
                            ],
                          ],
                        ],
                        Object {
                          "fontFamily": "icomoon",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
            <Modal
              animationType="slide"
              deviceHeight={null}
              deviceWidth={null}
              hardwareAccelerated={false}
              hideModalContentWhileAnimating={false}
              onBackdropPress={[Function]}
              onModalHide={[Function]}
              onModalWillHide={[Function]}
              onModalWillShow={[Function]}
              onRequestClose={[Function]}
              onSwipeComplete={[Function]}
              panResponderThreshold={4}
              scrollHorizontal={false}
              scrollOffset={0}
              scrollOffsetMax={0}
              scrollTo={null}
              statusBarTranslucent={false}
              supportedOrientations={
                Array [
                  "portrait",
                  "landscape",
                ]
              }
              swipeThreshold={100}
              transparent={true}
              visible={false}
            >
              <View
                accessible={true}
                focusable={true}
                forwardedRef={[Function]}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "backgroundColor": "black",
                    "bottom": 0,
                    "height": 1334,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                    "width": 750,
                  }
                }
              />
              <View
                animationType="slide"
                deviceHeight={null}
                deviceWidth={null}
                forwardedRef={[Function]}
                hideModalContentWhileAnimating={false}
                onBackdropPress={[Function]}
                onModalHide={[Function]}
                onModalWillHide={[Function]}
                onModalWillShow={[Function]}
                onSwipeComplete={[Function]}
                panResponderThreshold={4}
                pointerEvents="box-none"
                scrollHorizontal={false}
                scrollOffset={0}
                scrollOffsetMax={0}
                scrollTo={null}
                statusBarTranslucent={false}
                style={
                  Object {
                    "flex": 1,
                    "justifyContent": "flex-end",
                    "margin": 0,
                    "transform": Array [
                      Object {
                        "translateY": 0,
                      },
                    ],
                  }
                }
                supportedOrientations={
                  Array [
                    "portrait",
                    "landscape",
                  ]
                }
                swipeThreshold={100}
              >
                <View
                  style={
                    Array [
                      Object {},
                      Object {
                        "backgroundColor": "#CED7E0",
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        Object {},
                        Object {
                          "backgroundColor": "#F0F3F5",
                        },
                        Object {
                          "borderColor": "#CED7E0",
                        },
                        Object {
                          "padding": 0,
                        },
                        Object {
                          "flexDirection": "row",
                        },
                        Object {
                          "justifyContent": "space-between",
                        },
                        Object {
                          "alignItems": "center",
                        },
                        Object {
                          "paddingHorizontal": 12,
                        },
                        Object {
                          "borderTopWidth": 1,
                        },
                        Object {
                          "zIndex": 2,
                        },
                      ]
                    }
                  >
                    <View
                      accessible={false}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <Text
                        allowFontScaling={false}
                        style={
                          Array [
                            Object {
                              "color": "#000",
                              "fontFamily": "System",
                              "fontSize": 16,
                            },
                            Object {
                              "padding": 8,
                            },
                            Object {
                              "marginBottom": 0,
                            },
                            Object {
                              "color": "#295EFF",
                            },
                            Object {
                              "textAlign": "left",
                            },
                          ]
                        }
                        uppercase={false}
                      >
                        Cancelar
                      </Text>
                    </View>
                    <View
                      accessible={false}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <Text
                        allowFontScaling={false}
                        style={
                          Array [
                            Object {
                              "color": "#000",
                              "fontFamily": "System",
                              "fontSize": 16,
                            },
                            Object {
                              "padding": 8,
                            },
                            Object {
                              "marginBottom": 0,
                            },
                            Object {
                              "color": "#295EFF",
                            },
                            Object {
                              "textAlign": "left",
                            },
                          ]
                        }
                        uppercase={false}
                      >
                        Ok
                      </Text>
                    </View>
                  </View>
                  <RCTSafeAreaView
                    emulateUnlessSupported={true}
                  >
                    <View
                      style={
                        Object {
                          "width": "100%",
                        }
                      }
                    >
                      <RNCPicker
                        items={
                          Array [
                            Object {
                              "label": "Cat",
                              "testID": "1",
                              "textColor": undefined,
                              "value": "1",
                            },
                            Object {
                              "label": "Dog",
                              "testID": "2",
                              "textColor": undefined,
                              "value": "2",
                            },
                          ]
                        }
                        numberOfLines={1}
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            Object {
                              "color": "#000000",
                            },
                          ]
                        }
                        testID=""
                      />
                    </View>
                  </RCTSafeAreaView>
                </View>
              </View>
            </Modal>
          </View>
        </View>
      </View>
    </View>
    <TextInput
      accessibilityHint=""
      accessibilityLabel=""
      autoFocus={false}
      digiCard={false}
      disabled={false}
      disabledPadding={false}
      editable={true}
      error={false}
      helperText=""
      inverse={false}
      isOpenSelect={false}
      isRenderRightVisible={false}
      keyboardType="default"
      labeAccessibilityHint=""
      label="Input Select Native"
      labelAccessibilityLabel=""
      labelTestID=""
      large={false}
      loading={false}
      maxHeight={96}
      maxLength={null}
      multiline={false}
      number={false}
      onBlur={[Function]}
      onChangeText={[MockFunction]}
      onEndEditing={[Function]}
      onFocus={[Function]}
      pass={false}
      placeholderTextColor="#575757"
      pointerEvents="auto"
      renderLeft={[Function]}
      renderLeftSide={false}
      renderRight={[Function]}
      renderRightSide={false}
      select={false}
      selectionColor="#CED7E0"
      showStateIconRight={false}
      style={
        Array [
          Object {
            "color": "#000",
            "flex": 1,
            "fontSize": 17,
            "height": 50,
            "paddingLeft": 8,
            "paddingRight": 5,
            "top": 1.5,
          },
          Object {
            "top": 0,
          },
          Object {
            "opacity": 1,
          },
        ]
      }
      success={false}
      testID=""
      underlineColorAndroid="rgba(0,0,0,0)"
      value=""
    />
    <View
      animatedStyle={
        Object {
          "value": Object {
            "opacity": 0,
          },
        }
      }
      collapsable={false}
      style={
        Object {
          "opacity": 0,
        }
      }
    >
      <View
        accessibilityRole="none"
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "paddingLeft": 12,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`Test componente <InputSelectNative /> Debería renderizar correctamente caso text en Android 1`] = `
<View
  pointerEvents="auto"
  style={
    Array [
      Object {
        "marginBottom": 16,
      },
      Object {
        "marginTop": 8,
      },
      Object {},
    ]
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "borderBottomLeftRadius": 8,
            "borderTopLeftRadius": 8,
            "width": 11,
          },
          Object {
            "borderColor": "#8393A3",
            "height": 56,
          },
          Object {
            "borderBottomWidth": 1,
            "borderLeftWidth": 1,
            "borderTopWidth": 1,
          },
        ]
      }
    />
    <View
      style={
        Array [
          Object {
            "borderColor": "#8393A3",
            "height": 56,
          },
          Object {
            "borderBottomWidth": 1,
            "borderTopWidth": 1,
          },
          Object {
            "width": 0,
          },
        ]
      }
    />
    <View
      style={
        Array [
          Object {
            "borderBottomRightRadius": 8,
            "borderTopRightRadius": 8,
            "flex": 1,
          },
          Object {
            "borderColor": "#8393A3",
            "height": 56,
          },
          Object {
            "borderBottomWidth": 1,
            "borderRightWidth": 1,
            "borderTopWidth": 1,
          },
        ]
      }
    />
  </View>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={false}
    focusable={false}
    forwardedRef={[Function]}
    onClick={[Function]}
    onLayout={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "borderBottomWidth": 1,
        "borderColor": "#D9D5DC",
        "borderLeftWidth": 1,
        "borderRadius": undefined,
        "borderRightWidth": 1,
        "borderTopWidth": 1,
        "borderWidth": undefined,
        "flexDirection": "row",
        "marginLeft": 0,
        "opacity": 1,
      }
    }
  >
    <View
      animatedStyle={
        Object {
          "value": Object {
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          },
        }
      }
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="none"
      style={
        Object {
          "left": 10,
          "opacity": 1,
          "paddingHorizontal": 6,
          "position": "absolute",
          "top": 15,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
          "zIndex": 2,
        }
      }
    >
      <Text
        accessibilityHint=""
        accessibilityLabel="Input Select Native"
        accessible={true}
        animatedStyle={
          Object {
            "value": Object {
              "fontSize": 16,
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "color": "#52677B",
            "fontFamily": "NunitoSans-Regular",
            "fontSize": 16,
            "lineHeight": 24,
            "zIndex": 2,
          }
        }
        testID="Input Select Native"
      >
        Input Select Native
      </Text>
    </View>
    <View
      animatedStyle={
        Object {
          "value": Object {
            "opacity": 0,
          },
        }
      }
      collapsable={false}
      style={
        Object {
          "opacity": 0,
        }
      }
    >
      <View
        accessibilityRole="none"
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "paddingRight": 12,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
                Object {},
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                  Object {
                    "flexDirection": "row",
                  },
                  undefined,
                  Object {
                    "alignItems": "center",
                  },
                  false,
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#000",
                      "fontFamily": "System",
                      "fontSize": 16,
                    },
                    Array [
                      Object {
                        "marginBottom": 0,
                      },
                      Object {
                        "color": "#2A343D",
                      },
                    ],
                    Object {},
                  ]
                }
                testID="USD"
                uppercase={false}
              >
                USD
              </Text>
              <View
                animatedStyle={
                  Object {
                    "value": Object {
                      "transform": Array [
                        Object {
                          "rotateX": "0deg",
                        },
                      ],
                    },
                  }
                }
                collapsable={false}
                style={
                  Object {
                    "transform": Array [
                      Object {
                        "rotateX": "0deg",
                      },
                    ],
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  animated={true}
                  disabled={false}
                  inverse={false}
                  isOpen={false}
                  style={
                    Array [
                      Object {
                        "color": undefined,
                        "fontSize": 12,
                      },
                      Array [
                        Object {
                          "color": "#2A343D",
                        },
                        Object {
                          "fontSize": 24,
                        },
                        Array [
                          Object {
                            "color": "#52677B",
                            "fontSize": 12,
                          },
                          Array [
                            Object {
                              "marginLeft": 8,
                            },
                            Object {
                              "marginRight": 8,
                            },
                          ],
                        ],
                      ],
                      Object {
                        "fontFamily": "icomoon",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  
                </Text>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "position": "absolute",
                  },
                  Object {
                    "top": 8,
                  },
                  Object {
                    "left": 0,
                  },
                  Object {
                    "width": "100%",
                  },
                  Object {
                    "height": 56,
                  },
                  Object {
                    "opacity": 0,
                  },
                ]
              }
            >
              <RNCPicker
                items={
                  Array [
                    Object {
                      "label": "Seleccione Select Native",
                      "testID": "seleccione",
                      "textColor": undefined,
                      "value": "seleccione",
                    },
                    Object {
                      "label": "DOLAR",
                      "testID": "1",
                      "textColor": undefined,
                      "value": "1",
                    },
                    Object {
                      "label": "EURO",
                      "testID": "2",
                      "textColor": undefined,
                      "value": "2",
                    },
                  ]
                }
                numberOfLines={1}
                onChange={[Function]}
                selectedIndex={1}
                style={
                  Array [
                    Object {
                      "height": 216,
                    },
                    Object {
                      "color": "#000000",
                    },
                  ]
                }
                testID=""
              />
            </View>
          </View>
        </View>
      </View>
    </View>
    <TextInput
      accessibilityHint=""
      accessibilityLabel=""
      autoFocus={false}
      digiCard={false}
      disabled={false}
      disabledPadding={false}
      editable={true}
      error={false}
      helperText=""
      inverse={false}
      isOpenSelect={false}
      isRenderRightVisible={false}
      keyboardType="default"
      labeAccessibilityHint=""
      label="Input Select Native"
      labelAccessibilityLabel=""
      labelTestID=""
      large={false}
      loading={false}
      maxHeight={96}
      maxLength={null}
      multiline={false}
      number={false}
      onBlur={[Function]}
      onChangeText={[MockFunction]}
      onEndEditing={[Function]}
      onFocus={[Function]}
      pass={false}
      placeholderTextColor="#575757"
      pointerEvents="auto"
      renderLeft={[Function]}
      renderLeftSide={false}
      renderRight={[Function]}
      renderRightSide={false}
      select={false}
      selectionColor="#CED7E0"
      showStateIconRight={false}
      style={
        Array [
          Object {
            "color": "#000",
            "flex": 1,
            "fontSize": 17,
            "height": 50,
            "paddingLeft": 8,
            "paddingRight": 5,
            "top": 1.5,
          },
          Object {
            "top": 0,
          },
          Object {
            "opacity": 1,
          },
        ]
      }
      success={false}
      testID=""
      underlineColorAndroid="rgba(0,0,0,0)"
      value=""
    />
    <View
      animatedStyle={
        Object {
          "value": Object {
            "opacity": 0,
          },
        }
      }
      collapsable={false}
      style={
        Object {
          "opacity": 0,
        }
      }
    >
      <View
        accessibilityRole="none"
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "paddingLeft": 12,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`Test componente <InputSelectNative /> Debería renderizar correctamente caso text en IOS 1`] = `
<View
  pointerEvents="auto"
  style={
    Array [
      Object {
        "marginBottom": 16,
      },
      Object {
        "marginTop": 8,
      },
      Object {},
    ]
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "borderBottomLeftRadius": 8,
            "borderTopLeftRadius": 8,
            "width": 11,
          },
          Object {
            "borderColor": "#8393A3",
            "height": 56,
          },
          Object {
            "borderBottomWidth": 1,
            "borderLeftWidth": 1,
            "borderTopWidth": 1,
          },
        ]
      }
    />
    <View
      style={
        Array [
          Object {
            "borderColor": "#8393A3",
            "height": 56,
          },
          Object {
            "borderBottomWidth": 1,
            "borderTopWidth": 1,
          },
          Object {
            "width": 0,
          },
        ]
      }
    />
    <View
      style={
        Array [
          Object {
            "borderBottomRightRadius": 8,
            "borderTopRightRadius": 8,
            "flex": 1,
          },
          Object {
            "borderColor": "#8393A3",
            "height": 56,
          },
          Object {
            "borderBottomWidth": 1,
            "borderRightWidth": 1,
            "borderTopWidth": 1,
          },
        ]
      }
    />
  </View>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={false}
    focusable={false}
    forwardedRef={[Function]}
    onClick={[Function]}
    onLayout={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "borderBottomWidth": 1,
        "borderColor": "#D9D5DC",
        "borderLeftWidth": 1,
        "borderRadius": undefined,
        "borderRightWidth": 1,
        "borderTopWidth": 1,
        "borderWidth": undefined,
        "flexDirection": "row",
        "marginLeft": 0,
        "opacity": 1,
      }
    }
  >
    <View
      animatedStyle={
        Object {
          "value": Object {
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          },
        }
      }
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="none"
      style={
        Object {
          "left": 10,
          "opacity": 1,
          "paddingHorizontal": 6,
          "position": "absolute",
          "top": 15,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
          "zIndex": 2,
        }
      }
    >
      <Text
        accessibilityHint=""
        accessibilityLabel="Input Select Native"
        accessible={true}
        animatedStyle={
          Object {
            "value": Object {
              "fontSize": 16,
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "color": "#52677B",
            "fontFamily": "NunitoSans-Regular",
            "fontSize": 16,
            "lineHeight": 24,
            "zIndex": 2,
          }
        }
        testID="Input Select Native"
      >
        Input Select Native
      </Text>
    </View>
    <View
      animatedStyle={
        Object {
          "value": Object {
            "opacity": 0,
          },
        }
      }
      collapsable={false}
      style={
        Object {
          "opacity": 0,
        }
      }
    >
      <View
        accessibilityRole="none"
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "paddingRight": 12,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
                Object {},
              ]
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {},
                    Object {
                      "flexDirection": "row",
                    },
                    undefined,
                    Object {
                      "alignItems": "center",
                    },
                    false,
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#000",
                        "fontFamily": "System",
                        "fontSize": 16,
                      },
                      Array [
                        Object {
                          "marginBottom": 0,
                        },
                        Object {
                          "color": "#2A343D",
                        },
                      ],
                      Object {},
                    ]
                  }
                  testID="USD"
                  uppercase={false}
                >
                  USD
                </Text>
                <View
                  animatedStyle={
                    Object {
                      "value": Object {
                        "transform": Array [
                          Object {
                            "rotateX": "0deg",
                          },
                        ],
                      },
                    }
                  }
                  collapsable={false}
                  style={
                    Object {
                      "transform": Array [
                        Object {
                          "rotateX": "0deg",
                        },
                      ],
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    animated={true}
                    disabled={false}
                    inverse={false}
                    isOpen={false}
                    style={
                      Array [
                        Object {
                          "color": undefined,
                          "fontSize": 12,
                        },
                        Array [
                          Object {
                            "color": "#2A343D",
                          },
                          Object {
                            "fontSize": 24,
                          },
                          Array [
                            Object {
                              "color": "#52677B",
                              "fontSize": 12,
                            },
                            Array [
                              Object {
                                "marginLeft": 8,
                              },
                              Object {
                                "marginRight": 8,
                              },
                            ],
                          ],
                        ],
                        Object {
                          "fontFamily": "icomoon",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
            <Modal
              animationType="slide"
              deviceHeight={null}
              deviceWidth={null}
              hardwareAccelerated={false}
              hideModalContentWhileAnimating={false}
              onBackdropPress={[Function]}
              onModalHide={[Function]}
              onModalWillHide={[Function]}
              onModalWillShow={[Function]}
              onRequestClose={[Function]}
              onSwipeComplete={[Function]}
              panResponderThreshold={4}
              scrollHorizontal={false}
              scrollOffset={0}
              scrollOffsetMax={0}
              scrollTo={null}
              statusBarTranslucent={false}
              supportedOrientations={
                Array [
                  "portrait",
                  "landscape",
                ]
              }
              swipeThreshold={100}
              transparent={true}
              visible={false}
            >
              <View
                accessible={true}
                focusable={true}
                forwardedRef={[Function]}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "backgroundColor": "black",
                    "bottom": 0,
                    "height": 1334,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                    "width": 750,
                  }
                }
              />
              <View
                animationType="slide"
                deviceHeight={null}
                deviceWidth={null}
                forwardedRef={[Function]}
                hideModalContentWhileAnimating={false}
                onBackdropPress={[Function]}
                onModalHide={[Function]}
                onModalWillHide={[Function]}
                onModalWillShow={[Function]}
                onSwipeComplete={[Function]}
                panResponderThreshold={4}
                pointerEvents="box-none"
                scrollHorizontal={false}
                scrollOffset={0}
                scrollOffsetMax={0}
                scrollTo={null}
                statusBarTranslucent={false}
                style={
                  Object {
                    "flex": 1,
                    "justifyContent": "flex-end",
                    "margin": 0,
                    "transform": Array [
                      Object {
                        "translateY": 0,
                      },
                    ],
                  }
                }
                supportedOrientations={
                  Array [
                    "portrait",
                    "landscape",
                  ]
                }
                swipeThreshold={100}
              >
                <View
                  style={
                    Array [
                      Object {},
                      Object {
                        "backgroundColor": "#CED7E0",
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        Object {},
                        Object {
                          "backgroundColor": "#F0F3F5",
                        },
                        Object {
                          "borderColor": "#CED7E0",
                        },
                        Object {
                          "padding": 0,
                        },
                        Object {
                          "flexDirection": "row",
                        },
                        Object {
                          "justifyContent": "space-between",
                        },
                        Object {
                          "alignItems": "center",
                        },
                        Object {
                          "paddingHorizontal": 12,
                        },
                        Object {
                          "borderTopWidth": 1,
                        },
                        Object {
                          "zIndex": 2,
                        },
                      ]
                    }
                  >
                    <View
                      accessible={false}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <Text
                        allowFontScaling={false}
                        style={
                          Array [
                            Object {
                              "color": "#000",
                              "fontFamily": "System",
                              "fontSize": 16,
                            },
                            Object {
                              "padding": 8,
                            },
                            Object {
                              "marginBottom": 0,
                            },
                            Object {
                              "color": "#295EFF",
                            },
                            Object {
                              "textAlign": "left",
                            },
                          ]
                        }
                        uppercase={false}
                      >
                        Cancelar
                      </Text>
                    </View>
                    <View
                      accessible={false}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <Text
                        allowFontScaling={false}
                        style={
                          Array [
                            Object {
                              "color": "#000",
                              "fontFamily": "System",
                              "fontSize": 16,
                            },
                            Object {
                              "padding": 8,
                            },
                            Object {
                              "marginBottom": 0,
                            },
                            Object {
                              "color": "#295EFF",
                            },
                            Object {
                              "textAlign": "left",
                            },
                          ]
                        }
                        uppercase={false}
                      >
                        Ok
                      </Text>
                    </View>
                  </View>
                  <RCTSafeAreaView
                    emulateUnlessSupported={true}
                  >
                    <View
                      style={
                        Object {
                          "width": "100%",
                        }
                      }
                    >
                      <RNCPicker
                        items={
                          Array [
                            Object {
                              "label": "DOLAR",
                              "testID": "1",
                              "textColor": undefined,
                              "value": "1",
                            },
                            Object {
                              "label": "EURO",
                              "testID": "2",
                              "textColor": undefined,
                              "value": "2",
                            },
                          ]
                        }
                        numberOfLines={1}
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            Object {
                              "color": "#000000",
                            },
                          ]
                        }
                        testID=""
                      />
                    </View>
                  </RCTSafeAreaView>
                </View>
              </View>
            </Modal>
          </View>
        </View>
      </View>
    </View>
    <TextInput
      accessibilityHint=""
      accessibilityLabel=""
      autoFocus={false}
      digiCard={false}
      disabled={false}
      disabledPadding={false}
      editable={true}
      error={false}
      helperText=""
      inverse={false}
      isOpenSelect={false}
      isRenderRightVisible={false}
      keyboardType="default"
      labeAccessibilityHint=""
      label="Input Select Native"
      labelAccessibilityLabel=""
      labelTestID=""
      large={false}
      loading={false}
      maxHeight={96}
      maxLength={null}
      multiline={false}
      number={false}
      onBlur={[Function]}
      onChangeText={[MockFunction]}
      onEndEditing={[Function]}
      onFocus={[Function]}
      pass={false}
      placeholderTextColor="#575757"
      pointerEvents="auto"
      renderLeft={[Function]}
      renderLeftSide={false}
      renderRight={[Function]}
      renderRightSide={false}
      select={false}
      selectionColor="#CED7E0"
      showStateIconRight={false}
      style={
        Array [
          Object {
            "color": "#000",
            "flex": 1,
            "fontSize": 17,
            "height": 50,
            "paddingLeft": 8,
            "paddingRight": 5,
            "top": 1.5,
          },
          Object {
            "top": 0,
          },
          Object {
            "opacity": 1,
          },
        ]
      }
      success={false}
      testID=""
      underlineColorAndroid="rgba(0,0,0,0)"
      value=""
    />
    <View
      animatedStyle={
        Object {
          "value": Object {
            "opacity": 0,
          },
        }
      }
      collapsable={false}
      style={
        Object {
          "opacity": 0,
        }
      }
    >
      <View
        accessibilityRole="none"
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "paddingLeft": 12,
          }
        }
      />
    </View>
  </View>
</View>
`;
