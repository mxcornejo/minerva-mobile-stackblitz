import React from 'react';
import Images from 'bch-assets';
import { render } from '@testing-library/react-native';
import SelectorInput from '../../../../src/components/inputSelectNative/components/SelectorInput/SelectorInput';
import Platform from '../../../../src/constants/platform';

jest.mock('../../../../src/constants/platform', () => ({
    android: false,
    ios: true,
}));

describe('Test componente <SelectorInput />', () => {
    const props = {
        selectedValue: '1',
        onValueChange: jest.fn(),
        labelSelected: 'Select Native',
        optionSource: parseInt(Images.bandera.cuadrada.bandera_usa, 10),
    };

    const { selectedValue, onValueChange, labelSelected, optionSource } = props;

    const itemsImage = [
        {
            label: 'US - DOLAR',
            value: '1',
            source: Images.bandera.cuadrada.bandera_usa,
        },
        {
            label: 'EUR - EURO',
            value: '2',
            source: Images.bandera.cuadrada.bandera_ue,
        },
    ];

    test('Debería renderizar correctamente en IOS', () => {
        Platform.android = false;
        Platform.ios = true;
        const { toJSON } = render(
            <SelectorInput
                items={itemsImage}
                labelSelected={labelSelected}
                selectedValue={selectedValue}
                onValueChange={onValueChange}
                optionSource={optionSource}
                image
            />,
        );
        expect(toJSON()).toMatchSnapshot();
    });

    test('Debería renderizar correctamente en Android', () => {
        Platform.android = true;
        Platform.ios = false;
        const { toJSON } = render(
            <SelectorInput
                items={itemsImage}
                labelSelected={labelSelected}
                selectedValue={selectedValue}
                onValueChange={onValueChange}
                optionSource={optionSource}
                image
            />,
        );
        expect(toJSON()).toMatchSnapshot();
    });

    test('Debería renderizar correctamente el componente disabled', () => {
        const { toJSON } = render(
            <SelectorInput
                items={itemsImage}
                labelSelected={labelSelected}
                selectedValue={selectedValue}
                onValueChange={onValueChange}
                optionSource={optionSource}
                image
                disabled
            />,
        );
        expect(toJSON()).toMatchSnapshot();
    });
});
