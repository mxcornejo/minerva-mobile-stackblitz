import React from 'react';
import { render } from '@testing-library/react-native';
import { HelperStyle, TextAmount } from '../../../src';
import TEXT_AMOUNT_STR from '../../../src/components/textAmount/textAmountStr';

describe('Test componente <TextAmount />', () => {
    const props = {
        text: '-$ 200.000',
        style: HelperStyle.success,
    };

    test('Deberia renderizar correctamente', () => {
        const { text, style } = props;
        const { toJSON } = render(
            <TextAmount style={style}>{text}</TextAmount>,
        );
        expect(toJSON()).toMatchSnapshot();
    });

    test('Deberia renderizar con icono egreso y color de icono gray_dark', () => {
        const { text, style } = props;
        const { getByTestId } = render(
            <TextAmount style={style} showIcon isIncomeIcon={false}>
                {text}
            </TextAmount>,
        );
        const elementIcon = getByTestId(TEXT_AMOUNT_STR.outcomesIcon);
        expect(elementIcon).toBeDefined();
        expect(Object.assign(...elementIcon.props.style.flat(2))).toEqual(
            expect.objectContaining(HelperStyle.gray_dark),
        );
    });

    test('Deberia renderizar con icono ingreso y color de icono success', () => {
        const { text, style } = props;
        const { getByTestId } = render(
            <TextAmount style={style} showIcon isIncomeIcon>
                {text}
            </TextAmount>,
        );
        const elementIcon = getByTestId(TEXT_AMOUNT_STR.incomesIcon);
        expect(elementIcon).toBeDefined();
        expect(Object.assign(...elementIcon.props.style.flat(2))).toEqual(
            expect.objectContaining(HelperStyle.success),
        );
    });
});
