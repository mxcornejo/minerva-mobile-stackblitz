import React from 'react';
import Assets from 'bch-assets';
import { render } from '@testing-library/react-native';
import { LottieLoader } from '../../../src/index';

const lottie = Assets.lottieAnimations;

describe('Test componente <LottieLoader />', () => {
    test('Debería renderizar correctamente', () => {
        const { toJSON, rerender } = render(
            <LottieLoader
                isRefreshing
                startAnimationSource={lottie.config_in}
                loopAnimationSource={lottie.config_loop}
                endAnimationSource={lottie.config_exito}
                height={200}
            />,
        );
        rerender(
            <LottieLoader
                isRefreshing={false}
                startAnimationSource={lottie.config_in}
                loopAnimationSource={lottie.config_loop}
                endAnimationSource={lottie.config_exito}
                height={200}
            />,
        );
        expect(toJSON()).toMatchSnapshot();
    });

    test('Debería iniciar animación y detenerla', () => {
        const { toJSON, rerender } = render(
            <LottieLoader
                isRefreshing={false}
                startAnimationSource={lottie.config_in}
                loopAnimationSource={lottie.config_loop}
                endAnimationSource={lottie.config_exito}
                height={200}
            />,
        );
        rerender(
            <LottieLoader
                isRefreshing
                startAnimationSource={lottie.config_in}
                loopAnimationSource={lottie.config_loop}
                endAnimationSource={lottie.config_exito}
                height={200}
            />,
        );
        rerender(
            <LottieLoader
                isRefreshing={false}
                startAnimationSource={lottie.config_in}
                loopAnimationSource={lottie.config_loop}
                endAnimationSource={lottie.config_exito}
                height={200}
            />,
        );
        expect(toJSON()).toMatchSnapshot();
    });

    test('Debería iniciar animación con duraciones distintas en su ciclo y detenerse', () => {
        const { toJSON, rerender } = render(
            <LottieLoader
                isRefreshing={false}
                startAnimationSource={lottie.config_in}
                loopAnimationSource={lottie.config_loop}
                endAnimationSource={lottie.config_exito}
                durationStart={900}
                durationLoop={1000}
                durationEnd={1500}
                height={200}
            />,
        );
        rerender(
            <LottieLoader
                isRefreshing
                startAnimationSource={lottie.config_in}
                loopAnimationSource={lottie.config_loop}
                endAnimationSource={lottie.config_exito}
                durationStart={900}
                durationLoop={1000}
                durationEnd={1500}
                height={200}
            />,
        );
        rerender(
            <LottieLoader
                isRefreshing={false}
                startAnimationSource={lottie.config_in}
                loopAnimationSource={lottie.config_loop}
                endAnimationSource={lottie.config_exito}
                durationStart={900}
                durationLoop={1000}
                durationEnd={1500}
                height={200}
            />,
        );
        expect(toJSON()).toMatchSnapshot();
    });
});
