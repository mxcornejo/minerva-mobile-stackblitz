// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test componente <CheckBox /> Debería renderizar con icono personalizado 1`] = `
<View
  accessibilityHint=""
  accessibilityLabel=""
  accessibilityRole="checkbox"
  accessibilityState={
    Object {
      "disabled": false,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  forwardedRef={[Function]}
  nativeID="animatedComponent"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "#039BE5",
      "borderBottomWidth": 1,
      "borderColor": "#039BE5",
      "borderLeftWidth": 1,
      "borderRadius": 13,
      "borderRightWidth": 1,
      "borderTopWidth": 1,
      "height": 20,
      "left": 10,
      "opacity": 1,
      "overflow": "hidden",
      "paddingBottom": 0,
      "paddingLeft": 3,
      "width": 20,
    }
  }
  testID=""
>
  <Text
    allowFontScaling={false}
    style={
      Array [
        Object {
          "color": undefined,
          "fontSize": 12,
        },
        Object {
          "color": "#fff",
          "fontSize": 13.333333333333332,
          "lineHeight": 19,
          "marginTop": undefined,
          "textShadowRadius": 0,
        },
        Object {
          "fontFamily": "Ionicons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        Object {},
      ]
    }
  >
    
  </Text>
</View>
`;

exports[`Test componente <CheckBox /> Debería renderizar correctamente 1`] = `
<View
  accessibilityHint=""
  accessibilityLabel=""
  accessibilityRole="checkbox"
  accessibilityState={
    Object {
      "disabled": false,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  forwardedRef={[Function]}
  nativeID="animatedComponent"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "#039BE5",
      "borderBottomWidth": 1,
      "borderColor": "#039BE5",
      "borderLeftWidth": 1,
      "borderRadius": 13,
      "borderRightWidth": 1,
      "borderTopWidth": 1,
      "height": 20,
      "left": 10,
      "opacity": 1,
      "overflow": "hidden",
      "paddingBottom": 0,
      "paddingLeft": 3,
      "width": 20,
    }
  }
  testID=""
>
  <Text
    allowFontScaling={false}
    style={
      Array [
        Object {
          "color": undefined,
          "fontSize": 12,
        },
        Object {
          "color": "#fff",
          "fontSize": 13.333333333333332,
          "lineHeight": 19,
          "marginTop": undefined,
          "textShadowRadius": 0,
        },
        Object {
          "fontFamily": "Ionicons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        Object {},
      ]
    }
  >
    
  </Text>
</View>
`;
