import React from 'react';
import { fireEvent, render } from '@testing-library/react-native';
import { ModalContextual } from '../../../src/index';
import MODALCONTEXTUAL_STR from '../../../src/components/modalContextual/ModalContextualStr';

describe('Text <ModalContextual />', () => {
    const mockSetVisible = jest.fn();
    const mockHeaderData = {
        iconName: 'icon-bch-familia',
        title: 'Aqui va el nombre',
        subtitle: '55.555.555-5',
    };
    const mockListDataString = [
        {
            name: 'Editar',
            iconName: 'icon-bch-edit',
            color: 'primary',
            onPress: (obj) => console.log(`Presionaste la option: ${obj}`),
        },
        {
            name: 'Eliminar',
            iconName: 'icon-bch-trush',
            color: 'warning',
            onPress: (obj) => console.log(`Presionaste la option: ${obj}`),
        },
    ];

    test('Debería renderizar correctamente', () => {
        const { toJSON } = render(
            <ModalContextual
                visible
                setVisible={mockSetVisible}
                headerData={mockHeaderData}
                listOptions={mockListDataString}
            />,
        );
        expect(toJSON()).toMatchSnapshot();
    });

    test('Debería cerrar el modal con el botón volver', () => {
        const { getByTestId } = render(
            <ModalContextual
                visible
                setVisible={mockSetVisible}
                headerData={mockHeaderData}
                listOptions={mockListDataString}
            />,
        );
        const btnVolver = getByTestId(MODALCONTEXTUAL_STR.btnVolverID);
        fireEvent.press(btnVolver);
        expect(btnVolver).toBeDefined();
    });
});
