// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test componente <SelectNative /> Debería renderizar correctamente Android 1`] = `
<View
  style={
    Array [
      Object {},
      Object {},
    ]
  }
>
  <View
    pointerEvents="none"
    style={
      Array [
        Object {
          "marginBottom": 16,
        },
        Object {
          "marginTop": 8,
        },
        Object {},
      ]
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "borderBottomLeftRadius": 8,
              "borderTopLeftRadius": 8,
              "width": 11,
            },
            Object {
              "borderColor": "#8393A3",
              "height": 56,
            },
            Object {
              "borderBottomWidth": 1,
              "borderLeftWidth": 1,
              "borderTopWidth": 1,
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "borderColor": "#8393A3",
              "height": 56,
            },
            Object {
              "borderBottomWidth": 1,
              "borderTopWidth": 1,
            },
            Object {
              "width": 0,
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "borderBottomRightRadius": 8,
              "borderTopRightRadius": 8,
              "flex": 1,
            },
            Object {
              "borderColor": "#8393A3",
              "height": 56,
            },
            Object {
              "borderBottomWidth": 1,
              "borderRightWidth": 1,
              "borderTopWidth": 1,
            },
          ]
        }
      />
    </View>
    <View
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={false}
      collapsable={false}
      focusable={false}
      forwardedRef={[Function]}
      nativeID="animatedComponent"
      onClick={[Function]}
      onLayout={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderBottomWidth": 1,
          "borderColor": "#D9D5DC",
          "borderLeftWidth": 1,
          "borderRadius": undefined,
          "borderRightWidth": 1,
          "borderTopWidth": 1,
          "borderWidth": undefined,
          "flexDirection": "row",
          "marginLeft": 0,
          "opacity": 1,
        }
      }
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            },
          }
        }
        collapsable={false}
        onLayout={[Function]}
        pointerEvents="none"
        style={
          Object {
            "left": 10,
            "opacity": 1,
            "paddingHorizontal": 6,
            "position": "absolute",
            "top": 15,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
            "zIndex": 2,
          }
        }
      >
        <Text
          accessibilityHint=""
          accessibilityLabel="Selecciona"
          accessible={true}
          animatedStyle={
            Object {
              "value": Object {
                "fontSize": 16,
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#52677B",
              "fontFamily": "NunitoSans-Regular",
              "fontSize": 16,
              "lineHeight": 24,
              "zIndex": 2,
            }
          }
          testID="Selecciona"
        >
          Selecciona
        </Text>
      </View>
      <View
        accessible={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "height": 56,
            },
            Object {
              "flex": 1,
            },
            Object {
              "justifyContent": "center",
            },
            Object {
              "opacity": 1,
            },
          ]
        }
      >
        <Text
          accessibilityHint=""
          accessibilityLabel=""
          ellipsizeMode="tail"
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "#000",
                "fontFamily": "System",
                "fontSize": 16,
              },
              Object {
                "marginBottom": 0,
              },
              Object {
                "color": "#2A343D",
              },
              null,
            ]
          }
          testID=""
          uppercase={false}
        >
          
        </Text>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          accessibilityRole="none"
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "paddingLeft": 12,
            }
          }
        >
          <View
            animatedStyle={
              Object {
                "value": Object {
                  "transform": Array [
                    Object {
                      "rotateX": "0deg",
                    },
                  ],
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "transform": Array [
                  Object {
                    "rotateX": "0deg",
                  },
                ],
              }
            }
          >
            <Text
              allowFontScaling={false}
              animated={true}
              disabled={false}
              inverse={false}
              isOpen={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {
                      "color": "#2A343D",
                    },
                    Object {
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "color": "#52677B",
                        "fontSize": 12,
                      },
                      Object {},
                    ],
                  ],
                  Object {
                    "fontFamily": "icomoon",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
    <Text
      accessibilityHint=""
      accessibilityLabel="texto ayuda"
      accessibilityRole="alert"
      animation={true}
      error={false}
      smaller={true}
      style={
        Array [
          Object {
            "color": "#000",
            "fontFamily": "System",
            "fontSize": 16,
          },
          Object {
            "color": "#2A343D",
          },
          Object {
            "marginTop": 4,
          },
          Object {
            "marginLeft": 17,
          },
          false,
          false,
          null,
        ]
      }
      testID="texto ayuda"
      unformatted={true}
      uppercase={false}
    >
      texto ayuda
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "position": "absolute",
        },
        Object {
          "top": 8,
        },
        Object {
          "left": 0,
        },
        Object {
          "width": "100%",
        },
        Object {
          "height": 56,
        },
        Object {
          "opacity": 0,
        },
      ]
    }
  >
    <RNCPicker
      items={
        Array [
          Object {
            "label": "Seleccione Selecciona",
            "testID": "seleccione",
            "textColor": undefined,
            "value": "seleccione",
          },
          Object {
            "label": "Bruno Fritsch, S.A",
            "testID": "1",
            "textColor": undefined,
            "value": "1",
          },
          Object {
            "label": "Consorcio corredora de Seguros LTD. 2020 asociados.",
            "testID": "2",
            "textColor": undefined,
            "value": "2",
          },
        ]
      }
      numberOfLines={1}
      onChange={[Function]}
      selectedIndex={0}
      style={
        Array [
          Object {
            "height": 216,
          },
          Object {
            "color": "#000000",
          },
        ]
      }
      testID=""
    />
  </View>
</View>
`;

exports[`Test componente <SelectNative /> Debería renderizar correctamente IOS 1`] = `
<View
  style={
    Array [
      Object {},
      Object {},
    ]
  }
>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={false}
    collapsable={false}
    focusable={true}
    nativeID="animatedComponent"
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      pointerEvents="none"
      style={
        Array [
          Object {
            "marginBottom": 16,
          },
          Object {
            "marginTop": 8,
          },
          Object {},
        ]
      }
    >
      <View
        style={
          Object {
            "flexDirection": "row",
            "position": "absolute",
            "width": "100%",
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "borderBottomLeftRadius": 8,
                "borderTopLeftRadius": 8,
                "width": 11,
              },
              Object {
                "borderColor": "#8393A3",
                "height": 56,
              },
              Object {
                "borderBottomWidth": 1,
                "borderLeftWidth": 1,
                "borderTopWidth": 1,
              },
            ]
          }
        />
        <View
          style={
            Array [
              Object {
                "borderColor": "#8393A3",
                "height": 56,
              },
              Object {
                "borderBottomWidth": 1,
                "borderTopWidth": 1,
              },
              Object {
                "width": 0,
              },
            ]
          }
        />
        <View
          style={
            Array [
              Object {
                "borderBottomRightRadius": 8,
                "borderTopRightRadius": 8,
                "flex": 1,
              },
              Object {
                "borderColor": "#8393A3",
                "height": 56,
              },
              Object {
                "borderBottomWidth": 1,
                "borderRightWidth": 1,
                "borderTopWidth": 1,
              },
            ]
          }
        />
      </View>
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={false}
        collapsable={false}
        focusable={false}
        forwardedRef={[Function]}
        nativeID="animatedComponent"
        onClick={[Function]}
        onLayout={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderBottomWidth": 1,
            "borderColor": "#D9D5DC",
            "borderLeftWidth": 1,
            "borderRadius": undefined,
            "borderRightWidth": 1,
            "borderTopWidth": 1,
            "borderWidth": undefined,
            "flexDirection": "row",
            "marginLeft": 0,
            "opacity": 1,
          }
        }
      >
        <View
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [
                  Object {
                    "translateY": 0,
                  },
                ],
              },
            }
          }
          collapsable={false}
          onLayout={[Function]}
          pointerEvents="none"
          style={
            Object {
              "left": 10,
              "opacity": 1,
              "paddingHorizontal": 6,
              "position": "absolute",
              "top": 15,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
              "zIndex": 2,
            }
          }
        >
          <Text
            accessibilityHint=""
            accessibilityLabel="Selecciona"
            accessible={true}
            animatedStyle={
              Object {
                "value": Object {
                  "fontSize": 16,
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "color": "#52677B",
                "fontFamily": "NunitoSans-Regular",
                "fontSize": 16,
                "lineHeight": 24,
                "zIndex": 2,
              }
            }
            testID="Selecciona"
          >
            Selecciona
          </Text>
        </View>
        <View
          accessible={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "height": 56,
              },
              Object {
                "flex": 1,
              },
              Object {
                "justifyContent": "center",
              },
              Object {
                "opacity": 1,
              },
            ]
          }
        >
          <Text
            accessibilityHint=""
            accessibilityLabel=""
            ellipsizeMode="tail"
            numberOfLines={1}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontFamily": "System",
                  "fontSize": 16,
                },
                Object {
                  "marginBottom": 0,
                },
                Object {
                  "color": "#2A343D",
                },
                null,
              ]
            }
            testID=""
            uppercase={false}
          >
            
          </Text>
        </View>
        <View
          animatedStyle={
            Object {
              "value": Object {},
            }
          }
          collapsable={false}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            accessibilityRole="none"
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "paddingLeft": 12,
              }
            }
          >
            <View
              animatedStyle={
                Object {
                  "value": Object {
                    "transform": Array [
                      Object {
                        "rotateX": "0deg",
                      },
                    ],
                  },
                }
              }
              collapsable={false}
              style={
                Object {
                  "transform": Array [
                    Object {
                      "rotateX": "0deg",
                    },
                  ],
                }
              }
            >
              <Text
                allowFontScaling={false}
                animated={true}
                disabled={false}
                inverse={false}
                isOpen={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Array [
                      Object {
                        "color": "#2A343D",
                      },
                      Object {
                        "fontSize": 24,
                      },
                      Array [
                        Object {
                          "color": "#52677B",
                          "fontSize": 12,
                        },
                        Object {},
                      ],
                    ],
                    Object {
                      "fontFamily": "icomoon",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
        </View>
      </View>
      <Text
        accessibilityHint=""
        accessibilityLabel="texto ayuda"
        accessibilityRole="alert"
        animation={true}
        error={false}
        smaller={true}
        style={
          Array [
            Object {
              "color": "#000",
              "fontFamily": "System",
              "fontSize": 16,
            },
            Object {
              "color": "#2A343D",
            },
            Object {
              "marginTop": 4,
            },
            Object {
              "marginLeft": 17,
            },
            false,
            false,
            null,
          ]
        }
        testID="texto ayuda"
        unformatted={true}
        uppercase={false}
      >
        texto ayuda
      </Text>
    </View>
  </View>
  <Modal
    animationType="slide"
    deviceHeight={null}
    deviceWidth={null}
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    onSwipeComplete={[Function]}
    panResponderThreshold={4}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={false}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      forwardedRef={[Function]}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      animationType="slide"
      collapsable={false}
      deviceHeight={null}
      deviceWidth={null}
      forwardedRef={[Function]}
      hideModalContentWhileAnimating={false}
      nativeID="animatedComponent"
      onBackdropPress={[Function]}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      onSwipeComplete={[Function]}
      panResponderThreshold={4}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      statusBarTranslucent={false}
      style={
        Object {
          "flex": 1,
          "justifyContent": "flex-end",
          "margin": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View
        style={
          Array [
            Object {},
            Object {
              "backgroundColor": "#CED7E0",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
              Object {
                "backgroundColor": "#F0F3F5",
              },
              Object {
                "borderColor": "#CED7E0",
              },
              Object {
                "padding": 0,
              },
              Object {
                "flexDirection": "row",
              },
              Object {
                "justifyContent": "space-between",
              },
              Object {
                "alignItems": "center",
              },
              Object {
                "paddingHorizontal": 12,
              },
              Object {
                "borderTopWidth": 1,
              },
              Object {
                "zIndex": 2,
              },
            ]
          }
        >
          <View
            accessible={false}
            collapsable={false}
            focusable={true}
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "#000",
                    "fontFamily": "System",
                    "fontSize": 16,
                  },
                  Object {
                    "padding": 8,
                  },
                  Object {
                    "marginBottom": 0,
                  },
                  Object {
                    "color": "#295EFF",
                  },
                  Object {
                    "textAlign": "left",
                  },
                ]
              }
              uppercase={false}
            >
              Cancelar
            </Text>
          </View>
          <View
            accessible={false}
            collapsable={false}
            focusable={true}
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "#000",
                    "fontFamily": "System",
                    "fontSize": 16,
                  },
                  Object {
                    "padding": 8,
                  },
                  Object {
                    "marginBottom": 0,
                  },
                  Object {
                    "color": "#295EFF",
                  },
                  Object {
                    "textAlign": "left",
                  },
                ]
              }
              uppercase={false}
            >
              Ok
            </Text>
          </View>
        </View>
        <RCTSafeAreaView
          emulateUnlessSupported={true}
        >
          <View
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <RNCPicker
              items={
                Array [
                  Object {
                    "label": "Bruno Fritsch, S.A",
                    "testID": "1",
                    "textColor": undefined,
                    "value": "1",
                  },
                  Object {
                    "label": "Consorcio corredora de Seguros LTD. 2020 asociados.",
                    "testID": "2",
                    "textColor": undefined,
                    "value": "2",
                  },
                ]
              }
              numberOfLines={1}
              onChange={[Function]}
              selectedIndex={0}
              style={
                Array [
                  Object {
                    "height": 216,
                  },
                  Object {
                    "color": "#000000",
                  },
                ]
              }
              testID=""
            />
          </View>
        </RCTSafeAreaView>
      </View>
    </View>
  </Modal>
</View>
`;
