import React from 'react';
import { Platform } from 'react-native';
import { fireEvent, render } from '@testing-library/react-native';
import { DateTimePicker } from '../../../../src/components/index';

describe('Test componente <DateTimePicker />', () => {
    const mockonDateChange = jest.fn();
    const value = new Date('2021-03-25');
    const testID = 'testid_select';

    test('Debería renderizar correctamente', () => {
        const { toJSON } = render(
            <DateTimePicker
                label="fecha"
                value={value}
                valueFormat="DD-MM-YYYY"
                onChange={mockonDateChange}
                helperText="Ejemplo Select custom con buscador y renderItem"
                iosMode="date"
                androidMode="date"
                testID={testID}
            />,
        );
        expect(toJSON()).toMatchSnapshot();
    });

    test('Debería renderizar correctamente para Android', () => {
        Platform.OS = 'android';
        const { toJSON } = render(
            <DateTimePicker
                label="fecha"
                value={value}
                valueFormat="DD-MM-YYYY"
                onChange={mockonDateChange}
                helperText="Ejemplo Select custom con buscador y renderItem"
                iosMode="date"
                androidMode="date"
                testID={testID}
                onPressRightButton={jest.fn()}
            />,
        );
        expect(toJSON()).toMatchSnapshot();
    });

    test('Debería abrir select', () => {
        const { getByTestId } = render(
            <DateTimePicker
                label="fecha"
                value={value}
                valueFormat="DD-MM-YYYY"
                onChange={mockonDateChange}
                helperText="Ejemplo Select custom con buscador y renderItem"
                iosMode="date"
                androidMode="date"
                testID={testID}
                onPressRightButton={jest.fn()}
                onPressLeftButton={jest.fn()}
            />,
        );
        const elemSelect = getByTestId(testID);
        fireEvent.press(elemSelect);
        expect(elemSelect).toBeDefined();
    });
});
