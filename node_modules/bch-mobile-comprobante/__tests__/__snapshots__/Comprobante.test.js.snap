// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test para componente Comprobante deberia renderizar correctamente 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#fff",
        "flex": 1,
        "height": 1334,
      },
      Object {
        "backgroundColor": "#fff",
      },
    ]
  }
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Array [
          Object {
            "flex": 1,
          },
          undefined,
        ],
        Object {
          "paddingBottom": 0,
        },
      ]
    }
  >
    <RCTScrollView
      behavior="padding"
      bounces={false}
      centerContent={false}
      contentContainerStyle={
        Array [
          false,
          undefined,
          undefined,
        ]
      }
      hasTabs={false}
      keyboardVerticalOffset={0}
      showsVerticalScrollIndicator={false}
      style={null}
    >
      <View>
        <View
          options={
            Object {
              "format": "jpg",
              "quality": 0.9,
              "result": "base64",
            }
          }
        />
      </View>
    </RCTScrollView>
  </View>
  <View
    collapsed={false}
    collapsible={false}
    duration={500}
    onLayout={[Function]}
    shadowTop={true}
    style={
      Array [
        Object {},
        Object {
          "elevation": 0,
          "minHeight": 64,
          "paddingBottom": 16,
          "paddingHorizontal": 16,
          "paddingTop": 16,
          "width": 750,
        },
        false,
        undefined,
        Object {
          "paddingBottom": 22,
        },
        Object {},
      ]
    }
    styleCollapsible={Object {}}
    tabBar={false}
  >
    <View
      style={
        Array [
          Object {},
          false,
          Object {},
        ]
      }
    >
      <View
        accessibilityLabel="Compartir"
        accessible={true}
        focusable={true}
        forwardedRef={[Function]}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "backgroundColor": "#007aff",
            "borderBottomWidth": null,
            "borderColor": "#007aff",
            "borderLeftWidth": null,
            "borderRadius": 5,
            "borderRightWidth": null,
            "borderTopWidth": null,
            "borderWidth": undefined,
            "elevation": 2,
            "flexDirection": "row",
            "height": 45,
            "justifyContent": "center",
            "marginBottom": 16,
            "opacity": 1,
            "paddingBottom": 6,
            "paddingTop": 6,
            "shadowColor": undefined,
            "shadowOffset": undefined,
            "shadowOpacity": undefined,
            "shadowRadius": undefined,
          }
        }
        testID="Compartir"
      >
        <BVLinearGradient
          colors={
            Array [
              4283794431,
              4280901375,
            ]
          }
          endPoint={
            Object {
              "x": 1,
              "y": 1,
            }
          }
          locations={null}
          startPoint={
            Object {
              "x": 0,
              "y": 0,
            }
          }
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderColor": "transparent",
                "borderRadius": 57,
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              },
              false,
              false,
              false,
              false,
              false,
              Object {
                "height": 56,
              },
              undefined,
              false,
            ]
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="box-only"
            style={
              Object {
                "borderRadius": 57,
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "opacity": undefined,
                  "paddingHorizontal": 24,
                  "paddingVertical": 16,
                  "zIndex": 2,
                }
              }
            >
              <Text
                accessibilityLabel=""
                accessible={true}
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Array [
                      Object {
                        "color": "#2A343D",
                      },
                      Object {
                        "fontSize": 24,
                      },
                      Array [
                        Object {
                          "fontSize": 20,
                        },
                        Object {},
                        Object {
                          "color": "#fff",
                        },
                        false,
                        false,
                        false,
                        false,
                        Object {
                          "marginRight": 12,
                        },
                        undefined,
                      ],
                    ],
                    Object {
                      "fontFamily": "icomoon",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
                testID=""
                type={false}
              >
                î¥­
              </Text>
              <Text
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#fff",
                      "fontFamily": "System",
                      "fontSize": 16.5,
                      "marginLeft": 0,
                      "marginRight": 0,
                      "paddingLeft": 16,
                      "paddingRight": 16,
                    },
                    Object {
                      "textTransform": "uppercase",
                    },
                    Object {},
                  ]
                }
                uppercase={false}
              >
                Compartir
              </Text>
            </View>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 57,
                  },
                ]
              }
            />
          </View>
        </BVLinearGradient>
      </View>
      <View
        accessibilityLabel="Volver"
        accessible={true}
        focusable={true}
        forwardedRef={[Function]}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "backgroundColor": "#007aff",
            "borderBottomWidth": null,
            "borderColor": "#007aff",
            "borderLeftWidth": null,
            "borderRadius": 5,
            "borderRightWidth": null,
            "borderTopWidth": null,
            "borderWidth": undefined,
            "elevation": 2,
            "flexDirection": "row",
            "height": 45,
            "justifyContent": "center",
            "opacity": 1,
            "paddingBottom": 6,
            "paddingTop": 6,
            "shadowColor": undefined,
            "shadowOffset": undefined,
            "shadowOpacity": undefined,
            "shadowRadius": undefined,
          }
        }
        testID="Volver"
      >
        <BVLinearGradient
          colors={
            Array [
              4294967295,
              4294967295,
            ]
          }
          endPoint={
            Object {
              "x": 1,
              "y": 1,
            }
          }
          locations={null}
          startPoint={
            Object {
              "x": 0,
              "y": 0,
            }
          }
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderColor": "transparent",
                "borderRadius": 57,
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              },
              Object {
                "borderWidth": 2,
              },
              false,
              Object {
                "borderColor": "#CED7E0",
              },
              false,
              false,
              Object {
                "height": 56,
              },
              undefined,
              false,
            ]
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="box-only"
            style={
              Object {
                "borderRadius": 57,
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "opacity": undefined,
                  "paddingHorizontal": 24,
                  "paddingVertical": 16,
                  "zIndex": 2,
                }
              }
            >
              <Text
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#fff",
                      "fontFamily": "System",
                      "fontSize": 16.5,
                      "marginLeft": 0,
                      "marginRight": 0,
                      "paddingLeft": 16,
                      "paddingRight": 16,
                    },
                    Object {
                      "textTransform": "uppercase",
                    },
                    Object {},
                  ]
                }
                uppercase={false}
              >
                Volver
              </Text>
            </View>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 57,
                  },
                ]
              }
            />
          </View>
        </BVLinearGradient>
      </View>
    </View>
  </View>
</View>
`;
