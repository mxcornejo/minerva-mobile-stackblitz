import React, { memo } from 'react';
import PropTypes from 'prop-types';
import {
    HelperStyle,
    View,
    Body,
    Skeleton,
    Card,
    CardItem,
    Grid,
    Col,
} from 'react-native-minerva';

const propsTypes = {
    movementsTC: PropTypes.bool.isRequired,
};

const defaultProps = {
    movementsTC: false,
};

const SkeletonMovimientos = ({ movementsTC }) => {
    return (
        <View style={[HelperStyle.pa_4, HelperStyle.pt_2, HelperStyle.minw_100]}>
            <Card transparent noShadow cardList style={[movementsTC ? HelperStyle.mb_0 : HelperStyle.mb_4]}>
                <CardItem avatar style={[HelperStyle.pl_0, HelperStyle.pb_2, movementsTC && HelperStyle.pt_0]}>
                    <Body>
                        <Skeleton numberOfItems={1} width={60} />
                    </Body>
                </CardItem>
            </Card>
            <Card cardList noShadow bordered style={HelperStyle.pv_2}>
                <CardItem avatar style={[HelperStyle.pt_2, HelperStyle.pb_2]}>
                    <Grid>
                        <Col size={1}>
                            <Skeleton numberOfItems={1} type="media" size={40} />
                        </Col>
                        <Col size={5} style={[HelperStyle.pl_5, HelperStyle.pt_2]}>
                            <Skeleton numberOfItems={1} />
                        </Col>
                        <Col size={2} style={[HelperStyle.pl_4, HelperStyle.pt_2]}>
                            <Skeleton numberOfItems={1} />
                        </Col>
                    </Grid>
                </CardItem>
                <CardItem avatar style={[HelperStyle.pt_2, HelperStyle.pb_2]}>
                    <Grid>
                        <Col size={1}>
                            <Skeleton numberOfItems={1} type="media" size={40} />
                        </Col>
                        <Col size={5} style={[HelperStyle.pl_5, HelperStyle.pt_2]}>
                            <Skeleton numberOfItems={1} />
                        </Col>
                        <Col size={2} style={[HelperStyle.pl_4, HelperStyle.pt_2]}>
                            <Skeleton numberOfItems={1} />
                        </Col>
                    </Grid>
                </CardItem>
                <CardItem avatar style={[HelperStyle.pt_2, HelperStyle.pb_2]}>
                    <Grid>
                        <Col size={1}>
                            <Skeleton numberOfItems={1} type="media" size={40} />
                        </Col>
                        <Col size={5} style={[HelperStyle.pl_5, HelperStyle.pt_2]}>
                            <Skeleton numberOfItems={1} />
                        </Col>
                        <Col size={2} style={[HelperStyle.pl_4, HelperStyle.pt_2]}>
                            <Skeleton numberOfItems={1} />
                        </Col>
                    </Grid>
                </CardItem>
            </Card>
            <Card transparent noShadow cardList style={[movementsTC ? HelperStyle.mb_0 : HelperStyle.mb_4]}>
                <CardItem avatar style={[HelperStyle.pl_0, HelperStyle.pb_2, movementsTC && HelperStyle.pt_0]}>
                    <Body>
                        <Skeleton numberOfItems={1} width={60} />
                    </Body>
                </CardItem>
            </Card>
            <Card cardList noShadow bordered style={HelperStyle.pv_2}>
                <CardItem avatar style={[HelperStyle.pt_2, HelperStyle.pb_2]}>
                    <Grid>
                        <Col size={1}>
                            <Skeleton numberOfItems={1} type="media" size={40} />
                        </Col>
                        <Col size={5} style={[HelperStyle.pl_5, HelperStyle.pt_2]}>
                            <Skeleton numberOfItems={1} />
                        </Col>
                        <Col size={2} style={[HelperStyle.pl_4, HelperStyle.pt_2]}>
                            <Skeleton numberOfItems={1} />
                        </Col>
                    </Grid>
                </CardItem>
            </Card>
            <Card transparent noShadow cardList style={[movementsTC ? HelperStyle.mb_0 : HelperStyle.mb_4]}>
                <CardItem avatar style={[HelperStyle.pl_0, HelperStyle.pb_2, movementsTC && HelperStyle.pt_0]}>
                    <Body>
                        <Skeleton numberOfItems={1} width={60} />
                    </Body>
                </CardItem>
            </Card>
            <Card cardList noShadow bordered style={HelperStyle.pv_2}>
                <CardItem avatar style={[HelperStyle.pt_2, HelperStyle.pb_2]}>
                    <Grid>
                        <Col size={1}>
                            <Skeleton numberOfItems={1} type="media" size={40} />
                        </Col>
                        <Col size={5} style={[HelperStyle.pl_5, HelperStyle.pt_2]}>
                            <Skeleton numberOfItems={1} />
                        </Col>
                        <Col size={2} style={[HelperStyle.pl_4, HelperStyle.pt_2]}>
                            <Skeleton numberOfItems={1} />
                        </Col>
                    </Grid>
                </CardItem>
                <CardItem avatar style={[HelperStyle.pt_2, HelperStyle.pb_2]}>
                    <Grid>
                        <Col size={1}>
                            <Skeleton numberOfItems={1} type="media" size={40} />
                        </Col>
                        <Col size={5} style={[HelperStyle.pl_5, HelperStyle.pt_2]}>
                            <Skeleton numberOfItems={1} />
                        </Col>
                        <Col size={2} style={[HelperStyle.pl_4, HelperStyle.pt_2]}>
                            <Skeleton numberOfItems={1} />
                        </Col>
                    </Grid>
                </CardItem>
            </Card>
        </View>
    );
};

SkeletonMovimientos.propTypes = propsTypes;
SkeletonMovimientos.defaultProps = defaultProps;

export default memo(SkeletonMovimientos);
